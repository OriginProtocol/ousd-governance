{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "MAX_LOCK_TIME",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_VOTE_MULTIPLE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_LOCK_TIME",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "pos",
          "type": "uint32"
        }
      ],
      "name": "checkpoints",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "fromBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint224",
              "name": "votes",
              "type": "uint224"
            }
          ],
          "internalType": "struct VoteLocker.Checkpoint",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "delegateBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "delegates",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPastTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPastVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "numCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingToken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "11": "/Users/tom/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/token/ERC20/ERC20.sol",
    "12": "/Users/tom/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/token/ERC20/IERC20.sol",
    "14": "/Users/tom/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "18": "/Users/tom/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/Context.sol",
    "26": "/Users/tom/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/math/Math.sol",
    "27": "/Users/tom/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/math/SafeCast.sol",
    "30": "contracts/VoteLocker.sol"
  },
  "ast": {
    "absolutePath": "contracts/VoteLocker.sol",
    "exportedSymbols": {
      "Context": [
        4429
      ],
      "ECDSA": [
        3823
      ],
      "ERC20": [
        1694
      ],
      "IERC20": [
        4382
      ],
      "IERC20Metadata": [
        4407
      ],
      "Math": [
        3911
      ],
      "SafeCast": [
        4304
      ],
      "Strings": [
        7023
      ],
      "VoteLocker": [
        1148
      ]
    },
    "id": 1149,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 282,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:30"
      },
      {
        "absolutePath": "/Users/tom/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/math/Math.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/math/Math.sol",
        "id": 283,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1149,
        "sourceUnit": 3912,
        "src": "58:81:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tom/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/token/ERC20/ERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/token/ERC20/ERC20.sol",
        "id": 284,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1149,
        "sourceUnit": 1695,
        "src": "140:83:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tom/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/math/SafeCast.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/math/SafeCast.sol",
        "id": 285,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1149,
        "sourceUnit": 4305,
        "src": "224:85:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tom/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/cryptography/ECDSA.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/cryptography/ECDSA.sol",
        "id": 286,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1149,
        "sourceUnit": 3824,
        "src": "310:90:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "VoteLocker",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 287,
          "nodeType": "StructuredDocumentation",
          "src": "402:826:30",
          "text": " @title VoteLocker\n @notice VoteLocker is smart contract that supports locking up of a staking token for increased\n         governance voting power. It is largely based on the ERC20Votes contract from openzeppelin\n         with some modificaitons to allow it to support lockups/vote boosting.\n - Voting power is determined by stake amount and lockup duration.\n - Implements a subset of the ERC20 standard (no transfers, allowance, etc.)\n - Implements the interfaces required by OpenZeppelin 4.x governance (VoteLocker) stack and exposes\n   the amount of votes a user has and total votes through standard ERC20 balanceOf/totalSupply\n   getters.\n - Removes vote delegation.\n TODO resolve issues with extending lockup expiry and fromTimestamp\n TODO vote boost never goes away after expiry ;("
        },
        "fullyImplemented": true,
        "id": 1148,
        "linearizedBaseContracts": [
          1148
        ],
        "name": "VoteLocker",
        "nameLocation": "1239:10:30",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 288,
              "nodeType": "StructuredDocumentation",
              "src": "1256:27:30",
              "text": "@notice ERC20 parameters"
            },
            "id": 290,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1303:5:30",
            "nodeType": "VariableDeclaration",
            "scope": 1148,
            "src": "1288:20:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 289,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1288:6:30",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 292,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1329:7:30",
            "nodeType": "VariableDeclaration",
            "scope": 1148,
            "src": "1314:22:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 291,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1314:6:30",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 294,
            "mutability": "mutable",
            "name": "_decimals",
            "nameLocation": "1356:9:30",
            "nodeType": "VariableDeclaration",
            "scope": 1148,
            "src": "1342:23:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 293,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1342:5:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "private"
          },
          {
            "canonicalName": "VoteLocker.Stake",
            "id": 303,
            "members": [
              {
                "constant": false,
                "id": 296,
                "mutability": "mutable",
                "name": "initialised",
                "nameLocation": "1400:11:30",
                "nodeType": "VariableDeclaration",
                "scope": 303,
                "src": "1395:16:30",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 295,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1395:4:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 298,
                "mutability": "mutable",
                "name": "fromTimestamp",
                "nameLocation": "1429:13:30",
                "nodeType": "VariableDeclaration",
                "scope": 303,
                "src": "1421:21:30",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 297,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1421:7:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 300,
                "mutability": "mutable",
                "name": "expiry",
                "nameLocation": "1460:6:30",
                "nodeType": "VariableDeclaration",
                "scope": 303,
                "src": "1452:14:30",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 299,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1452:7:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 302,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "1514:6:30",
                "nodeType": "VariableDeclaration",
                "scope": 303,
                "src": "1506:14:30",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint224",
                  "typeString": "uint224"
                },
                "typeName": {
                  "id": 301,
                  "name": "uint224",
                  "nodeType": "ElementaryTypeName",
                  "src": "1506:7:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint224",
                    "typeString": "uint224"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Stake",
            "nameLocation": "1379:5:30",
            "nodeType": "StructDefinition",
            "scope": 1148,
            "src": "1372:191:30",
            "visibility": "public"
          },
          {
            "canonicalName": "VoteLocker.Checkpoint",
            "id": 308,
            "members": [
              {
                "constant": false,
                "id": 305,
                "mutability": "mutable",
                "name": "fromBlock",
                "nameLocation": "1604:9:30",
                "nodeType": "VariableDeclaration",
                "scope": 308,
                "src": "1597:16:30",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 304,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1597:6:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 307,
                "mutability": "mutable",
                "name": "votes",
                "nameLocation": "1631:5:30",
                "nodeType": "VariableDeclaration",
                "scope": 308,
                "src": "1623:13:30",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint224",
                  "typeString": "uint224"
                },
                "typeName": {
                  "id": 306,
                  "name": "uint224",
                  "nodeType": "ElementaryTypeName",
                  "src": "1623:7:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint224",
                    "typeString": "uint224"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Checkpoint",
            "nameLocation": "1576:10:30",
            "nodeType": "StructDefinition",
            "scope": 1148,
            "src": "1569:74:30",
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 309,
              "nodeType": "StructuredDocumentation",
              "src": "1649:29:30",
              "text": "@notice Maximum lock time"
            },
            "functionSelector": "fa78668f",
            "id": 316,
            "mutability": "constant",
            "name": "MAX_LOCK_TIME",
            "nameLocation": "1707:13:30",
            "nodeType": "VariableDeclaration",
            "scope": 1148,
            "src": "1683:55:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 310,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1683:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_126144000_by_1",
                "typeString": "int_const 126144000"
              },
              "id": 315,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1460_by_1",
                  "typeString": "int_const 1460"
                },
                "id": 313,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "34",
                  "id": 311,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1723:1:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_4_by_1",
                    "typeString": "int_const 4"
                  },
                  "value": "4"
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "hexValue": "333635",
                  "id": 312,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1727:3:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_365_by_1",
                    "typeString": "int_const 365"
                  },
                  "value": "365"
                },
                "src": "1723:7:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1460_by_1",
                  "typeString": "int_const 1460"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3836343030",
                "id": 314,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1733:5:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_86400_by_1",
                  "typeString": "int_const 86400"
                },
                "value": "86400"
              },
              "src": "1723:15:30",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_126144000_by_1",
                "typeString": "int_const 126144000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 317,
              "nodeType": "StructuredDocumentation",
              "src": "1755:29:30",
              "text": "@notice Minimum lock time"
            },
            "functionSelector": "3ff03207",
            "id": 322,
            "mutability": "constant",
            "name": "MIN_LOCK_TIME",
            "nameLocation": "1813:13:30",
            "nodeType": "VariableDeclaration",
            "scope": 1148,
            "src": "1789:49:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 318,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1789:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_604800_by_1",
                "typeString": "int_const 604800"
              },
              "id": 321,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "37",
                "id": 319,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1829:1:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_7_by_1",
                  "typeString": "int_const 7"
                },
                "value": "7"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3836343030",
                "id": 320,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1833:5:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_86400_by_1",
                  "typeString": "int_const 86400"
                },
                "value": "86400"
              },
              "src": "1829:9:30",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_604800_by_1",
                "typeString": "int_const 604800"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 323,
              "nodeType": "StructuredDocumentation",
              "src": "1854:53:30",
              "text": "@notice Vote boost if locked for maximum duration"
            },
            "functionSelector": "9497497a",
            "id": 326,
            "mutability": "constant",
            "name": "MAX_VOTE_MULTIPLE",
            "nameLocation": "1936:17:30",
            "nodeType": "VariableDeclaration",
            "scope": 1148,
            "src": "1912:45:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 324,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1912:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "34",
              "id": 325,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1956:1:30",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_4_by_1",
                "typeString": "int_const 4"
              },
              "value": "4"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 327,
              "nodeType": "StructuredDocumentation",
              "src": "1963:37:30",
              "text": "@notice Checkpoints for each user"
            },
            "id": 333,
            "mutability": "mutable",
            "name": "_checkpoints",
            "nameLocation": "2046:12:30",
            "nodeType": "VariableDeclaration",
            "scope": 1148,
            "src": "2005:53:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct VoteLocker.Checkpoint[])"
            },
            "typeName": {
              "id": 332,
              "keyType": {
                "id": 328,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2013:7:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2005:32:30",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct VoteLocker.Checkpoint[])"
              },
              "valueType": {
                "baseType": {
                  "id": 330,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 329,
                    "name": "Checkpoint",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 308,
                    "src": "2024:10:30"
                  },
                  "referencedDeclaration": 308,
                  "src": "2024:10:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Checkpoint_$308_storage_ptr",
                    "typeString": "struct VoteLocker.Checkpoint"
                  }
                },
                "id": 331,
                "nodeType": "ArrayTypeName",
                "src": "2024:12:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_ptr",
                  "typeString": "struct VoteLocker.Checkpoint[]"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 334,
              "nodeType": "StructuredDocumentation",
              "src": "2064:31:30",
              "text": "@notice Stake for each user"
            },
            "id": 339,
            "mutability": "mutable",
            "name": "_stakes",
            "nameLocation": "2134:7:30",
            "nodeType": "VariableDeclaration",
            "scope": 1148,
            "src": "2100:41:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$303_storage_$",
              "typeString": "mapping(address => struct VoteLocker.Stake)"
            },
            "typeName": {
              "id": 338,
              "keyType": {
                "id": 335,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2108:7:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2100:25:30",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$303_storage_$",
                "typeString": "mapping(address => struct VoteLocker.Stake)"
              },
              "valueType": {
                "id": 337,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 336,
                  "name": "Stake",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 303,
                  "src": "2119:5:30"
                },
                "referencedDeclaration": 303,
                "src": "2119:5:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Stake_$303_storage_ptr",
                  "typeString": "struct VoteLocker.Stake"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 340,
              "nodeType": "StructuredDocumentation",
              "src": "2147:30:30",
              "text": "@notice Global checkpoints"
            },
            "id": 344,
            "mutability": "mutable",
            "name": "_totalSupplyCheckpoints",
            "nameLocation": "2203:23:30",
            "nodeType": "VariableDeclaration",
            "scope": 1148,
            "src": "2182:44:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage",
              "typeString": "struct VoteLocker.Checkpoint[]"
            },
            "typeName": {
              "baseType": {
                "id": 342,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 341,
                  "name": "Checkpoint",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 308,
                  "src": "2182:10:30"
                },
                "referencedDeclaration": 308,
                "src": "2182:10:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Checkpoint_$308_storage_ptr",
                  "typeString": "struct VoteLocker.Checkpoint"
                }
              },
              "id": 343,
              "nodeType": "ArrayTypeName",
              "src": "2182:12:30",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_ptr",
                "typeString": "struct VoteLocker.Checkpoint[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 345,
              "nodeType": "StructuredDocumentation",
              "src": "2232:43:30",
              "text": "@notice Token used for creating lockups"
            },
            "functionSelector": "72f702f3",
            "id": 348,
            "mutability": "mutable",
            "name": "stakingToken",
            "nameLocation": "2293:12:30",
            "nodeType": "VariableDeclaration",
            "scope": 1148,
            "src": "2280:25:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$1694",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 347,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 346,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1694,
                "src": "2280:5:30"
              },
              "referencedDeclaration": 1694,
              "src": "2280:5:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1694",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 406,
              "nodeType": "Block",
              "src": "2347:317:30",
              "statements": [
                {
                  "expression": {
                    "id": 357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 353,
                      "name": "stakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 348,
                      "src": "2357:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1694",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 355,
                          "name": "_stakingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "2378:13:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 354,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1694,
                        "src": "2372:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$1694_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2372:20:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1694",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "2357:35:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1694",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 358,
                  "nodeType": "ExpressionStatement",
                  "src": "2357:35:30"
                },
                {
                  "expression": {
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 359,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 290,
                      "src": "2402:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "566f7465204c6f636b6564",
                                  "id": 367,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2449:13:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_c3c1ea1ccb7453a7202228ce437f81ceccabc2fc94242308639818bb9743a020",
                                    "typeString": "literal_string \"Vote Locked\""
                                  },
                                  "value": "Vote Locked"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c3c1ea1ccb7453a7202228ce437f81ceccabc2fc94242308639818bb9743a020",
                                    "typeString": "literal_string \"Vote Locked\""
                                  }
                                ],
                                "id": 366,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2443:5:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 365,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2443:5:30",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 368,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2443:20:30",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "20",
                              "id": 369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2465:3:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                                "typeString": "literal_string \" \""
                              },
                              "value": " "
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 372,
                                      "name": "stakingToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 348,
                                      "src": "2476:12:30",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$1694",
                                        "typeString": "contract ERC20"
                                      }
                                    },
                                    "id": 373,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "name",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1203,
                                    "src": "2476:17:30",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                      "typeString": "function () view external returns (string memory)"
                                    }
                                  },
                                  "id": 374,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2476:19:30",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 371,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2470:5:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 370,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2470:5:30",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2470:26:30",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                                "typeString": "literal_string \" \""
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2430:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 362,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "2430:5:30",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "concat",
                            "nodeType": "MemberAccess",
                            "src": "2430:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2430:67:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2410:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 360,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2410:6:30",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2410:97:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2402:105:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 379,
                  "nodeType": "ExpressionStatement",
                  "src": "2402:105:30"
                },
                {
                  "expression": {
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 380,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 292,
                      "src": "2517:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "766c",
                                  "id": 388,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2566:4:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_b75ffd4d19ffdd7d2b11112665067b0c78247523431130d2461b6ef0d1cce4db",
                                    "typeString": "literal_string \"vl\""
                                  },
                                  "value": "vl"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_b75ffd4d19ffdd7d2b11112665067b0c78247523431130d2461b6ef0d1cce4db",
                                    "typeString": "literal_string \"vl\""
                                  }
                                ],
                                "id": 387,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2560:5:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 386,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2560:5:30",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 389,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2560:11:30",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 392,
                                      "name": "stakingToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 348,
                                      "src": "2579:12:30",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$1694",
                                        "typeString": "contract ERC20"
                                      }
                                    },
                                    "id": 393,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "symbol",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1213,
                                    "src": "2579:19:30",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                      "typeString": "function () view external returns (string memory)"
                                    }
                                  },
                                  "id": 394,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2579:21:30",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 391,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2573:5:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 390,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2573:5:30",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2573:28:30",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 384,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2547:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 383,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "2547:5:30",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "concat",
                            "nodeType": "MemberAccess",
                            "src": "2547:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2547:55:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2527:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 381,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2527:6:30",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2527:85:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2517:95:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 399,
                  "nodeType": "ExpressionStatement",
                  "src": "2517:95:30"
                },
                {
                  "expression": {
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 400,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 294,
                      "src": "2622:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 401,
                          "name": "stakingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 348,
                          "src": "2634:12:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$1694",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1223,
                        "src": "2634:21:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2634:23:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2622:35:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 405,
                  "nodeType": "ExpressionStatement",
                  "src": "2622:35:30"
                }
              ]
            },
            "id": 407,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 350,
                  "mutability": "mutable",
                  "name": "_stakingToken",
                  "nameLocation": "2332:13:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 407,
                  "src": "2324:21:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2324:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2323:23:30"
            },
            "returnParameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2347:0:30"
            },
            "scope": 1148,
            "src": "2312:352:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 415,
              "nodeType": "Block",
              "src": "2789:29:30",
              "statements": [
                {
                  "expression": {
                    "id": 413,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 290,
                    "src": "2806:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 412,
                  "id": 414,
                  "nodeType": "Return",
                  "src": "2799:12:30"
                }
              ]
            },
            "documentation": {
              "id": 408,
              "nodeType": "StructuredDocumentation",
              "src": "2670:54:30",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 416,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2738:4:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2742:2:30"
            },
            "returnParameters": {
              "id": 412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 411,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 416,
                  "src": "2774:13:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 410,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2774:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2773:15:30"
            },
            "scope": 1148,
            "src": "2729:89:30",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 424,
              "nodeType": "Block",
              "src": "2993:31:30",
              "statements": [
                {
                  "expression": {
                    "id": 422,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 292,
                    "src": "3010:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 421,
                  "id": 423,
                  "nodeType": "Return",
                  "src": "3003:14:30"
                }
              ]
            },
            "documentation": {
              "id": 417,
              "nodeType": "StructuredDocumentation",
              "src": "2824:102:30",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 425,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2940:6:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2946:2:30"
            },
            "returnParameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 420,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 425,
                  "src": "2978:13:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 419,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2978:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2977:15:30"
            },
            "scope": 1148,
            "src": "2931:93:30",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 433,
              "nodeType": "Block",
              "src": "3504:33:30",
              "statements": [
                {
                  "expression": {
                    "id": 431,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 294,
                    "src": "3521:9:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 430,
                  "id": 432,
                  "nodeType": "Return",
                  "src": "3514:16:30"
                }
              ]
            },
            "documentation": {
              "id": 426,
              "nodeType": "StructuredDocumentation",
              "src": "3030:413:30",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;"
            },
            "functionSelector": "313ce567",
            "id": 434,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "3457:8:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3465:2:30"
            },
            "returnParameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "3497:5:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3497:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3496:7:30"
            },
            "scope": 1148,
            "src": "3448:89:30",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 456,
              "nodeType": "Block",
              "src": "3657:184:30",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 440,
                        "name": "_totalSupplyCheckpoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "3671:23:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage",
                          "typeString": "struct VoteLocker.Checkpoint storage ref[] storage ref"
                        }
                      },
                      "id": 441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3671:30:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3705:1:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3671:35:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 447,
                  "nodeType": "IfStatement",
                  "src": "3667:74:30",
                  "trueBody": {
                    "id": 446,
                    "nodeType": "Block",
                    "src": "3708:33:30",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3729:1:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 439,
                        "id": 445,
                        "nodeType": "Return",
                        "src": "3722:8:30"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 448,
                        "name": "_totalSupplyCheckpoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "3769:23:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage",
                          "typeString": "struct VoteLocker.Checkpoint storage ref[] storage ref"
                        }
                      },
                      "id": 453,
                      "indexExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 449,
                            "name": "_totalSupplyCheckpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 344,
                            "src": "3793:23:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage",
                              "typeString": "struct VoteLocker.Checkpoint storage ref[] storage ref"
                            }
                          },
                          "id": 450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3793:30:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3826:1:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3793:34:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3769:59:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Checkpoint_$308_storage",
                        "typeString": "struct VoteLocker.Checkpoint storage ref"
                      }
                    },
                    "id": 454,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "votes",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 307,
                    "src": "3769:65:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint224",
                      "typeString": "uint224"
                    }
                  },
                  "functionReturnParameters": 439,
                  "id": 455,
                  "nodeType": "Return",
                  "src": "3750:84:30"
                }
              ]
            },
            "documentation": {
              "id": 435,
              "nodeType": "StructuredDocumentation",
              "src": "3543:48:30",
              "text": " @dev See {ERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 457,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "3605:11:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3616:2:30"
            },
            "returnParameters": {
              "id": 439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 438,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "3648:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3648:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3647:9:30"
            },
            "scope": 1148,
            "src": "3596:245:30",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 469,
              "nodeType": "Block",
              "src": "3973:42:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 466,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 460,
                        "src": "3999:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 465,
                      "name": "getVotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 544,
                      "src": "3990:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3990:18:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 464,
                  "id": 468,
                  "nodeType": "Return",
                  "src": "3983:25:30"
                }
              ]
            },
            "documentation": {
              "id": 458,
              "nodeType": "StructuredDocumentation",
              "src": "3847:46:30",
              "text": " @dev See {ERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 470,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3907:9:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 460,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "3925:8:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 470,
                  "src": "3917:16:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 459,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3917:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3916:18:30"
            },
            "returnParameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 463,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 470,
                  "src": "3964:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3964:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3963:9:30"
            },
            "scope": 1148,
            "src": "3898:117:30",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 487,
              "nodeType": "Block",
              "src": "4226:50:30",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 481,
                        "name": "_checkpoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 333,
                        "src": "4243:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct VoteLocker.Checkpoint storage ref[] storage ref)"
                        }
                      },
                      "id": 483,
                      "indexExpression": {
                        "id": 482,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 473,
                        "src": "4256:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4243:21:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage",
                        "typeString": "struct VoteLocker.Checkpoint storage ref[] storage ref"
                      }
                    },
                    "id": 485,
                    "indexExpression": {
                      "id": 484,
                      "name": "pos",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 475,
                      "src": "4265:3:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4243:26:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Checkpoint_$308_storage",
                      "typeString": "struct VoteLocker.Checkpoint storage ref"
                    }
                  },
                  "functionReturnParameters": 480,
                  "id": 486,
                  "nodeType": "Return",
                  "src": "4236:33:30"
                }
              ]
            },
            "documentation": {
              "id": 471,
              "nodeType": "StructuredDocumentation",
              "src": "4021:66:30",
              "text": " @dev Get the `pos`-th checkpoint for `account`."
            },
            "functionSelector": "f1127ed8",
            "id": 488,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkpoints",
            "nameLocation": "4101:11:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 473,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4121:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "4113:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 472,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4113:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 475,
                  "mutability": "mutable",
                  "name": "pos",
                  "nameLocation": "4137:3:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "4130:10:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 474,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4130:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4112:29:30"
            },
            "returnParameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 479,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "4203:17:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Checkpoint_$308_memory_ptr",
                    "typeString": "struct VoteLocker.Checkpoint"
                  },
                  "typeName": {
                    "id": 478,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 477,
                      "name": "Checkpoint",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 308,
                      "src": "4203:10:30"
                    },
                    "referencedDeclaration": 308,
                    "src": "4203:10:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Checkpoint_$308_storage_ptr",
                      "typeString": "struct VoteLocker.Checkpoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4202:19:30"
            },
            "scope": 1148,
            "src": "4092:184:30",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 504,
              "nodeType": "Block",
              "src": "4465:71:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 498,
                            "name": "_checkpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 333,
                            "src": "4500:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct VoteLocker.Checkpoint storage ref[] storage ref)"
                            }
                          },
                          "id": 500,
                          "indexExpression": {
                            "id": 499,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 491,
                            "src": "4513:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4500:21:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage",
                            "typeString": "struct VoteLocker.Checkpoint storage ref[] storage ref"
                          }
                        },
                        "id": 501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "4500:28:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 496,
                        "name": "SafeCast",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4304,
                        "src": "4482:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeCast_$4304_$",
                          "typeString": "type(library SafeCast)"
                        }
                      },
                      "id": 497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toUint32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4039,
                      "src": "4482:17:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint32_$",
                        "typeString": "function (uint256) pure returns (uint32)"
                      }
                    },
                    "id": 502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4482:47:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 495,
                  "id": 503,
                  "nodeType": "Return",
                  "src": "4475:54:30"
                }
              ]
            },
            "documentation": {
              "id": 489,
              "nodeType": "StructuredDocumentation",
              "src": "4282:64:30",
              "text": " @dev Get number of checkpoints for `account`."
            },
            "functionSelector": "6fcfff45",
            "id": 505,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "numCheckpoints",
            "nameLocation": "4360:14:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 491,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4383:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 505,
                  "src": "4375:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 490,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4375:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4374:17:30"
            },
            "returnParameters": {
              "id": 495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 494,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 505,
                  "src": "4453:6:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 493,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4453:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4452:8:30"
            },
            "scope": 1148,
            "src": "4351:185:30",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 513,
              "nodeType": "Block",
              "src": "4698:2:30",
              "statements": []
            },
            "documentation": {
              "id": 506,
              "nodeType": "StructuredDocumentation",
              "src": "4542:77:30",
              "text": " @dev Get the address `account` is currently delegating to."
            },
            "functionSelector": "587cde1e",
            "id": 514,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegates",
            "nameLocation": "4633:9:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 508,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4651:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 514,
                  "src": "4643:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 507,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4643:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4642:17:30"
            },
            "returnParameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 511,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 514,
                  "src": "4689:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4689:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4688:9:30"
            },
            "scope": 1148,
            "src": "4624:76:30",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 543,
              "nodeType": "Block",
              "src": "4844:127:30",
              "statements": [
                {
                  "assignments": [
                    523
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 523,
                      "mutability": "mutable",
                      "name": "pos",
                      "nameLocation": "4862:3:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 543,
                      "src": "4854:11:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 522,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4854:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 528,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 524,
                        "name": "_checkpoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 333,
                        "src": "4868:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct VoteLocker.Checkpoint storage ref[] storage ref)"
                        }
                      },
                      "id": 526,
                      "indexExpression": {
                        "id": 525,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 517,
                        "src": "4881:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4868:21:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage",
                        "typeString": "struct VoteLocker.Checkpoint storage ref[] storage ref"
                      }
                    },
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "4868:28:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4854:42:30"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 529,
                        "name": "pos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 523,
                        "src": "4913:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4920:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4913:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 533,
                            "name": "_checkpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 333,
                            "src": "4928:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct VoteLocker.Checkpoint storage ref[] storage ref)"
                            }
                          },
                          "id": 535,
                          "indexExpression": {
                            "id": 534,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 517,
                            "src": "4941:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4928:21:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage",
                            "typeString": "struct VoteLocker.Checkpoint storage ref[] storage ref"
                          }
                        },
                        "id": 539,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 536,
                            "name": "pos",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 523,
                            "src": "4950:3:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4956:1:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4950:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4928:30:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Checkpoint_$308_storage",
                          "typeString": "struct VoteLocker.Checkpoint storage ref"
                        }
                      },
                      "id": 540,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "votes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 307,
                      "src": "4928:36:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint224",
                        "typeString": "uint224"
                      }
                    },
                    "id": 541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4913:51:30",
                    "trueExpression": {
                      "hexValue": "30",
                      "id": 532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4924:1:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint224",
                      "typeString": "uint224"
                    }
                  },
                  "functionReturnParameters": 521,
                  "id": 542,
                  "nodeType": "Return",
                  "src": "4906:58:30"
                }
              ]
            },
            "documentation": {
              "id": 515,
              "nodeType": "StructuredDocumentation",
              "src": "4706:68:30",
              "text": " @dev Gets the current votes balance for `account`"
            },
            "functionSelector": "9ab24eb0",
            "id": 544,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVotes",
            "nameLocation": "4788:8:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 517,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4805:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 544,
                  "src": "4797:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 516,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4797:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4796:17:30"
            },
            "returnParameters": {
              "id": 521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 520,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 544,
                  "src": "4835:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 519,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4835:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4834:9:30"
            },
            "scope": 1148,
            "src": "4779:192:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 569,
              "nodeType": "Block",
              "src": "5282:158:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 555,
                          "name": "blockNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 549,
                          "src": "5300:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 556,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5314:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "5314:12:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5300:26:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f74654c6f636b65723a20626c6f636b206e6f7420796574206d696e6564",
                        "id": 559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5328:33:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c82c13c8e9b15c13fe571c413ddae1b019fde739210a0d03b5b2f0e3452cf31a",
                          "typeString": "literal_string \"VoteLocker: block not yet mined\""
                        },
                        "value": "VoteLocker: block not yet mined"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c82c13c8e9b15c13fe571c413ddae1b019fde739210a0d03b5b2f0e3452cf31a",
                          "typeString": "literal_string \"VoteLocker: block not yet mined\""
                        }
                      ],
                      "id": 554,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5292:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5292:70:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 561,
                  "nodeType": "ExpressionStatement",
                  "src": "5292:70:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 563,
                          "name": "_checkpoints",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 333,
                          "src": "5398:12:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct VoteLocker.Checkpoint storage ref[] storage ref)"
                          }
                        },
                        "id": 565,
                        "indexExpression": {
                          "id": 564,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 547,
                          "src": "5411:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5398:21:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage",
                          "typeString": "struct VoteLocker.Checkpoint storage ref[] storage ref"
                        }
                      },
                      {
                        "id": 566,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 549,
                        "src": "5421:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage",
                          "typeString": "struct VoteLocker.Checkpoint storage ref[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 562,
                      "name": "_checkpointsLookup",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 658,
                      "src": "5379:18:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (struct VoteLocker.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"
                      }
                    },
                    "id": 567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5379:54:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 553,
                  "id": 568,
                  "nodeType": "Return",
                  "src": "5372:61:30"
                }
              ]
            },
            "documentation": {
              "id": 545,
              "nodeType": "StructuredDocumentation",
              "src": "4977:182:30",
              "text": " @dev Retrieve the number of votes for `account` at the end of `blockNumber`.\n Requirements:\n - `blockNumber` must have been already mined"
            },
            "functionSelector": "3a46b1a8",
            "id": 570,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPastVotes",
            "nameLocation": "5173:12:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 547,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5194:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "5186:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5186:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 549,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "5211:11:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "5203:19:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 548,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5203:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5185:38:30"
            },
            "returnParameters": {
              "id": 553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 552,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "5269:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 551,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5269:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5268:9:30"
            },
            "scope": 1148,
            "src": "5164:276:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 591,
              "nodeType": "Block",
              "src": "5769:160:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 579,
                          "name": "blockNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 573,
                          "src": "5787:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 580,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5801:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "5801:12:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5787:26:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f74654c6f636b65723a20626c6f636b206e6f7420796574206d696e6564",
                        "id": 583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5815:33:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c82c13c8e9b15c13fe571c413ddae1b019fde739210a0d03b5b2f0e3452cf31a",
                          "typeString": "literal_string \"VoteLocker: block not yet mined\""
                        },
                        "value": "VoteLocker: block not yet mined"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c82c13c8e9b15c13fe571c413ddae1b019fde739210a0d03b5b2f0e3452cf31a",
                          "typeString": "literal_string \"VoteLocker: block not yet mined\""
                        }
                      ],
                      "id": 578,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5779:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5779:70:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 585,
                  "nodeType": "ExpressionStatement",
                  "src": "5779:70:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 587,
                        "name": "_totalSupplyCheckpoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "5885:23:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage",
                          "typeString": "struct VoteLocker.Checkpoint storage ref[] storage ref"
                        }
                      },
                      {
                        "id": 588,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 573,
                        "src": "5910:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage",
                          "typeString": "struct VoteLocker.Checkpoint storage ref[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 586,
                      "name": "_checkpointsLookup",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 658,
                      "src": "5866:18:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (struct VoteLocker.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"
                      }
                    },
                    "id": 589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5866:56:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 577,
                  "id": 590,
                  "nodeType": "Return",
                  "src": "5859:63:30"
                }
              ]
            },
            "documentation": {
              "id": 571,
              "nodeType": "StructuredDocumentation",
              "src": "5446:211:30",
              "text": " @dev Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances.\n Requirements:\n - `blockNumber` must have been already mined"
            },
            "functionSelector": "8e539e8c",
            "id": 592,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPastTotalSupply",
            "nameLocation": "5671:18:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 573,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "5698:11:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 592,
                  "src": "5690:19:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 572,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5690:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5689:21:30"
            },
            "returnParameters": {
              "id": 577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 576,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 592,
                  "src": "5756:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 575,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5756:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5755:9:30"
            },
            "scope": 1148,
            "src": "5662:267:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 657,
              "nodeType": "Block",
              "src": "6149:1349:30",
              "statements": [
                {
                  "assignments": [
                    605
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 605,
                      "mutability": "mutable",
                      "name": "high",
                      "nameLocation": "7155:4:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 657,
                      "src": "7147:12:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 604,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7147:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 608,
                  "initialValue": {
                    "expression": {
                      "id": 606,
                      "name": "ckpts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 597,
                      "src": "7162:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_ptr",
                        "typeString": "struct VoteLocker.Checkpoint storage ref[] storage pointer"
                      }
                    },
                    "id": 607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "7162:12:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7147:27:30"
                },
                {
                  "assignments": [
                    610
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 610,
                      "mutability": "mutable",
                      "name": "low",
                      "nameLocation": "7192:3:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 657,
                      "src": "7184:11:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 609,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7184:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 612,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7198:1:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7184:15:30"
                },
                {
                  "body": {
                    "id": 643,
                    "nodeType": "Block",
                    "src": "7228:210:30",
                    "statements": [
                      {
                        "assignments": [
                          617
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 617,
                            "mutability": "mutable",
                            "name": "mid",
                            "nameLocation": "7250:3:30",
                            "nodeType": "VariableDeclaration",
                            "scope": 643,
                            "src": "7242:11:30",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 616,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7242:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 623,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 620,
                              "name": "low",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 610,
                              "src": "7269:3:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 621,
                              "name": "high",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 605,
                              "src": "7274:4:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 618,
                              "name": "Math",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3911,
                              "src": "7256:4:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Math_$3911_$",
                                "typeString": "type(library Math)"
                              }
                            },
                            "id": 619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "average",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3885,
                            "src": "7256:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7256:23:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7242:37:30"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 624,
                                "name": "ckpts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 597,
                                "src": "7297:5:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_ptr",
                                  "typeString": "struct VoteLocker.Checkpoint storage ref[] storage pointer"
                                }
                              },
                              "id": 626,
                              "indexExpression": {
                                "id": 625,
                                "name": "mid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 617,
                                "src": "7303:3:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7297:10:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$308_storage",
                                "typeString": "struct VoteLocker.Checkpoint storage ref"
                              }
                            },
                            "id": 627,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fromBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 305,
                            "src": "7297:20:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 628,
                            "name": "blockNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 599,
                            "src": "7320:11:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7297:34:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 641,
                          "nodeType": "Block",
                          "src": "7382:46:30",
                          "statements": [
                            {
                              "expression": {
                                "id": 639,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 635,
                                  "name": "low",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 610,
                                  "src": "7400:3:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 638,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 636,
                                    "name": "mid",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 617,
                                    "src": "7406:3:30",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 637,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7412:1:30",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "7406:7:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7400:13:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 640,
                              "nodeType": "ExpressionStatement",
                              "src": "7400:13:30"
                            }
                          ]
                        },
                        "id": 642,
                        "nodeType": "IfStatement",
                        "src": "7293:135:30",
                        "trueBody": {
                          "id": 634,
                          "nodeType": "Block",
                          "src": "7333:43:30",
                          "statements": [
                            {
                              "expression": {
                                "id": 632,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 630,
                                  "name": "high",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 605,
                                  "src": "7351:4:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 631,
                                  "name": "mid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 617,
                                  "src": "7358:3:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7351:10:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 633,
                              "nodeType": "ExpressionStatement",
                              "src": "7351:10:30"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 613,
                      "name": "low",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 610,
                      "src": "7216:3:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 614,
                      "name": "high",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 605,
                      "src": "7222:4:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7216:10:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 644,
                  "nodeType": "WhileStatement",
                  "src": "7209:229:30"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 645,
                        "name": "high",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "7454:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7462:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7454:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 649,
                          "name": "ckpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 597,
                          "src": "7470:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_ptr",
                            "typeString": "struct VoteLocker.Checkpoint storage ref[] storage pointer"
                          }
                        },
                        "id": 653,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 650,
                            "name": "high",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 605,
                            "src": "7476:4:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7483:1:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "7476:8:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7470:15:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Checkpoint_$308_storage",
                          "typeString": "struct VoteLocker.Checkpoint storage ref"
                        }
                      },
                      "id": 654,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "votes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 307,
                      "src": "7470:21:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint224",
                        "typeString": "uint224"
                      }
                    },
                    "id": 655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "7454:37:30",
                    "trueExpression": {
                      "hexValue": "30",
                      "id": 648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7466:1:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint224",
                      "typeString": "uint224"
                    }
                  },
                  "functionReturnParameters": 603,
                  "id": 656,
                  "nodeType": "Return",
                  "src": "7447:44:30"
                }
              ]
            },
            "documentation": {
              "id": 593,
              "nodeType": "StructuredDocumentation",
              "src": "5935:73:30",
              "text": " @dev Lookup a value in a list of (sorted) checkpoints."
            },
            "id": 658,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkpointsLookup",
            "nameLocation": "6022:18:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 597,
                  "mutability": "mutable",
                  "name": "ckpts",
                  "nameLocation": "6062:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 658,
                  "src": "6041:26:30",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_ptr",
                    "typeString": "struct VoteLocker.Checkpoint[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 595,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 594,
                        "name": "Checkpoint",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 308,
                        "src": "6041:10:30"
                      },
                      "referencedDeclaration": 308,
                      "src": "6041:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Checkpoint_$308_storage_ptr",
                        "typeString": "struct VoteLocker.Checkpoint"
                      }
                    },
                    "id": 596,
                    "nodeType": "ArrayTypeName",
                    "src": "6041:12:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_ptr",
                      "typeString": "struct VoteLocker.Checkpoint[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 599,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "6077:11:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 658,
                  "src": "6069:19:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6069:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6040:49:30"
            },
            "returnParameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 602,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 658,
                  "src": "6136:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 601,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6136:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6135:9:30"
            },
            "scope": 1148,
            "src": "6013:1485:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 691,
              "nodeType": "Block",
              "src": "7743:165:30",
              "statements": [
                {
                  "assignments": [
                    671
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 671,
                      "mutability": "mutable",
                      "name": "votes",
                      "nameLocation": "7761:5:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 691,
                      "src": "7753:13:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 670,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7753:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 688,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 672,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 661,
                      "src": "7781:6:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 681,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 675,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 673,
                                      "name": "expiry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 663,
                                      "src": "7792:6:30",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 674,
                                      "name": "fromTimestamp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 665,
                                      "src": "7801:13:30",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7792:22:30",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 676,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "7791:24:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 679,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 677,
                                      "name": "MAX_VOTE_MULTIPLE",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 326,
                                      "src": "7819:17:30",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 678,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7839:1:30",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "7819:21:30",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 680,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "7818:23:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7791:50:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 682,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 661,
                              "src": "7844:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7791:59:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 684,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7790:61:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 685,
                        "name": "MAX_LOCK_TIME",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 316,
                        "src": "7866:13:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7790:89:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7781:98:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7753:126:30"
                },
                {
                  "expression": {
                    "id": 689,
                    "name": "votes",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 671,
                    "src": "7896:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 669,
                  "id": 690,
                  "nodeType": "Return",
                  "src": "7889:12:30"
                }
              ]
            },
            "documentation": {
              "id": 659,
              "nodeType": "StructuredDocumentation",
              "src": "7504:84:30",
              "text": " @dev Calculate the votes from a stake and expiry in a checkpoint."
            },
            "id": 692,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_calculateVotesFromStake",
            "nameLocation": "7602:24:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 661,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7644:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 692,
                  "src": "7636:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 660,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7636:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 663,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "7668:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 692,
                  "src": "7660:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 662,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7660:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 665,
                  "mutability": "mutable",
                  "name": "fromTimestamp",
                  "nameLocation": "7692:13:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 692,
                  "src": "7684:21:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 664,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7684:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7626:85:30"
            },
            "returnParameters": {
              "id": 669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 668,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 692,
                  "src": "7734:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 667,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7734:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7733:9:30"
            },
            "scope": 1148,
            "src": "7593:315:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 702,
              "nodeType": "Block",
              "src": "8041:54:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "44656c65676174696f6e206973206e6f7420737570706f72746564",
                        "id": 699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8058:29:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a50db5a1d1ed20a767500028d340ca6b7c05f9ab2f3b1ee18f08e64630b35625",
                          "typeString": "literal_string \"Delegation is not supported\""
                        },
                        "value": "Delegation is not supported"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a50db5a1d1ed20a767500028d340ca6b7c05f9ab2f3b1ee18f08e64630b35625",
                          "typeString": "literal_string \"Delegation is not supported\""
                        }
                      ],
                      "id": 698,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "8051:6:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8051:37:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 701,
                  "nodeType": "ExpressionStatement",
                  "src": "8051:37:30"
                }
              ]
            },
            "documentation": {
              "id": 693,
              "nodeType": "StructuredDocumentation",
              "src": "7914:70:30",
              "text": " @dev Delegate votes from the sender to `delegatee`."
            },
            "functionSelector": "5c19a95c",
            "id": 703,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegate",
            "nameLocation": "7998:8:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 695,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nameLocation": "8015:9:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 703,
                  "src": "8007:17:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8007:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8006:19:30"
            },
            "returnParameters": {
              "id": 697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8041:0:30"
            },
            "scope": 1148,
            "src": "7989:106:30",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 723,
              "nodeType": "Block",
              "src": "8345:67:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "44656c65676174696f6e206279207369676e6174757265206973206e6f7420737570706f72746564",
                        "id": 720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8362:42:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_363030ddc2802ce60b2561f9d455eb760d64d644e9afd2893cd1634e588eb887",
                          "typeString": "literal_string \"Delegation by signature is not supported\""
                        },
                        "value": "Delegation by signature is not supported"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_363030ddc2802ce60b2561f9d455eb760d64d644e9afd2893cd1634e588eb887",
                          "typeString": "literal_string \"Delegation by signature is not supported\""
                        }
                      ],
                      "id": 719,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "8355:6:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8355:50:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 722,
                  "nodeType": "ExpressionStatement",
                  "src": "8355:50:30"
                }
              ]
            },
            "documentation": {
              "id": 704,
              "nodeType": "StructuredDocumentation",
              "src": "8101:66:30",
              "text": " @dev Delegates votes from signer to `delegatee`"
            },
            "functionSelector": "c3cda520",
            "id": 724,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegateBySig",
            "nameLocation": "8181:13:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 706,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nameLocation": "8212:9:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 724,
                  "src": "8204:17:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 705,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8204:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 708,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "8239:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 724,
                  "src": "8231:13:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 707,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8231:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 710,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "8262:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 724,
                  "src": "8254:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 709,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8254:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 712,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "8284:1:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 724,
                  "src": "8278:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 711,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "8278:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 714,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "8303:1:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 724,
                  "src": "8295:9:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 713,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8295:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 716,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "8322:1:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 724,
                  "src": "8314:9:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 715,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8314:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8194:135:30"
            },
            "returnParameters": {
              "id": 718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8345:0:30"
            },
            "scope": 1148,
            "src": "8172:240:30",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 736,
              "nodeType": "Block",
              "src": "8576:41:30",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8598:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint224_$",
                            "typeString": "type(uint224)"
                          },
                          "typeName": {
                            "id": 731,
                            "name": "uint224",
                            "nodeType": "ElementaryTypeName",
                            "src": "8598:7:30",
                            "typeDescriptions": {}
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_uint224_$",
                            "typeString": "type(uint224)"
                          }
                        ],
                        "id": 730,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -27,
                        "src": "8593:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8593:13:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_uint224",
                        "typeString": "type(uint224)"
                      }
                    },
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "max",
                    "nodeType": "MemberAccess",
                    "src": "8593:17:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint224",
                      "typeString": "uint224"
                    }
                  },
                  "functionReturnParameters": 729,
                  "id": 735,
                  "nodeType": "Return",
                  "src": "8586:24:30"
                }
              ]
            },
            "documentation": {
              "id": 725,
              "nodeType": "StructuredDocumentation",
              "src": "8418:91:30",
              "text": " @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1)."
            },
            "id": 737,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_maxSupply",
            "nameLocation": "8523:10:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8533:2:30"
            },
            "returnParameters": {
              "id": 729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 728,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 737,
                  "src": "8567:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint224",
                    "typeString": "uint224"
                  },
                  "typeName": {
                    "id": 727,
                    "name": "uint224",
                    "nodeType": "ElementaryTypeName",
                    "src": "8567:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint224",
                      "typeString": "uint224"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8566:9:30"
            },
            "scope": 1148,
            "src": "8514:103:30",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 875,
              "nodeType": "Block",
              "src": "8818:1518:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 746,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 742,
                          "src": "8836:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 747,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "8845:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "8845:15:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8836:24:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "457870697279206d75737420626520696e2074686520667574757265",
                        "id": 750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8862:30:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9131781f89c549f0cf1247e4cd085717e4b7b593c719cb501e5c587cc320bca8",
                          "typeString": "literal_string \"Expiry must be in the future\""
                        },
                        "value": "Expiry must be in the future"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9131781f89c549f0cf1247e4cd085717e4b7b593c719cb501e5c587cc320bca8",
                          "typeString": "literal_string \"Expiry must be in the future\""
                        }
                      ],
                      "id": 745,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8828:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8828:65:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 752,
                  "nodeType": "ExpressionStatement",
                  "src": "8828:65:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 754,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 742,
                          "src": "8924:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 755,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "8934:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "8934:15:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 757,
                            "name": "MAX_LOCK_TIME",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 316,
                            "src": "8952:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8934:31:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8924:41:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "457870697279206d757374206265206265666f7265206d6178696d756d206c6f636b75702074696d65",
                        "id": 760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8979:43:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b4c4d816529485d7af0488a9bcf314c968932e5d764787603510f702353c690e",
                          "typeString": "literal_string \"Expiry must be before maximum lockup time\""
                        },
                        "value": "Expiry must be before maximum lockup time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b4c4d816529485d7af0488a9bcf314c968932e5d764787603510f702353c690e",
                          "typeString": "literal_string \"Expiry must be before maximum lockup time\""
                        }
                      ],
                      "id": 753,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8903:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8903:129:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 762,
                  "nodeType": "ExpressionStatement",
                  "src": "8903:129:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 764,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 742,
                          "src": "9063:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 765,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "9073:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "9073:15:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 767,
                            "name": "MIN_LOCK_TIME",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 322,
                            "src": "9091:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9073:31:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9063:41:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "457870697279206d757374206265206166746572206d696e696d756d206c6f636b75702074696d65",
                        "id": 770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9118:42:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62416520083184c480123ce46c54ca7e70de1001df7920c5d1236facf207c65f",
                          "typeString": "literal_string \"Expiry must be after minimum lockup time\""
                        },
                        "value": "Expiry must be after minimum lockup time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62416520083184c480123ce46c54ca7e70de1001df7920c5d1236facf207c65f",
                          "typeString": "literal_string \"Expiry must be after minimum lockup time\""
                        }
                      ],
                      "id": 763,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9042:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9042:128:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 772,
                  "nodeType": "ExpressionStatement",
                  "src": "9042:128:30"
                },
                {
                  "assignments": [
                    774
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 774,
                      "mutability": "mutable",
                      "name": "oldVotes",
                      "nameLocation": "9253:8:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 875,
                      "src": "9245:16:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 773,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9245:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 799,
                  "initialValue": {
                    "condition": {
                      "expression": {
                        "baseExpression": {
                          "id": 775,
                          "name": "_stakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 339,
                          "src": "9264:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$303_storage_$",
                            "typeString": "mapping(address => struct VoteLocker.Stake storage ref)"
                          }
                        },
                        "id": 778,
                        "indexExpression": {
                          "expression": {
                            "id": 776,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9272:3:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9272:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9264:19:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$303_storage",
                          "typeString": "struct VoteLocker.Stake storage ref"
                        }
                      },
                      "id": 779,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialised",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 296,
                      "src": "9264:31:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9462:1:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "9264:199:30",
                    "trueExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 781,
                              "name": "_stakes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 339,
                              "src": "9336:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$303_storage_$",
                                "typeString": "mapping(address => struct VoteLocker.Stake storage ref)"
                              }
                            },
                            "id": 784,
                            "indexExpression": {
                              "expression": {
                                "id": 782,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9344:3:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 783,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9344:10:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9336:19:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$303_storage",
                              "typeString": "struct VoteLocker.Stake storage ref"
                            }
                          },
                          "id": 785,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 302,
                          "src": "9336:26:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 786,
                              "name": "_stakes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 339,
                              "src": "9376:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$303_storage_$",
                                "typeString": "mapping(address => struct VoteLocker.Stake storage ref)"
                              }
                            },
                            "id": 789,
                            "indexExpression": {
                              "expression": {
                                "id": 787,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9384:3:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 788,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9384:10:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9376:19:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$303_storage",
                              "typeString": "struct VoteLocker.Stake storage ref"
                            }
                          },
                          "id": 790,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expiry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 300,
                          "src": "9376:26:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 791,
                              "name": "_stakes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 339,
                              "src": "9416:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$303_storage_$",
                                "typeString": "mapping(address => struct VoteLocker.Stake storage ref)"
                              }
                            },
                            "id": 794,
                            "indexExpression": {
                              "expression": {
                                "id": 792,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9424:3:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9424:10:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9416:19:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$303_storage",
                              "typeString": "struct VoteLocker.Stake storage ref"
                            }
                          },
                          "id": 795,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fromTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 298,
                          "src": "9416:33:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 780,
                        "name": "_calculateVotesFromStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 692,
                        "src": "9298:24:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                        }
                      },
                      "id": 796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9298:161:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9245:218:30"
                },
                {
                  "expression": {
                    "id": 820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 800,
                        "name": "_stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 339,
                        "src": "9550:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$303_storage_$",
                          "typeString": "mapping(address => struct VoteLocker.Stake storage ref)"
                        }
                      },
                      "id": 803,
                      "indexExpression": {
                        "expression": {
                          "id": 801,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9558:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9558:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9550:19:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$303_storage",
                        "typeString": "struct VoteLocker.Stake storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "74727565",
                          "id": 805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9605:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "expression": {
                            "id": 806,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "9638:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "9638:15:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          },
                          "id": 817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 808,
                                "name": "_stakes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 339,
                                "src": "9675:7:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$303_storage_$",
                                  "typeString": "mapping(address => struct VoteLocker.Stake storage ref)"
                                }
                              },
                              "id": 811,
                              "indexExpression": {
                                "expression": {
                                  "id": 809,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "9683:3:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 810,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "9683:10:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9675:19:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$303_storage",
                                "typeString": "struct VoteLocker.Stake storage ref"
                              }
                            },
                            "id": 812,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 302,
                            "src": "9675:26:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 815,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 740,
                                "src": "9723:6:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 813,
                                "name": "SafeCast",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4304,
                                "src": "9704:8:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_SafeCast_$4304_$",
                                  "typeString": "type(library SafeCast)"
                                }
                              },
                              "id": 814,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toUint224",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3939,
                              "src": "9704:18:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint224_$",
                                "typeString": "function (uint256) pure returns (uint224)"
                              }
                            },
                            "id": 816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9704:26:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          "src": "9675:55:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        {
                          "id": 818,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 742,
                          "src": "9752:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 804,
                        "name": "Stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "9572:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Stake_$303_storage_ptr_$",
                          "typeString": "type(struct VoteLocker.Stake storage pointer)"
                        }
                      },
                      "id": 819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "initialised",
                        "fromTimestamp",
                        "amount",
                        "expiry"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "9572:197:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$303_memory_ptr",
                        "typeString": "struct VoteLocker.Stake memory"
                      }
                    },
                    "src": "9550:219:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$303_storage",
                      "typeString": "struct VoteLocker.Stake storage ref"
                    }
                  },
                  "id": 821,
                  "nodeType": "ExpressionStatement",
                  "src": "9550:219:30"
                },
                {
                  "assignments": [
                    823
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 823,
                      "mutability": "mutable",
                      "name": "newVotes",
                      "nameLocation": "9837:8:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 875,
                      "src": "9829:16:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 822,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9829:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 838,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 825,
                            "name": "_stakes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 339,
                            "src": "9886:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$303_storage_$",
                              "typeString": "mapping(address => struct VoteLocker.Stake storage ref)"
                            }
                          },
                          "id": 828,
                          "indexExpression": {
                            "expression": {
                              "id": 826,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9894:3:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9894:10:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9886:19:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$303_storage",
                            "typeString": "struct VoteLocker.Stake storage ref"
                          }
                        },
                        "id": 829,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 302,
                        "src": "9886:26:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 830,
                            "name": "_stakes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 339,
                            "src": "9926:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$303_storage_$",
                              "typeString": "mapping(address => struct VoteLocker.Stake storage ref)"
                            }
                          },
                          "id": 833,
                          "indexExpression": {
                            "expression": {
                              "id": 831,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9934:3:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9934:10:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9926:19:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$303_storage",
                            "typeString": "struct VoteLocker.Stake storage ref"
                          }
                        },
                        "id": 834,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expiry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 300,
                        "src": "9926:26:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 835,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "9966:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "9966:15:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 824,
                      "name": "_calculateVotesFromStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 692,
                      "src": "9848:24:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9848:143:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9829:162:30"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 839,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 740,
                      "src": "10006:6:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10015:1:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10006:10:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 855,
                  "nodeType": "IfStatement",
                  "src": "10002:168:30",
                  "trueBody": {
                    "id": 854,
                    "nodeType": "Block",
                    "src": "10018:152:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 845,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10125:3:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 846,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10125:10:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 849,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "10145:4:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_VoteLocker_$1148",
                                    "typeString": "contract VoteLocker"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_VoteLocker_$1148",
                                    "typeString": "contract VoteLocker"
                                  }
                                ],
                                "id": 848,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10137:7:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 847,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10137:7:30",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 850,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10137:13:30",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 851,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 740,
                              "src": "10152:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 842,
                              "name": "stakingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 348,
                              "src": "10099:12:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$1694",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1355,
                            "src": "10099:25:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10099:60:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 853,
                        "nodeType": "ExpressionStatement",
                        "src": "10099:60:30"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 857,
                          "name": "_checkpoints",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 333,
                          "src": "10197:12:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct VoteLocker.Checkpoint storage ref[] storage ref)"
                          }
                        },
                        "id": 860,
                        "indexExpression": {
                          "expression": {
                            "id": 858,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10210:3:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10210:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10197:24:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage",
                          "typeString": "struct VoteLocker.Checkpoint storage ref[] storage ref"
                        }
                      },
                      {
                        "id": 861,
                        "name": "_add",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1132,
                        "src": "10223:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 862,
                          "name": "newVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 823,
                          "src": "10229:8:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 863,
                          "name": "oldVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 774,
                          "src": "10240:8:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10229:19:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage",
                          "typeString": "struct VoteLocker.Checkpoint storage ref[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 856,
                      "name": "_writeCheckpoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1117,
                      "src": "10180:16:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (struct VoteLocker.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10180:69:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 866,
                  "nodeType": "ExpressionStatement",
                  "src": "10180:69:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 868,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10297:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10297:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 870,
                          "name": "newVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 823,
                          "src": "10309:8:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 871,
                          "name": "oldVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 774,
                          "src": "10320:8:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10309:19:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 867,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 900,
                      "src": "10291:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10291:38:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 874,
                  "nodeType": "ExpressionStatement",
                  "src": "10291:38:30"
                }
              ]
            },
            "documentation": {
              "id": 738,
              "nodeType": "StructuredDocumentation",
              "src": "8623:126:30",
              "text": " @dev Deposits staking token and mints new tokens according to the MAX_VOTE_MULTIPLE and _expiry parameters."
            },
            "functionSelector": "e2bbb158",
            "id": 876,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "8763:7:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 740,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8779:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "8771:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 739,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8771:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 742,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "8795:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "8787:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 741,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8787:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8770:32:30"
            },
            "returnParameters": {
              "id": 744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8818:0:30"
            },
            "scope": 1148,
            "src": "8754:1582:30",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 899,
              "nodeType": "Block",
              "src": "10490:206:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 885,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 457,
                            "src": "10521:11:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10521:13:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 887,
                            "name": "_maxSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 737,
                            "src": "10538:10:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint224_$",
                              "typeString": "function () view returns (uint224)"
                            }
                          },
                          "id": 888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10538:12:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "src": "10521:29:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f74654c6f636b65723a20746f74616c20737570706c79207269736b73206f766572666c6f77696e6720766f746573",
                        "id": 890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10564:50:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_279bf732839cad1b50e48fd7c948aa904af13a23cfb84854418edd1c05ea0728",
                          "typeString": "literal_string \"VoteLocker: total supply risks overflowing votes\""
                        },
                        "value": "VoteLocker: total supply risks overflowing votes"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_279bf732839cad1b50e48fd7c948aa904af13a23cfb84854418edd1c05ea0728",
                          "typeString": "literal_string \"VoteLocker: total supply risks overflowing votes\""
                        }
                      ],
                      "id": 884,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10500:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10500:124:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 892,
                  "nodeType": "ExpressionStatement",
                  "src": "10500:124:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 894,
                        "name": "_totalSupplyCheckpoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "10651:23:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage",
                          "typeString": "struct VoteLocker.Checkpoint storage ref[] storage ref"
                        }
                      },
                      {
                        "id": 895,
                        "name": "_add",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1132,
                        "src": "10676:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      {
                        "id": 896,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 881,
                        "src": "10682:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage",
                          "typeString": "struct VoteLocker.Checkpoint storage ref[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 893,
                      "name": "_writeCheckpoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1117,
                      "src": "10634:16:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (struct VoteLocker.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10634:55:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 898,
                  "nodeType": "ExpressionStatement",
                  "src": "10634:55:30"
                }
              ]
            },
            "documentation": {
              "id": 877,
              "nodeType": "StructuredDocumentation",
              "src": "10342:78:30",
              "text": " @dev Snapshots the totalSupply after it has been increased."
            },
            "id": 900,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "10434:5:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 879,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10448:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "10440:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10440:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 881,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10465:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "10457:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 880,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10457:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10439:33:30"
            },
            "returnParameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10490:0:30"
            },
            "scope": 1148,
            "src": "10425:271:30",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1006,
              "nodeType": "Block",
              "src": "10811:1016:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 907,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "10829:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10838:1:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10829:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10841:31:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        },
                        "value": "Amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        }
                      ],
                      "id": 906,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10821:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10821:52:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 912,
                  "nodeType": "ExpressionStatement",
                  "src": "10821:52:30"
                },
                {
                  "assignments": [
                    915
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 915,
                      "mutability": "mutable",
                      "name": "existingStake",
                      "nameLocation": "10897:13:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 1006,
                      "src": "10884:26:30",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$303_memory_ptr",
                        "typeString": "struct VoteLocker.Stake"
                      },
                      "typeName": {
                        "id": 914,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 913,
                          "name": "Stake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 303,
                          "src": "10884:5:30"
                        },
                        "referencedDeclaration": 303,
                        "src": "10884:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$303_storage_ptr",
                          "typeString": "struct VoteLocker.Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 920,
                  "initialValue": {
                    "baseExpression": {
                      "id": 916,
                      "name": "_stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 339,
                      "src": "10913:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$303_storage_$",
                        "typeString": "mapping(address => struct VoteLocker.Stake storage ref)"
                      }
                    },
                    "id": 919,
                    "indexExpression": {
                      "expression": {
                        "id": 917,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "10921:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "10921:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10913:19:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$303_storage",
                      "typeString": "struct VoteLocker.Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10884:48:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        },
                        "id": 925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 922,
                            "name": "existingStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "10950:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$303_memory_ptr",
                              "typeString": "struct VoteLocker.Stake memory"
                            }
                          },
                          "id": 923,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 302,
                          "src": "10950:20:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10973:1:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10950:24:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f207374616b6520746f207769746864726177",
                        "id": 926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10976:22:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2157ff27c581d0c09d0fefae4820572f0bccc198ee5e28633f039d06e0011705",
                          "typeString": "literal_string \"No stake to withdraw\""
                        },
                        "value": "No stake to withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2157ff27c581d0c09d0fefae4820572f0bccc198ee5e28633f039d06e0011705",
                          "typeString": "literal_string \"No stake to withdraw\""
                        }
                      ],
                      "id": 921,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10942:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10942:57:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 928,
                  "nodeType": "ExpressionStatement",
                  "src": "10942:57:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 930,
                            "name": "existingStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "11017:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$303_memory_ptr",
                              "typeString": "struct VoteLocker.Stake memory"
                            }
                          },
                          "id": 931,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expiry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 300,
                          "src": "11017:20:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 932,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "11041:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11041:15:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11017:39:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6f636b7570206e6f742065787069726564",
                        "id": 935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11058:20:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5b8f0263712dba54f751702cec05560e01e8a6a3f4fc9171628c4ac15f2f057",
                          "typeString": "literal_string \"Lockup not expired\""
                        },
                        "value": "Lockup not expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5b8f0263712dba54f751702cec05560e01e8a6a3f4fc9171628c4ac15f2f057",
                          "typeString": "literal_string \"Lockup not expired\""
                        }
                      ],
                      "id": 929,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11009:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11009:70:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 937,
                  "nodeType": "ExpressionStatement",
                  "src": "11009:70:30"
                },
                {
                  "assignments": [
                    939
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 939,
                      "mutability": "mutable",
                      "name": "oldVotes",
                      "nameLocation": "11098:8:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 1006,
                      "src": "11090:16:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 938,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11090:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 948,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 941,
                          "name": "existingStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 915,
                          "src": "11147:13:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$303_memory_ptr",
                            "typeString": "struct VoteLocker.Stake memory"
                          }
                        },
                        "id": 942,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 302,
                        "src": "11147:20:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        }
                      },
                      {
                        "expression": {
                          "id": 943,
                          "name": "existingStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 915,
                          "src": "11181:13:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$303_memory_ptr",
                            "typeString": "struct VoteLocker.Stake memory"
                          }
                        },
                        "id": 944,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expiry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 300,
                        "src": "11181:20:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 945,
                          "name": "existingStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 915,
                          "src": "11215:13:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$303_memory_ptr",
                            "typeString": "struct VoteLocker.Stake memory"
                          }
                        },
                        "id": 946,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fromTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 298,
                        "src": "11215:27:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 940,
                      "name": "_calculateVotesFromStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 692,
                      "src": "11109:24:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11109:143:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11090:162:30"
                },
                {
                  "assignments": [
                    950
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 950,
                      "mutability": "mutable",
                      "name": "newVotes",
                      "nameLocation": "11271:8:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 1006,
                      "src": "11263:16:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 949,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11263:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 964,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        },
                        "id": 958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 952,
                            "name": "existingStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "11320:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$303_memory_ptr",
                              "typeString": "struct VoteLocker.Stake memory"
                            }
                          },
                          "id": 953,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 302,
                          "src": "11320:20:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 956,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 903,
                              "src": "11362:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 954,
                              "name": "SafeCast",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4304,
                              "src": "11343:8:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeCast_$4304_$",
                                "typeString": "type(library SafeCast)"
                              }
                            },
                            "id": 955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "toUint224",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3939,
                            "src": "11343:18:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint224_$",
                              "typeString": "function (uint256) pure returns (uint224)"
                            }
                          },
                          "id": 957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11343:26:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "src": "11320:49:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        }
                      },
                      {
                        "expression": {
                          "id": 959,
                          "name": "existingStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 915,
                          "src": "11383:13:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$303_memory_ptr",
                            "typeString": "struct VoteLocker.Stake memory"
                          }
                        },
                        "id": 960,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expiry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 300,
                        "src": "11383:20:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 961,
                          "name": "existingStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 915,
                          "src": "11417:13:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$303_memory_ptr",
                            "typeString": "struct VoteLocker.Stake memory"
                          }
                        },
                        "id": 962,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fromTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 298,
                        "src": "11417:27:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 951,
                      "name": "_calculateVotesFromStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 692,
                      "src": "11282:24:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11282:172:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11263:191:30"
                },
                {
                  "expression": {
                    "id": 972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 965,
                        "name": "existingStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 915,
                        "src": "11465:13:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$303_memory_ptr",
                          "typeString": "struct VoteLocker.Stake memory"
                        }
                      },
                      "id": 967,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 302,
                      "src": "11465:20:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint224",
                        "typeString": "uint224"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 970,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "11508:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 968,
                          "name": "SafeCast",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4304,
                          "src": "11489:8:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeCast_$4304_$",
                            "typeString": "type(library SafeCast)"
                          }
                        },
                        "id": 969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toUint224",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3939,
                        "src": "11489:18:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint224_$",
                          "typeString": "function (uint256) pure returns (uint224)"
                        }
                      },
                      "id": 971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11489:26:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint224",
                        "typeString": "uint224"
                      }
                    },
                    "src": "11465:50:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint224",
                      "typeString": "uint224"
                    }
                  },
                  "id": 973,
                  "nodeType": "ExpressionStatement",
                  "src": "11465:50:30"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 974,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 903,
                      "src": "11530:6:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11539:1:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11530:10:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 986,
                  "nodeType": "IfStatement",
                  "src": "11526:135:30",
                  "trueBody": {
                    "id": 985,
                    "nodeType": "Block",
                    "src": "11542:119:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 980,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11631:3:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 981,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11631:10:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 982,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 903,
                              "src": "11643:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 977,
                              "name": "stakingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 348,
                              "src": "11609:12:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$1694",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1268,
                            "src": "11609:21:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11609:41:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 984,
                        "nodeType": "ExpressionStatement",
                        "src": "11609:41:30"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 988,
                          "name": "_checkpoints",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 333,
                          "src": "11688:12:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct VoteLocker.Checkpoint storage ref[] storage ref)"
                          }
                        },
                        "id": 991,
                        "indexExpression": {
                          "expression": {
                            "id": 989,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11701:3:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "11701:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11688:24:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage",
                          "typeString": "struct VoteLocker.Checkpoint storage ref[] storage ref"
                        }
                      },
                      {
                        "id": 992,
                        "name": "_add",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1132,
                        "src": "11714:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 993,
                          "name": "oldVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 939,
                          "src": "11720:8:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 994,
                          "name": "newVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 950,
                          "src": "11731:8:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11720:19:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage",
                          "typeString": "struct VoteLocker.Checkpoint storage ref[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 987,
                      "name": "_writeCheckpoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1117,
                      "src": "11671:16:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (struct VoteLocker.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11671:69:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 997,
                  "nodeType": "ExpressionStatement",
                  "src": "11671:69:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 999,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11788:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11788:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1001,
                          "name": "oldVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 939,
                          "src": "11800:8:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 1002,
                          "name": "newVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 950,
                          "src": "11811:8:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11800:19:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 998,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1022,
                      "src": "11782:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11782:38:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1005,
                  "nodeType": "ExpressionStatement",
                  "src": "11782:38:30"
                }
              ]
            },
            "documentation": {
              "id": 901,
              "nodeType": "StructuredDocumentation",
              "src": "10702:63:30",
              "text": " @dev Withdraw tokens from an expired lockup."
            },
            "functionSelector": "2e1a7d4d",
            "id": 1007,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "10779:8:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 903,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10796:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 1007,
                  "src": "10788:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 902,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10788:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10787:16:30"
            },
            "returnParameters": {
              "id": 905,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10811:0:30"
            },
            "scope": 1148,
            "src": "10770:1057:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1021,
              "nodeType": "Block",
              "src": "11981:77:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1016,
                        "name": "_totalSupplyCheckpoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "12008:23:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage",
                          "typeString": "struct VoteLocker.Checkpoint storage ref[] storage ref"
                        }
                      },
                      {
                        "id": 1017,
                        "name": "_subtract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1147,
                        "src": "12033:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      {
                        "id": 1018,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "12044:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage",
                          "typeString": "struct VoteLocker.Checkpoint storage ref[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1015,
                      "name": "_writeCheckpoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1117,
                      "src": "11991:16:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (struct VoteLocker.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 1019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11991:60:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 1020,
                  "nodeType": "ExpressionStatement",
                  "src": "11991:60:30"
                }
              ]
            },
            "documentation": {
              "id": 1008,
              "nodeType": "StructuredDocumentation",
              "src": "11833:78:30",
              "text": " @dev Snapshots the totalSupply after it has been decreased."
            },
            "id": 1022,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "11925:5:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1010,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "11939:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 1022,
                  "src": "11931:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1009,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11931:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1012,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11956:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 1022,
                  "src": "11948:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1011,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11948:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11930:33:30"
            },
            "returnParameters": {
              "id": 1014,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11981:0:30"
            },
            "scope": 1148,
            "src": "11916:142:30",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1116,
              "nodeType": "Block",
              "src": "12339:511:30",
              "statements": [
                {
                  "assignments": [
                    1047
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1047,
                      "mutability": "mutable",
                      "name": "pos",
                      "nameLocation": "12357:3:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 1116,
                      "src": "12349:11:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1046,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12349:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1050,
                  "initialValue": {
                    "expression": {
                      "id": 1048,
                      "name": "ckpts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1027,
                      "src": "12363:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_ptr",
                        "typeString": "struct VoteLocker.Checkpoint storage ref[] storage pointer"
                      }
                    },
                    "id": 1049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "12363:12:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12349:26:30"
                },
                {
                  "expression": {
                    "id": 1063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1051,
                      "name": "oldWeight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1042,
                      "src": "12385:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1052,
                          "name": "pos",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1047,
                          "src": "12397:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12404:1:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12397:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1056,
                            "name": "ckpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1027,
                            "src": "12412:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_ptr",
                              "typeString": "struct VoteLocker.Checkpoint storage ref[] storage pointer"
                            }
                          },
                          "id": 1060,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1059,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1057,
                              "name": "pos",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1047,
                              "src": "12418:3:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1058,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12424:1:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "12418:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12412:14:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Checkpoint_$308_storage",
                            "typeString": "struct VoteLocker.Checkpoint storage ref"
                          }
                        },
                        "id": 1061,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "votes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 307,
                        "src": "12412:20:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        }
                      },
                      "id": 1062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "12397:35:30",
                      "trueExpression": {
                        "hexValue": "30",
                        "id": 1055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12408:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint224",
                        "typeString": "uint224"
                      }
                    },
                    "src": "12385:47:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1064,
                  "nodeType": "ExpressionStatement",
                  "src": "12385:47:30"
                },
                {
                  "expression": {
                    "id": 1070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1065,
                      "name": "newWeight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1044,
                      "src": "12442:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1067,
                          "name": "oldWeight",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1042,
                          "src": "12457:9:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1068,
                          "name": "delta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1039,
                          "src": "12468:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1066,
                        "name": "op",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1037,
                        "src": "12454:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) view returns (uint256)"
                        }
                      },
                      "id": 1069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12454:20:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12442:32:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1071,
                  "nodeType": "ExpressionStatement",
                  "src": "12442:32:30"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1072,
                        "name": "pos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1047,
                        "src": "12489:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12495:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "12489:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1075,
                            "name": "ckpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1027,
                            "src": "12500:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_ptr",
                              "typeString": "struct VoteLocker.Checkpoint storage ref[] storage pointer"
                            }
                          },
                          "id": 1079,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1078,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1076,
                              "name": "pos",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1047,
                              "src": "12506:3:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1077,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12512:1:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "12506:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12500:14:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Checkpoint_$308_storage",
                            "typeString": "struct VoteLocker.Checkpoint storage ref"
                          }
                        },
                        "id": 1080,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fromBlock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 305,
                        "src": "12500:24:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 1081,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "12528:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "12528:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "12500:40:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "12489:51:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1114,
                    "nodeType": "Block",
                    "src": "12625:219:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 1104,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -4,
                                        "src": "12729:5:30",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 1105,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "number",
                                      "nodeType": "MemberAccess",
                                      "src": "12729:12:30",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1102,
                                      "name": "SafeCast",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4304,
                                      "src": "12711:8:30",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_SafeCast_$4304_$",
                                        "typeString": "type(library SafeCast)"
                                      }
                                    },
                                    "id": 1103,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "toUint32",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4039,
                                    "src": "12711:17:30",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint32_$",
                                      "typeString": "function (uint256) pure returns (uint32)"
                                    }
                                  },
                                  "id": 1106,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "12711:31:30",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 1109,
                                      "name": "newWeight",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1044,
                                      "src": "12790:9:30",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1107,
                                      "name": "SafeCast",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4304,
                                      "src": "12771:8:30",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_SafeCast_$4304_$",
                                        "typeString": "type(library SafeCast)"
                                      }
                                    },
                                    "id": 1108,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "toUint224",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3939,
                                    "src": "12771:18:30",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint224_$",
                                      "typeString": "function (uint256) pure returns (uint224)"
                                    }
                                  },
                                  "id": 1110,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "12771:29:30",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint224",
                                    "typeString": "uint224"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint224",
                                    "typeString": "uint224"
                                  }
                                ],
                                "id": 1101,
                                "name": "Checkpoint",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 308,
                                "src": "12667:10:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Checkpoint_$308_storage_ptr_$",
                                  "typeString": "type(struct VoteLocker.Checkpoint storage pointer)"
                                }
                              },
                              "id": 1111,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [
                                "fromBlock",
                                "votes"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "12667:152:30",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$308_memory_ptr",
                                "typeString": "struct VoteLocker.Checkpoint memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Checkpoint_$308_memory_ptr",
                                "typeString": "struct VoteLocker.Checkpoint memory"
                              }
                            ],
                            "expression": {
                              "id": 1098,
                              "name": "ckpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1027,
                              "src": "12639:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_ptr",
                                "typeString": "struct VoteLocker.Checkpoint storage ref[] storage pointer"
                              }
                            },
                            "id": 1100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "12639:10:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint_$308_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct VoteLocker.Checkpoint storage ref[] storage pointer,struct VoteLocker.Checkpoint storage ref)"
                            }
                          },
                          "id": 1112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12639:194:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1113,
                        "nodeType": "ExpressionStatement",
                        "src": "12639:194:30"
                      }
                    ]
                  },
                  "id": 1115,
                  "nodeType": "IfStatement",
                  "src": "12485:359:30",
                  "trueBody": {
                    "id": 1097,
                    "nodeType": "Block",
                    "src": "12542:77:30",
                    "statements": [
                      {
                        "expression": {
                          "id": 1095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1085,
                                "name": "ckpts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1027,
                                "src": "12556:5:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_ptr",
                                  "typeString": "struct VoteLocker.Checkpoint storage ref[] storage pointer"
                                }
                              },
                              "id": 1089,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1088,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1086,
                                  "name": "pos",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1047,
                                  "src": "12562:3:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 1087,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12568:1:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "12562:7:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12556:14:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$308_storage",
                                "typeString": "struct VoteLocker.Checkpoint storage ref"
                              }
                            },
                            "id": 1090,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "votes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 307,
                            "src": "12556:20:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1093,
                                "name": "newWeight",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1044,
                                "src": "12598:9:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1091,
                                "name": "SafeCast",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4304,
                                "src": "12579:8:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_SafeCast_$4304_$",
                                  "typeString": "type(library SafeCast)"
                                }
                              },
                              "id": 1092,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toUint224",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3939,
                              "src": "12579:18:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint224_$",
                                "typeString": "function (uint256) pure returns (uint224)"
                              }
                            },
                            "id": 1094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12579:29:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          "src": "12556:52:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "id": 1096,
                        "nodeType": "ExpressionStatement",
                        "src": "12556:52:30"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1023,
              "nodeType": "StructuredDocumentation",
              "src": "12064:62:30",
              "text": " @dev Withdraws all tokens from the account."
            },
            "id": 1117,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_writeCheckpoint",
            "nameLocation": "12140:16:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1027,
                  "mutability": "mutable",
                  "name": "ckpts",
                  "nameLocation": "12187:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 1117,
                  "src": "12166:26:30",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_ptr",
                    "typeString": "struct VoteLocker.Checkpoint[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1025,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1024,
                        "name": "Checkpoint",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 308,
                        "src": "12166:10:30"
                      },
                      "referencedDeclaration": 308,
                      "src": "12166:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Checkpoint_$308_storage_ptr",
                        "typeString": "struct VoteLocker.Checkpoint"
                      }
                    },
                    "id": 1026,
                    "nodeType": "ArrayTypeName",
                    "src": "12166:12:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Checkpoint_$308_storage_$dyn_storage_ptr",
                      "typeString": "struct VoteLocker.Checkpoint[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1037,
                  "mutability": "mutable",
                  "name": "op",
                  "nameLocation": "12252:2:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 1117,
                  "src": "12202:52:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                    "typeString": "function (uint256,uint256) view returns (uint256)"
                  },
                  "typeName": {
                    "id": 1036,
                    "nodeType": "FunctionTypeName",
                    "parameterTypes": {
                      "id": 1032,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 1029,
                          "mutability": "mutable",
                          "name": "",
                          "nameLocation": "-1:-1:-1",
                          "nodeType": "VariableDeclaration",
                          "scope": 1036,
                          "src": "12211:7:30",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1028,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "12211:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 1031,
                          "mutability": "mutable",
                          "name": "",
                          "nameLocation": "-1:-1:-1",
                          "nodeType": "VariableDeclaration",
                          "scope": 1036,
                          "src": "12220:7:30",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1030,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "12220:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "12210:18:30"
                    },
                    "returnParameterTypes": {
                      "id": 1035,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 1034,
                          "mutability": "mutable",
                          "name": "",
                          "nameLocation": "-1:-1:-1",
                          "nodeType": "VariableDeclaration",
                          "scope": 1036,
                          "src": "12243:7:30",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1033,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "12243:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "12242:9:30"
                    },
                    "src": "12202:52:30",
                    "stateMutability": "view",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                      "typeString": "function (uint256,uint256) view returns (uint256)"
                    },
                    "visibility": "internal"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1039,
                  "mutability": "mutable",
                  "name": "delta",
                  "nameLocation": "12272:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 1117,
                  "src": "12264:13:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1038,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12264:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12156:127:30"
            },
            "returnParameters": {
              "id": 1045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1042,
                  "mutability": "mutable",
                  "name": "oldWeight",
                  "nameLocation": "12309:9:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 1117,
                  "src": "12301:17:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1041,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12301:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1044,
                  "mutability": "mutable",
                  "name": "newWeight",
                  "nameLocation": "12328:9:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 1117,
                  "src": "12320:17:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1043,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12320:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12300:38:30"
            },
            "scope": 1148,
            "src": "12131:719:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1131,
              "nodeType": "Block",
              "src": "13016:29:30",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1127,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1120,
                      "src": "13033:1:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 1128,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1122,
                      "src": "13037:1:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13033:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1126,
                  "id": 1130,
                  "nodeType": "Return",
                  "src": "13026:12:30"
                }
              ]
            },
            "documentation": {
              "id": 1118,
              "nodeType": "StructuredDocumentation",
              "src": "12856:88:30",
              "text": " @dev Helper addition function for passing to checkpointing functions."
            },
            "id": 1132,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_add",
            "nameLocation": "12958:4:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1120,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "12971:1:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 1132,
                  "src": "12963:9:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12963:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1122,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "12982:1:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 1132,
                  "src": "12974:9:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12974:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12962:22:30"
            },
            "returnParameters": {
              "id": 1126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1125,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1132,
                  "src": "13007:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13007:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13006:9:30"
            },
            "scope": 1148,
            "src": "12949:96:30",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1146,
              "nodeType": "Block",
              "src": "13219:29:30",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1142,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1135,
                      "src": "13236:1:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1143,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1137,
                      "src": "13240:1:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13236:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1141,
                  "id": 1145,
                  "nodeType": "Return",
                  "src": "13229:12:30"
                }
              ]
            },
            "documentation": {
              "id": 1133,
              "nodeType": "StructuredDocumentation",
              "src": "13051:91:30",
              "text": " @dev Helper subtraction function for passing to checkpointing functions."
            },
            "id": 1147,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_subtract",
            "nameLocation": "13156:9:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1135,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "13174:1:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 1147,
                  "src": "13166:9:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13166:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1137,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "13185:1:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 1147,
                  "src": "13177:9:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13177:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13165:22:30"
            },
            "returnParameters": {
              "id": 1141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1140,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1147,
                  "src": "13210:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13210:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13209:9:30"
            },
            "scope": 1148,
            "src": "13147:101:30",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 1149,
        "src": "1230:12020:30",
        "usedErrors": []
      }
    ],
    "src": "33:13218:30"
  },
  "bytecode": "",
  "bytecodeSha1": "2404997de819999c62a4a99e26abc22de48b6c67",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "VoteLocker",
  "coverageMap": {
    "branches": {
      "11": {},
      "12": {},
      "14": {},
      "18": {},
      "26": {},
      "27": {
        "SafeCast.toUint224": {
          "62": [
            1219,
            1245,
            true
          ]
        },
        "SafeCast.toUint32": {
          "63": [
            3127,
            3152,
            true
          ]
        }
      },
      "30": {
        "VoteLocker._checkpointsLookup": {
          "59": [
            7297,
            7331,
            false
          ],
          "60": [
            7454,
            7463,
            true
          ]
        },
        "VoteLocker._mint": {
          "61": [
            10521,
            10550,
            true
          ]
        },
        "VoteLocker._writeCheckpoint": {
          "56": [
            12397,
            12405,
            true
          ],
          "57": [
            12489,
            12496,
            false
          ],
          "58": [
            12500,
            12540,
            false
          ]
        },
        "VoteLocker.deposit": {
          "51": [
            8836,
            8860,
            true
          ],
          "52": [
            8924,
            8965,
            true
          ],
          "53": [
            9063,
            9104,
            true
          ],
          "54": [
            9264,
            9295,
            true
          ],
          "55": [
            10006,
            10016,
            false
          ]
        },
        "VoteLocker.getPastTotalSupply": {
          "49": [
            5787,
            5813,
            true
          ]
        },
        "VoteLocker.getPastVotes": {
          "48": [
            5300,
            5326,
            true
          ]
        },
        "VoteLocker.getVotes": {
          "50": [
            4913,
            4921,
            true
          ]
        },
        "VoteLocker.withdraw": {
          "45": [
            10829,
            10839,
            true
          ],
          "46": [
            11017,
            11056,
            true
          ],
          "47": [
            11530,
            11540,
            false
          ]
        }
      }
    },
    "statements": {
      "11": {},
      "12": {},
      "14": {},
      "18": {},
      "26": {
        "Math.average": {
          "44": [
            781,
            809
          ]
        }
      },
      "27": {
        "SafeCast.toUint224": {
          "29": [
            1211,
            1289
          ],
          "30": [
            1299,
            1320
          ]
        },
        "SafeCast.toUint32": {
          "40": [
            3119,
            3195
          ]
        }
      },
      "30": {
        "VoteLocker._add": {
          "31": [
            13026,
            13038
          ]
        },
        "VoteLocker._burn": {
          "36": [
            11991,
            12051
          ]
        },
        "VoteLocker._checkpointsLookup": {
          "37": [
            7351,
            7361
          ],
          "38": [
            7400,
            7413
          ],
          "39": [
            7447,
            7491
          ]
        },
        "VoteLocker._mint": {
          "41": [
            10500,
            10624
          ],
          "42": [
            10634,
            10689
          ]
        },
        "VoteLocker._subtract": {
          "43": [
            13229,
            13241
          ]
        },
        "VoteLocker._writeCheckpoint": {
          "32": [
            12385,
            12432
          ],
          "33": [
            12442,
            12474
          ],
          "34": [
            12556,
            12608
          ],
          "35": [
            12639,
            12833
          ]
        },
        "VoteLocker.balanceOf": {
          "15": [
            3983,
            4008
          ]
        },
        "VoteLocker.checkpoints": {
          "28": [
            4236,
            4269
          ]
        },
        "VoteLocker.decimals": {
          "0": [
            3514,
            3530
          ]
        },
        "VoteLocker.delegate": {
          "13": [
            8051,
            8088
          ]
        },
        "VoteLocker.delegateBySig": {
          "20": [
            8355,
            8405
          ]
        },
        "VoteLocker.deposit": {
          "21": [
            8828,
            8893
          ],
          "22": [
            8903,
            9032
          ],
          "23": [
            9042,
            9170
          ],
          "24": [
            9550,
            9769
          ],
          "25": [
            10099,
            10159
          ],
          "26": [
            10180,
            10249
          ],
          "27": [
            10291,
            10329
          ]
        },
        "VoteLocker.getPastTotalSupply": {
          "16": [
            5779,
            5849
          ],
          "17": [
            5859,
            5922
          ]
        },
        "VoteLocker.getPastVotes": {
          "11": [
            5292,
            5362
          ],
          "12": [
            5372,
            5433
          ]
        },
        "VoteLocker.getVotes": {
          "19": [
            4906,
            4964
          ]
        },
        "VoteLocker.name": {
          "1": [
            2799,
            2811
          ]
        },
        "VoteLocker.numCheckpoints": {
          "14": [
            4475,
            4529
          ]
        },
        "VoteLocker.symbol": {
          "18": [
            3003,
            3017
          ]
        },
        "VoteLocker.totalSupply": {
          "2": [
            3722,
            3730
          ],
          "3": [
            3750,
            3834
          ]
        },
        "VoteLocker.withdraw": {
          "4": [
            10821,
            10873
          ],
          "5": [
            10942,
            10999
          ],
          "6": [
            11009,
            11079
          ],
          "7": [
            11465,
            11515
          ],
          "8": [
            11609,
            11650
          ],
          "9": [
            11671,
            11740
          ],
          "10": [
            11782,
            11820
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.4.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.4.2/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.4.2/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.4.2/IERC20Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.4.2/Math",
    "OpenZeppelin/openzeppelin-contracts@4.4.2/SafeCast"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad5780639ab24eb0116100715780639ab24eb014610251578063c3cda52014610264578063e2bbb15814610277578063f1127ed81461028a578063fa78668f146102c757600080fd5b806370a082311461020857806372f702f31461021b5780638e539e8c1461022e5780639497497a1461024157806395d89b411461024957600080fd5b80633a46b1a8116100f45780633a46b1a8146101845780633ff0320714610197578063587cde1e146101a15780635c19a95c146101cd5780636fcfff45146101e057600080fd5b806306fdde031461012657806318160ddd146101445780632e1a7d4d1461015a578063313ce5671461016f575b600080fd5b61012e6102d2565b60405161013b9190611002565b60405180910390f35b61014c610364565b60405190815260200161013b565b61016d610168366004611057565b6103b6565b005b60025460405160ff909116815260200161013b565b61014c61019236600461108c565b610628565b61014c62093a8081565b6101b56101af3660046110b6565b50600090565b6040516001600160a01b03909116815260200161013b565b61016d6101db3660046110b6565b6106a2565b6101f36101ee3660046110b6565b6106ea565b60405163ffffffff909116815260200161013b565b61014c6102163660046110b6565b610712565b6006546101b5906001600160a01b031681565b61014c61023c366004611057565b61071d565b61014c600481565b61012e610779565b61014c61025f3660046110b6565b610788565b61016d6102723660046110d1565b61080f565b61016d610285366004611131565b610868565b61029d610298366004611153565b610b60565b60408051825163ffffffff1681526020928301516001600160e01b0316928101929092520161013b565b61014c630784ce0081565b6060600080546102e190611193565b80601f016020809104026020016040519081016040528092919081815260200182805461030d90611193565b801561035a5780601f1061032f5761010080835404028352916020019161035a565b820191906000526020600020905b81548152906001019060200180831161033d57829003601f168201915b5050505050905090565b6005546000906103745750600090565b60058054610384906001906111e4565b81548110610394576103946111fb565b60009182526020909120015464010000000090046001600160e01b0316919050565b6000811161040b5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064015b60405180910390fd5b336000908152600460209081526040918290208251608081018452815460ff16151581526001820154928101929092526002810154928201929092526003909101546001600160e01b0316606082018190526104a05760405162461bcd60e51b81526020600482015260146024820152734e6f207374616b6520746f20776974686472617760601b6044820152606401610402565b42816040015111156104e95760405162461bcd60e51b8152602060048201526012602482015271131bd8dadd5c081b9bdd08195e1c1a5c995960721b6044820152606401610402565b600061050b82606001516001600160e01b031683604001518460200151610be4565b9050600061054261051b85610c34565b846060015161052a9190611211565b6001600160e01b031684604001518560200151610be4565b905061054d84610c34565b8360600181815161055e9190611211565b6001600160e01b031690525083156105e75760065460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156105c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e59190611239565b505b33600090815260036020526040902061060c90610ca161060784866111e4565b610cad565b5061062290503361061d83856111e4565b610e26565b50505050565b60004382106106795760405162461bcd60e51b815260206004820152601f60248201527f566f74654c6f636b65723a20626c6f636b206e6f7420796574206d696e6564006044820152606401610402565b6001600160a01b038316600090815260036020526040902061069b9083610e34565b9392505050565b60405162461bcd60e51b815260206004820152601b60248201527f44656c65676174696f6e206973206e6f7420737570706f7274656400000000006044820152606401610402565b6001600160a01b03811660009081526003602052604081205461070c90610ef1565b92915050565b600061070c82610788565b600043821061076e5760405162461bcd60e51b815260206004820152601f60248201527f566f74654c6f636b65723a20626c6f636b206e6f7420796574206d696e6564006044820152606401610402565b61070c600583610e34565b6060600180546102e190611193565b6001600160a01b03811660009081526003602052604081205480156107fc576001600160a01b03831660009081526003602052604090206107ca6001836111e4565b815481106107da576107da6111fb565b60009182526020909120015464010000000090046001600160e01b03166107ff565b60005b6001600160e01b03169392505050565b60405162461bcd60e51b815260206004820152602860248201527f44656c65676174696f6e206279207369676e6174757265206973206e6f7420736044820152671d5c1c1bdc9d195960c21b6064820152608401610402565b4281116108b75760405162461bcd60e51b815260206004820152601c60248201527f457870697279206d75737420626520696e2074686520667574757265000000006044820152606401610402565b6108c5630784ce004261125b565b8111156109265760405162461bcd60e51b815260206004820152602960248201527f457870697279206d757374206265206265666f7265206d6178696d756d206c6f604482015268636b75702074696d6560b81b6064820152608401610402565b61093362093a804261125b565b8110156109935760405162461bcd60e51b815260206004820152602860248201527f457870697279206d757374206265206166746572206d696e696d756d206c6f636044820152676b75702074696d6560c01b6064820152608401610402565b3360009081526004602052604081205460ff166109b15760006109e6565b336000908152600460205260409020600381015460028201546001909201546109e6926001600160e01b039092169190610be4565b90506040518060800160405280600115158152602001428152602001838152602001610a1185610c34565b33600090815260046020526040902060030154610a3791906001600160e01b0316611273565b6001600160e01b039081169091523360009081526004602090815260408083208551815460ff191690151517815591850151600183015584015160028201819055606090940151600390910180546001600160e01b0319169190931690811790925591610aa5919042610be4565b90508315610b2a576006546040516323b872dd60e01b8152336004820152306024820152604481018690526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610b04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b289190611239565b505b336000908152600360205260409020610b4a90610ca161060785856111e4565b50610622905033610b5b84846111e4565b610f56565b60408051808201909152600080825260208201526001600160a01b0383166000908152600360205260409020805463ffffffff8416908110610ba457610ba46111fb565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b600080630784ce0085610bf9600160046111e4565b610c0386886111e4565b610c0d919061129e565b610c17919061129e565b610c2191906112bd565b610c2b908661125b565b95945050505050565b60006001600160e01b03821115610c9d5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610402565b5090565b600061069b828461125b565b825460009081908015610cf85785610cc66001836111e4565b81548110610cd657610cd66111fb565b60009182526020909120015464010000000090046001600160e01b0316610cfb565b60005b6001600160e01b03169250610d1483858763ffffffff16565b9150600081118015610d5257504386610d2e6001846111e4565b81548110610d3e57610d3e6111fb565b60009182526020909120015463ffffffff16145b15610db257610d6082610c34565b86610d6c6001846111e4565b81548110610d7c57610d7c6111fb565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b03160217905550610e1d565b856040518060400160405280610dc743610ef1565b63ffffffff168152602001610ddb85610c34565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b50935093915050565b6106226005610fdb83610cad565b8154600090815b81811015610e98576000610e4f8284610fe7565b905084868281548110610e6457610e646111fb565b60009182526020909120015463ffffffff161115610e8457809250610e92565b610e8f81600161125b565b91505b50610e3b565b8115610edc5784610eaa6001846111e4565b81548110610eba57610eba6111fb565b60009182526020909120015464010000000090046001600160e01b0316610edf565b60005b6001600160e01b031695945050505050565b600063ffffffff821115610c9d5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610402565b6001600160e01b03610f66610364565b1115610fcd5760405162461bcd60e51b815260206004820152603060248201527f566f74654c6f636b65723a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b6064820152608401610402565b6106226005610ca183610cad565b600061069b82846111e4565b6000610ff660028484186112bd565b61069b9084841661125b565b600060208083528351808285015260005b8181101561102f57858101830151858201604001528201611013565b81811115611041576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561106957600080fd5b5035919050565b80356001600160a01b038116811461108757600080fd5b919050565b6000806040838503121561109f57600080fd5b6110a883611070565b946020939093013593505050565b6000602082840312156110c857600080fd5b61069b82611070565b60008060008060008060c087890312156110ea57600080fd5b6110f387611070565b95506020870135945060408701359350606087013560ff8116811461111757600080fd5b9598949750929560808101359460a0909101359350915050565b6000806040838503121561114457600080fd5b50508035926020909101359150565b6000806040838503121561116657600080fd5b61116f83611070565b9150602083013563ffffffff8116811461118857600080fd5b809150509250929050565b600181811c908216806111a757607f821691505b602082108114156111c857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156111f6576111f66111ce565b500390565b634e487b7160e01b600052603260045260246000fd5b60006001600160e01b0383811690831681811015611231576112316111ce565b039392505050565b60006020828403121561124b57600080fd5b8151801515811461069b57600080fd5b6000821982111561126e5761126e6111ce565b500190565b60006001600160e01b03828116848216808303821115611295576112956111ce565b01949350505050565b60008160001904831182151516156112b8576112b86111ce565b500290565b6000826112da57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122079d1ade328cd8def03261e6b1e6e07799f4124acf5daebe0d2c82d690ceefcf964736f6c634300080b0033",
  "deployedSourceMap": "1230:12020:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2729:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3596:245;;;:::i;:::-;;;762:25:31;;;750:2;735:18;3596:245:30;616:177:31;10770:1057:30;;;;;;:::i;:::-;;:::i;:::-;;3448:89;3521:9;;3448:89;;3521:9;;;;1125:36:31;;1113:2;1098:18;3448:89:30;983:184:31;5164:276:30;;;;;;:::i;:::-;;:::i;1789:49::-;;1829:9;1789:49;;4624:76;;;;;;:::i;:::-;-1:-1:-1;4689:7:30;;4624:76;;;;-1:-1:-1;;;;;1964:32:31;;;1946:51;;1934:2;1919:18;4624:76:30;1800:203:31;7989:106:30;;;;;;:::i;:::-;;:::i;4351:185::-;;;;;;:::i;:::-;;:::i;:::-;;;2182:10:31;2170:23;;;2152:42;;2140:2;2125:18;4351:185:30;2008:192:31;3898:117:30;;;;;;:::i;:::-;;:::i;2280:25::-;;;;;-1:-1:-1;;;;;2280:25:30;;;5662:267;;;;;;:::i;:::-;;:::i;1912:45::-;;1956:1;1912:45;;2931:93;;;:::i;4779:192::-;;;;;;:::i;:::-;;:::i;8172:240::-;;;;;;:::i;:::-;;:::i;8754:1582::-;;;;;;:::i;:::-;;:::i;4092:184::-;;;;;;:::i;:::-;;:::i;:::-;;;;3880:13:31;;3895:10;3876:30;3858:49;;3967:4;3955:17;;;3949:24;-1:-1:-1;;;;;3945:50:31;3923:20;;;3916:80;;;;3831:18;4092:184:30;3658:344:31;1683:55:30;;1723:15;1683:55;;2729:89;2774:13;2806:5;2799:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2729:89;:::o;3596:245::-;3671:23;:30;3648:7;;3667:74;;-1:-1:-1;3729:1:30;;3596:245::o;3667:74::-;3769:23;3793:30;;:34;;3826:1;;3793:34;:::i;:::-;3769:59;;;;;;;;:::i;:::-;;;;;;;;;;:65;;;;-1:-1:-1;;;;;3769:65:30;;;-1:-1:-1;3596:245:30:o;10770:1057::-;10838:1;10829:6;:10;10821:52;;;;-1:-1:-1;;;10821:52:30;;4988:2:31;10821:52:30;;;4970:21:31;5027:2;5007:18;;;5000:30;5066:31;5046:18;;;5039:59;5115:18;;10821:52:30;;;;;;;;;10921:10;10884:26;10913:19;;;:7;:19;;;;;;;;;10884:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10884:48:30;;;;;;;10942:57;;;;-1:-1:-1;;;10942:57:30;;5346:2:31;10942:57:30;;;5328:21:31;5385:2;5365:18;;;5358:30;-1:-1:-1;;;5404:18:31;;;5397:50;5464:18;;10942:57:30;5144:344:31;10942:57:30;11041:15;11017:13;:20;;;:39;;11009:70;;;;-1:-1:-1;;;11009:70:30;;5695:2:31;11009:70:30;;;5677:21:31;5734:2;5714:18;;;5707:30;-1:-1:-1;;;5753:18:31;;;5746:48;5811:18;;11009:70:30;5493:342:31;11009:70:30;11090:16;11109:143;11147:13;:20;;;-1:-1:-1;;;;;11109:143:30;11181:13;:20;;;11215:13;:27;;;11109:24;:143::i;:::-;11090:162;;11263:16;11282:172;11343:26;11362:6;11343:18;:26::i;:::-;11320:13;:20;;;:49;;;;:::i;:::-;-1:-1:-1;;;;;11282:172:30;11383:13;:20;;;11417:13;:27;;;11282:24;:172::i;:::-;11263:191;;11489:26;11508:6;11489:18;:26::i;:::-;11465:13;:20;;:50;;;;;;;:::i;:::-;-1:-1:-1;;;;;11465:50:30;;;-1:-1:-1;11530:10:30;;11526:135;;11609:12;;:41;;-1:-1:-1;;;11609:41:30;;11631:10;11609:41;;;6250:51:31;6317:18;;;6310:34;;;-1:-1:-1;;;;;11609:12:30;;;;:21;;6223:18:31;;11609:41:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11526:135;11701:10;11688:24;;;;:12;:24;;;;;11671:69;;11714:4;11720:19;11731:8;11720;:19;:::i;:::-;11671:16;:69::i;:::-;-1:-1:-1;11782:38:30;;-1:-1:-1;11788:10:30;11800:19;11811:8;11800;:19;:::i;:::-;11782:5;:38::i;:::-;10811:1016;;;10770:1057;:::o;5164:276::-;5269:7;5314:12;5300:11;:26;5292:70;;;;-1:-1:-1;;;5292:70:30;;6839:2:31;5292:70:30;;;6821:21:31;6878:2;6858:18;;;6851:30;6917:33;6897:18;;;6890:61;6968:18;;5292:70:30;6637:355:31;5292:70:30;-1:-1:-1;;;;;5398:21:30;;;;;;:12;:21;;;;;5379:54;;5421:11;5379:18;:54::i;:::-;5372:61;5164:276;-1:-1:-1;;;5164:276:30:o;7989:106::-;8051:37;;-1:-1:-1;;;8051:37:30;;7199:2:31;8051:37:30;;;7181:21:31;7238:2;7218:18;;;7211:30;7277:29;7257:18;;;7250:57;7324:18;;8051:37:30;6997:351:31;4351:185:30;-1:-1:-1;;;;;4500:21:30;;4453:6;4500:21;;;:12;:21;;;;;:28;4482:47;;:17;:47::i;:::-;4475:54;4351:185;-1:-1:-1;;4351:185:30:o;3898:117::-;3964:7;3990:18;3999:8;3990;:18::i;5662:267::-;5756:7;5801:12;5787:11;:26;5779:70;;;;-1:-1:-1;;;5779:70:30;;6839:2:31;5779:70:30;;;6821:21:31;6878:2;6858:18;;;6851:30;6917:33;6897:18;;;6890:61;6968:18;;5779:70:30;6637:355:31;5779:70:30;5866:56;5885:23;5910:11;5866:18;:56::i;2931:93::-;2978:13;3010:7;3003:14;;;;;:::i;4779:192::-;-1:-1:-1;;;;;4868:21:30;;4835:7;4868:21;;;:12;:21;;;;;:28;4913:8;;:51;;-1:-1:-1;;;;;4928:21:30;;;;;;:12;:21;;;;;4950:7;4956:1;4950:3;:7;:::i;:::-;4928:30;;;;;;;;:::i;:::-;;;;;;;;;;:36;;;;-1:-1:-1;;;;;4928:36:30;4913:51;;;4924:1;4913:51;-1:-1:-1;;;;;4906:58:30;;4779:192;-1:-1:-1;;;4779:192:30:o;8172:240::-;8355:50;;-1:-1:-1;;;8355:50:30;;7555:2:31;8355:50:30;;;7537:21:31;7594:2;7574:18;;;7567:30;7633:34;7613:18;;;7606:62;-1:-1:-1;;;7684:18:31;;;7677:38;7732:19;;8355:50:30;7353:404:31;8754:1582:30;8845:15;8836:6;:24;8828:65;;;;-1:-1:-1;;;8828:65:30;;7964:2:31;8828:65:30;;;7946:21:31;8003:2;7983:18;;;7976:30;8042;8022:18;;;8015:58;8090:18;;8828:65:30;7762:352:31;8828:65:30;8934:31;1723:15;8934;:31;:::i;:::-;8924:6;:41;;8903:129;;;;-1:-1:-1;;;8903:129:30;;8454:2:31;8903:129:30;;;8436:21:31;8493:2;8473:18;;;8466:30;8532:34;8512:18;;;8505:62;-1:-1:-1;;;8583:18:31;;;8576:39;8632:19;;8903:129:30;8252:405:31;8903:129:30;9073:31;1829:9;9073:15;:31;:::i;:::-;9063:6;:41;;9042:128;;;;-1:-1:-1;;;9042:128:30;;8864:2:31;9042:128:30;;;8846:21:31;8903:2;8883:18;;;8876:30;8942:34;8922:18;;;8915:62;-1:-1:-1;;;8993:18:31;;;8986:38;9041:19;;9042:128:30;8662:404:31;9042:128:30;9272:10;9245:16;9264:19;;;:7;:19;;;;;:31;;;:199;;9462:1;9264:199;;;9344:10;9336:19;;;;:7;:19;;;;;:26;;;;9376;;;;9336;9416:33;;;;9298:161;;-1:-1:-1;;;;;9336:26:30;;;;9376;9298:24;:161::i;:::-;9245:218;;9572:197;;;;;;;;9605:4;9572:197;;;;;;9638:15;9572:197;;;;9752:6;9572:197;;;;9704:26;9723:6;9704:18;:26::i;:::-;9683:10;9675:19;;;;:7;:19;;;;;:26;;;:55;;;-1:-1:-1;;;;;9675:26:30;:55;:::i;:::-;-1:-1:-1;;;;;9572:197:30;;;;;;9558:10;9550:19;;;;:7;:19;;;;;;;;:219;;;;-1:-1:-1;;9550:219:30;;;;;;;;;;;-1:-1:-1;9550:219:30;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9550:219:30;;;;;;;;;;;:19;9848:143;;9550:219;9966:15;9848:24;:143::i;:::-;9829:162;-1:-1:-1;10006:10:30;;10002:168;;10099:12;;:60;;-1:-1:-1;;;10099:60:30;;10125:10;10099:60;;;9554:34:31;10145:4:30;9604:18:31;;;9597:43;9656:18;;;9649:34;;;-1:-1:-1;;;;;10099:12:30;;;;:25;;9489:18:31;;10099:60:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10002:168;10210:10;10197:24;;;;:12;:24;;;;;10180:69;;10223:4;10229:19;10240:8;10229;:19;:::i;10180:69::-;-1:-1:-1;10291:38:30;;-1:-1:-1;10297:10:30;10309:19;10320:8;10309;:19;:::i;:::-;10291:5;:38::i;4092:184::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;4243:21:30;;;;;;:12;:21;;;;;:26;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4236:33;;;;;;;;;4243:26;;4236:33;;;;;;;;;-1:-1:-1;;;;;4236:33:30;;;;;;;;;4092:184;-1:-1:-1;;;4092:184:30:o;7593:315::-;7734:7;;1723:15;7844:6;7819:21;7839:1;1956;7819:21;:::i;:::-;7792:22;7801:13;7792:6;:22;:::i;:::-;7791:50;;;;:::i;:::-;:59;;;;:::i;:::-;7790:89;;;;:::i;:::-;7781:98;;:6;:98;:::i;:::-;7753:126;7593:315;-1:-1:-1;;;;;7593:315:30:o;1135:192:27:-;1192:7;-1:-1:-1;;;;;1219:26:27;;;1211:78;;;;-1:-1:-1;;;1211:78:27;;10291:2:31;1211:78:27;;;10273:21:31;10330:2;10310:18;;;10303:30;10369:34;10349:18;;;10342:62;-1:-1:-1;;;10420:18:31;;;10413:37;10467:19;;1211:78:27;10089:403:31;1211:78:27;-1:-1:-1;1314:5:27;1135:192::o;12949:96:30:-;13007:7;13033:5;13037:1;13033;:5;:::i;12131:719::-;12363:12;;12301:17;;;;12397:8;;:35;;12412:5;12418:7;12424:1;12418:3;:7;:::i;:::-;12412:14;;;;;;;;:::i;:::-;;;;;;;;;;:20;;;;-1:-1:-1;;;;;12412:20:30;12397:35;;;12408:1;12397:35;-1:-1:-1;;;;;12385:47:30;;;12454:20;12457:9;12468:5;12454:2;:20;;:::i;:::-;12442:32;;12495:1;12489:3;:7;:51;;;;-1:-1:-1;12528:12:30;12500:5;12506:7;12512:1;12506:3;:7;:::i;:::-;12500:14;;;;;;;;:::i;:::-;;;;;;;;;;:24;;;:40;12489:51;12485:359;;;12579:29;12598:9;12579:18;:29::i;:::-;12556:5;12562:7;12568:1;12562:3;:7;:::i;:::-;12556:14;;;;;;;;:::i;:::-;;;;;;;;:20;;;:52;;;;;-1:-1:-1;;;;;12556:52:30;;;;;-1:-1:-1;;;;;12556:52:30;;;;;;12485:359;;;12639:5;12667:152;;;;;;;;12711:31;12729:12;12711:17;:31::i;:::-;12667:152;;;;;;12771:29;12790:9;12771:18;:29::i;:::-;-1:-1:-1;;;;;12667:152:30;;;;;;12639:194;;;;;;;-1:-1:-1;12639:194:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12485:359;12339:511;12131:719;;;;;;:::o;11916:142::-;11991:60;12008:23;12033:9;12044:6;11991:16;:60::i;6013:1485::-;7162:12;;6136:7;;;7209:229;7222:4;7216:3;:10;7209:229;;;7242:11;7256:23;7269:3;7274:4;7256:12;:23::i;:::-;7242:37;;7320:11;7297:5;7303:3;7297:10;;;;;;;;:::i;:::-;;;;;;;;;;:20;;;:34;7293:135;;;7358:3;7351:10;;7293:135;;;7406:7;:3;7412:1;7406:7;:::i;:::-;7400:13;;7293:135;7228:210;7209:229;;;7454:9;;:37;;7470:5;7476:8;7483:1;7476:4;:8;:::i;:::-;7470:15;;;;;;;;:::i;:::-;;;;;;;;;;:21;;;;-1:-1:-1;;;;;7470:21:30;7454:37;;;7466:1;7454:37;-1:-1:-1;;;;;7447:44:30;;6013:1485;-1:-1:-1;;;;;6013:1485:30:o;3045:187:27:-;3101:6;3136:16;3127:25;;;3119:76;;;;-1:-1:-1;;;3119:76:27;;10699:2:31;3119:76:27;;;10681:21:31;10738:2;10718:18;;;10711:30;10777:34;10757:18;;;10750:62;-1:-1:-1;;;10828:18:31;;;10821:36;10874:19;;3119:76:27;10497:402:31;10425:271:30;-1:-1:-1;;;;;10521:13:30;:11;:13::i;:::-;:29;;10500:124;;;;-1:-1:-1;;;10500:124:30;;11106:2:31;10500:124:30;;;11088:21:31;11145:2;11125:18;;;11118:30;11184:34;11164:18;;;11157:62;-1:-1:-1;;;11235:18:31;;;11228:46;11291:19;;10500:124:30;10904:412:31;10500:124:30;10634:55;10651:23;10676:4;10682:6;10634:16;:55::i;13147:101::-;13210:7;13236:5;13240:1;13236;:5;:::i;663:153:26:-;725:7;798:11;808:1;799:5;;;798:11;:::i;:::-;788:21;;789:5;;;788:21;:::i;14:597:31:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:31;574:15;-1:-1:-1;;570:29:31;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:31:o;798:180::-;857:6;910:2;898:9;889:7;885:23;881:32;878:52;;;926:1;923;916:12;878:52;-1:-1:-1;949:23:31;;798:180;-1:-1:-1;798:180:31:o;1172:173::-;1240:20;;-1:-1:-1;;;;;1289:31:31;;1279:42;;1269:70;;1335:1;1332;1325:12;1269:70;1172:173;;;:::o;1350:254::-;1418:6;1426;1479:2;1467:9;1458:7;1454:23;1450:32;1447:52;;;1495:1;1492;1485:12;1447:52;1518:29;1537:9;1518:29;:::i;:::-;1508:39;1594:2;1579:18;;;;1566:32;;-1:-1:-1;;;1350:254:31:o;1609:186::-;1668:6;1721:2;1709:9;1700:7;1696:23;1692:32;1689:52;;;1737:1;1734;1727:12;1689:52;1760:29;1779:9;1760:29;:::i;2427:618::-;2529:6;2537;2545;2553;2561;2569;2622:3;2610:9;2601:7;2597:23;2593:33;2590:53;;;2639:1;2636;2629:12;2590:53;2662:29;2681:9;2662:29;:::i;:::-;2652:39;;2738:2;2727:9;2723:18;2710:32;2700:42;;2789:2;2778:9;2774:18;2761:32;2751:42;;2843:2;2832:9;2828:18;2815:32;2887:4;2880:5;2876:16;2869:5;2866:27;2856:55;;2907:1;2904;2897:12;2856:55;2427:618;;;;-1:-1:-1;2427:618:31;;2982:3;2967:19;;2954:33;;3034:3;3019:19;;;3006:33;;-1:-1:-1;2427:618:31;-1:-1:-1;;2427:618:31:o;3050:248::-;3118:6;3126;3179:2;3167:9;3158:7;3154:23;3150:32;3147:52;;;3195:1;3192;3185:12;3147:52;-1:-1:-1;;3218:23:31;;;3288:2;3273:18;;;3260:32;;-1:-1:-1;3050:248:31:o;3303:350::-;3370:6;3378;3431:2;3419:9;3410:7;3406:23;3402:32;3399:52;;;3447:1;3444;3437:12;3399:52;3470:29;3489:9;3470:29;:::i;:::-;3460:39;;3549:2;3538:9;3534:18;3521:32;3593:10;3586:5;3582:22;3575:5;3572:33;3562:61;;3619:1;3616;3609:12;3562:61;3642:5;3632:15;;;3303:350;;;;;:::o;4007:380::-;4086:1;4082:12;;;;4129;;;4150:61;;4204:4;4196:6;4192:17;4182:27;;4150:61;4257:2;4249:6;4246:14;4226:18;4223:38;4220:161;;;4303:10;4298:3;4294:20;4291:1;4284:31;4338:4;4335:1;4328:15;4366:4;4363:1;4356:15;4220:161;;4007:380;;;:::o;4392:127::-;4453:10;4448:3;4444:20;4441:1;4434:31;4484:4;4481:1;4474:15;4508:4;4505:1;4498:15;4524:125;4564:4;4592:1;4589;4586:8;4583:34;;;4597:18;;:::i;:::-;-1:-1:-1;4634:9:31;;4524:125::o;4654:127::-;4715:10;4710:3;4706:20;4703:1;4696:31;4746:4;4743:1;4736:15;4770:4;4767:1;4760:15;5840:231;5880:4;-1:-1:-1;;;;;5978:10:31;;;;5948;;6000:12;;;5997:38;;;6015:18;;:::i;:::-;6052:13;;5840:231;-1:-1:-1;;;5840:231:31:o;6355:277::-;6422:6;6475:2;6463:9;6454:7;6450:23;6446:32;6443:52;;;6491:1;6488;6481:12;6443:52;6523:9;6517:16;6576:5;6569:13;6562:21;6555:5;6552:32;6542:60;;6598:1;6595;6588:12;8119:128;8159:3;8190:1;8186:6;8183:1;8180:13;8177:39;;;8196:18;;:::i;:::-;-1:-1:-1;8232:9:31;;8119:128::o;9071:238::-;9111:3;-1:-1:-1;;;;;9178:10:31;;;9208;;;9238:12;;;9230:21;;9227:47;;;9254:18;;:::i;:::-;9290:13;;9071:238;-1:-1:-1;;;;9071:238:31:o;9694:168::-;9734:7;9800:1;9796;9792:6;9788:14;9785:1;9782:21;9777:1;9770:9;9763:17;9759:45;9756:71;;;9807:18;;:::i;:::-;-1:-1:-1;9847:9:31;;9694:168::o;9867:217::-;9907:1;9933;9923:132;;9977:10;9972:3;9968:20;9965:1;9958:31;10012:4;10009:1;10002:15;10040:4;10037:1;10030:15;9923:132;-1:-1:-1;10069:9:31;;9867:217::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "MAX_LOCK_TIME()": {
        "notice": "Maximum lock time"
      },
      "MAX_VOTE_MULTIPLE()": {
        "notice": "Vote boost if locked for maximum duration"
      },
      "MIN_LOCK_TIME()": {
        "notice": "Minimum lock time"
      },
      "balanceOf(address)": {
        "details": "See {ERC20-balanceOf}."
      },
      "checkpoints(address,uint32)": {
        "details": "Get the `pos`-th checkpoint for `account`."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden;"
      },
      "delegate(address)": {
        "details": "Delegate votes from the sender to `delegatee`."
      },
      "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "Delegates votes from signer to `delegatee`"
      },
      "delegates(address)": {
        "details": "Get the address `account` is currently delegating to."
      },
      "deposit(uint256,uint256)": {
        "details": "Deposits staking token and mints new tokens according to the MAX_VOTE_MULTIPLE and _expiry parameters."
      },
      "getPastTotalSupply(uint256)": {
        "details": "Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. Requirements: - `blockNumber` must have been already mined"
      },
      "getPastVotes(address,uint256)": {
        "details": "Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined"
      },
      "getVotes(address)": {
        "details": "Gets the current votes balance for `account`"
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "numCheckpoints(address)": {
        "details": "Get number of checkpoints for `account`."
      },
      "stakingToken()": {
        "notice": "Token used for creating lockups"
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {ERC20-totalSupply}."
      },
      "withdraw(uint256)": {
        "details": "Withdraw tokens from an expired lockup."
      }
    },
    "notice": "VoteLocker is smart contract that supports locking up of a staking token for increased         governance voting power. It is largely based on the ERC20Votes contract from openzeppelin         with some modificaitons to allow it to support lockups/vote boosting. - Voting power is determined by stake amount and lockup duration. - Implements a subset of the ERC20 standard (no transfers, allowance, etc.) - Implements the interfaces required by OpenZeppelin 4.x governance (VoteLocker) stack and exposes   the amount of votes a user has and total votes through standard ERC20 balanceOf/totalSupply   getters. - Removes vote delegation. TODO resolve issues with extending lockup expiry and fromTimestamp TODO vote boost never goes away after expiry ;(",
    "title": "VoteLocker",
    "version": 1
  },
  "offset": [
    1230,
    13250
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x9AB24EB0 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0xFA78668F EQ PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x9497497A EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3A46B1A8 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x3FF03207 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x2D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST PUSH2 0x16D PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0x1057 JUMP JUMPDEST PUSH2 0x3B6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST PUSH2 0x14C PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x108C JUMP JUMPDEST PUSH2 0x628 JUMP JUMPDEST PUSH2 0x14C PUSH3 0x93A80 DUP2 JUMP JUMPDEST PUSH2 0x1B5 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0x10B6 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST PUSH2 0x16D PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x10B6 JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x10B6 JUMP JUMPDEST PUSH2 0x6EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST PUSH2 0x14C PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0x10B6 JUMP JUMPDEST PUSH2 0x712 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1B5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x23C CALLDATASIZE PUSH1 0x4 PUSH2 0x1057 JUMP JUMPDEST PUSH2 0x71D JUMP JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP2 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x779 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0x10B6 JUMP JUMPDEST PUSH2 0x788 JUMP JUMPDEST PUSH2 0x16D PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x10D1 JUMP JUMPDEST PUSH2 0x80F JUMP JUMPDEST PUSH2 0x16D PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x1131 JUMP JUMPDEST PUSH2 0x868 JUMP JUMPDEST PUSH2 0x29D PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0x1153 JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x13B JUMP JUMPDEST PUSH2 0x14C PUSH4 0x784CE00 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x2E1 SWAP1 PUSH2 0x1193 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x30D SWAP1 PUSH2 0x1193 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x35A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x32F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x35A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x33D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x374 JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x384 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x11E4 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x394 JUMPI PUSH2 0x394 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x40B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x4A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F207374616B6520746F207769746864726177 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x402 JUMP JUMPDEST TIMESTAMP DUP2 PUSH1 0x40 ADD MLOAD GT ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x131BD8DADD5C081B9BDD08195E1C1A5C9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x402 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50B DUP3 PUSH1 0x60 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND DUP4 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0xBE4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x542 PUSH2 0x51B DUP6 PUSH2 0xC34 JUMP JUMPDEST DUP5 PUSH1 0x60 ADD MLOAD PUSH2 0x52A SWAP2 SWAP1 PUSH2 0x1211 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0xBE4 JUMP JUMPDEST SWAP1 POP PUSH2 0x54D DUP5 PUSH2 0xC34 JUMP JUMPDEST DUP4 PUSH1 0x60 ADD DUP2 DUP2 MLOAD PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x1211 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP1 MSTORE POP DUP4 ISZERO PUSH2 0x5E7 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E5 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST POP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x60C SWAP1 PUSH2 0xCA1 PUSH2 0x607 DUP5 DUP7 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0xCAD JUMP JUMPDEST POP PUSH2 0x622 SWAP1 POP CALLER PUSH2 0x61D DUP4 DUP6 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0xE26 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74654C6F636B65723A20626C6F636B206E6F7420796574206D696E656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x402 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x69B SWAP1 DUP4 PUSH2 0xE34 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44656C65676174696F6E206973206E6F7420737570706F727465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x402 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x70C SWAP1 PUSH2 0xEF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70C DUP3 PUSH2 0x788 JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74654C6F636B65723A20626C6F636B206E6F7420796574206D696E656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x402 JUMP JUMPDEST PUSH2 0x70C PUSH1 0x5 DUP4 PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2E1 SWAP1 PUSH2 0x1193 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x7FC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x7CA PUSH1 0x1 DUP4 PUSH2 0x11E4 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x7DA JUMPI PUSH2 0x7DA PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44656C65676174696F6E206279207369676E6174757265206973206E6F742073 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x1D5C1C1BDC9D1959 PUSH1 0xC2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x402 JUMP JUMPDEST TIMESTAMP DUP2 GT PUSH2 0x8B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x457870697279206D75737420626520696E207468652066757475726500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x402 JUMP JUMPDEST PUSH2 0x8C5 PUSH4 0x784CE00 TIMESTAMP PUSH2 0x125B JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x926 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x457870697279206D757374206265206265666F7265206D6178696D756D206C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x636B75702074696D65 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x402 JUMP JUMPDEST PUSH2 0x933 PUSH3 0x93A80 TIMESTAMP PUSH2 0x125B JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x993 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x457870697279206D757374206265206166746572206D696E696D756D206C6F63 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6B75702074696D65 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x402 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x9B1 JUMPI PUSH1 0x0 PUSH2 0x9E6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 SWAP1 SWAP3 ADD SLOAD PUSH2 0x9E6 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 PUSH2 0xBE4 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA11 DUP6 PUSH2 0xC34 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xA37 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 DUP2 AND SWAP1 SWAP2 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 MLOAD DUP2 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO OR DUP2 SSTORE SWAP2 DUP6 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE DUP5 ADD MLOAD PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x60 SWAP1 SWAP5 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP2 SWAP1 SWAP4 AND SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE SWAP2 PUSH2 0xAA5 SWAP2 SWAP1 TIMESTAMP PUSH2 0xBE4 JUMP JUMPDEST SWAP1 POP DUP4 ISZERO PUSH2 0xB2A JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB28 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST POP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xB4A SWAP1 PUSH2 0xCA1 PUSH2 0x607 DUP6 DUP6 PUSH2 0x11E4 JUMP JUMPDEST POP PUSH2 0x622 SWAP1 POP CALLER PUSH2 0xB5B DUP5 DUP5 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0xF56 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP5 AND SWAP1 DUP2 LT PUSH2 0xBA4 JUMPI PUSH2 0xBA4 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP3 MSTORE PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x784CE00 DUP6 PUSH2 0xBF9 PUSH1 0x1 PUSH1 0x4 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0xC03 DUP7 DUP9 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0xC0D SWAP2 SWAP1 PUSH2 0x129E JUMP JUMPDEST PUSH2 0xC17 SWAP2 SWAP1 PUSH2 0x129E JUMP JUMPDEST PUSH2 0xC21 SWAP2 SWAP1 PUSH2 0x12BD JUMP JUMPDEST PUSH2 0xC2B SWAP1 DUP7 PUSH2 0x125B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP3 GT ISZERO PUSH2 0xC9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32342062697473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x402 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x69B DUP3 DUP5 PUSH2 0x125B JUMP JUMPDEST DUP3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP1 ISZERO PUSH2 0xCF8 JUMPI DUP6 PUSH2 0xCC6 PUSH1 0x1 DUP4 PUSH2 0x11E4 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xCD6 JUMPI PUSH2 0xCD6 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP3 POP PUSH2 0xD14 DUP4 DUP6 DUP8 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0xD52 JUMPI POP NUMBER DUP7 PUSH2 0xD2E PUSH1 0x1 DUP5 PUSH2 0x11E4 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xD3E JUMPI PUSH2 0xD3E PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0xDB2 JUMPI PUSH2 0xD60 DUP3 PUSH2 0xC34 JUMP JUMPDEST DUP7 PUSH2 0xD6C PUSH1 0x1 DUP5 PUSH2 0x11E4 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xD7C JUMPI PUSH2 0xD7C PUSH2 0x11FB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0xE1D JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0xDC7 NUMBER PUSH2 0xEF1 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDDB DUP6 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 DUP2 AND SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 SWAP1 KECCAK256 DUP4 MLOAD SWAP5 SWAP1 SWAP4 ADD MLOAD SWAP1 SWAP2 AND PUSH5 0x100000000 MUL PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP2 ADD SSTORE JUMPDEST POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x622 PUSH1 0x5 PUSH2 0xFDB DUP4 PUSH2 0xCAD JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE98 JUMPI PUSH1 0x0 PUSH2 0xE4F DUP3 DUP5 PUSH2 0xFE7 JUMP JUMPDEST SWAP1 POP DUP5 DUP7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE64 JUMPI PUSH2 0xE64 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xE84 JUMPI DUP1 SWAP3 POP PUSH2 0xE92 JUMP JUMPDEST PUSH2 0xE8F DUP2 PUSH1 0x1 PUSH2 0x125B JUMP JUMPDEST SWAP2 POP JUMPDEST POP PUSH2 0xE3B JUMP JUMPDEST DUP2 ISZERO PUSH2 0xEDC JUMPI DUP5 PUSH2 0xEAA PUSH1 0x1 DUP5 PUSH2 0x11E4 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xEBA JUMPI PUSH2 0xEBA PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH2 0xEDF JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 GT ISZERO PUSH2 0xC9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x322062697473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x402 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH2 0xF66 PUSH2 0x364 JUMP JUMPDEST GT ISZERO PUSH2 0xFCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74654C6F636B65723A20746F74616C20737570706C79207269736B73206F PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x766572666C6F77696E6720766F746573 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x402 JUMP JUMPDEST PUSH2 0x622 PUSH1 0x5 PUSH2 0xCA1 DUP4 PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x69B DUP3 DUP5 PUSH2 0x11E4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF6 PUSH1 0x2 DUP5 DUP5 XOR PUSH2 0x12BD JUMP JUMPDEST PUSH2 0x69B SWAP1 DUP5 DUP5 AND PUSH2 0x125B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x102F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1013 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1041 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1069 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1087 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x109F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10A8 DUP4 PUSH2 0x1070 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x69B DUP3 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x10EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10F3 DUP8 PUSH2 0x1070 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x116F DUP4 PUSH2 0x1070 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x11A7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x11C8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x11F6 JUMPI PUSH2 0x11F6 PUSH2 0x11CE JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x1231 JUMPI PUSH2 0x1231 PUSH2 0x11CE JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x124B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x69B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x126E JUMPI PUSH2 0x126E PUSH2 0x11CE JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP3 DUP2 AND DUP5 DUP3 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x1295 JUMPI PUSH2 0x1295 PUSH2 0x11CE JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x12B8 JUMPI PUSH2 0x12B8 PUSH2 0x11CE JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x12DA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD1ADE328CD8DEF03261E6B1E6E07799F4124ACF5DAEBE0D2C82D PUSH10 0xCEEFCF964736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "5": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "CALLVALUE",
      "path": "30"
    },
    "6": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "DUP1",
      "path": "30"
    },
    "7": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "8": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "12": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "DUP1",
      "path": "30"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "REVERT",
      "path": "30"
    },
    "16": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "17": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "POP",
      "path": "30"
    },
    "18": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "CALLDATASIZE",
      "path": "30"
    },
    "21": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "LT",
      "path": "30"
    },
    "22": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x121"
    },
    "25": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "26": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "CALLDATALOAD",
      "path": "30"
    },
    "29": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "SHR",
      "path": "30"
    },
    "32": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "DUP1",
      "path": "30"
    },
    "33": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "GT",
      "path": "30"
    },
    "39": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xAD"
    },
    "42": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "43": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "DUP1",
      "path": "30"
    },
    "44": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0x9AB24EB0"
    },
    "49": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "GT",
      "path": "30"
    },
    "50": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "54": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "DUP1",
      "path": "30"
    },
    "55": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0x9AB24EB0"
    },
    "60": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "EQ",
      "path": "30"
    },
    "61": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x251"
    },
    "64": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "65": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "DUP1",
      "path": "30"
    },
    "66": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0xC3CDA520"
    },
    "71": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "EQ",
      "path": "30"
    },
    "72": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x264"
    },
    "75": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "76": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "DUP1",
      "path": "30"
    },
    "77": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0xE2BBB158"
    },
    "82": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "EQ",
      "path": "30"
    },
    "83": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x277"
    },
    "86": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "87": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "DUP1",
      "path": "30"
    },
    "88": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0xF1127ED8"
    },
    "93": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "EQ",
      "path": "30"
    },
    "94": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x28A"
    },
    "97": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "98": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "DUP1",
      "path": "30"
    },
    "99": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0xFA78668F"
    },
    "104": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "EQ",
      "path": "30"
    },
    "105": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x2C7"
    },
    "108": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "109": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "DUP1",
      "path": "30"
    },
    "112": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "REVERT",
      "path": "30"
    },
    "113": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "114": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "DUP1",
      "path": "30"
    },
    "115": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "EQ",
      "path": "30"
    },
    "121": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x208"
    },
    "124": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "125": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "DUP1",
      "path": "30"
    },
    "126": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0x72F702F3"
    },
    "131": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "EQ",
      "path": "30"
    },
    "132": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x21B"
    },
    "135": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "136": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "DUP1",
      "path": "30"
    },
    "137": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0x8E539E8C"
    },
    "142": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "EQ",
      "path": "30"
    },
    "143": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x22E"
    },
    "146": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "147": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "DUP1",
      "path": "30"
    },
    "148": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0x9497497A"
    },
    "153": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "EQ",
      "path": "30"
    },
    "154": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x241"
    },
    "157": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "158": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "DUP1",
      "path": "30"
    },
    "159": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0x95D89B41"
    },
    "164": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "EQ",
      "path": "30"
    },
    "165": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x249"
    },
    "168": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "169": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "DUP1",
      "path": "30"
    },
    "172": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "REVERT",
      "path": "30"
    },
    "173": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "174": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "DUP1",
      "path": "30"
    },
    "175": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0x3A46B1A8"
    },
    "180": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "GT",
      "path": "30"
    },
    "181": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xF4"
    },
    "184": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "185": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "DUP1",
      "path": "30"
    },
    "186": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0x3A46B1A8"
    },
    "191": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "EQ",
      "path": "30"
    },
    "192": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x184"
    },
    "195": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "196": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "DUP1",
      "path": "30"
    },
    "197": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0x3FF03207"
    },
    "202": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "EQ",
      "path": "30"
    },
    "203": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x197"
    },
    "206": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "207": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "DUP1",
      "path": "30"
    },
    "208": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0x587CDE1E"
    },
    "213": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "EQ",
      "path": "30"
    },
    "214": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1A1"
    },
    "217": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "218": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "DUP1",
      "path": "30"
    },
    "219": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0x5C19A95C"
    },
    "224": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "EQ",
      "path": "30"
    },
    "225": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1CD"
    },
    "228": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "229": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "DUP1",
      "path": "30"
    },
    "230": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0x6FCFFF45"
    },
    "235": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "EQ",
      "path": "30"
    },
    "236": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1E0"
    },
    "239": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "240": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "242": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "DUP1",
      "path": "30"
    },
    "243": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "REVERT",
      "path": "30"
    },
    "244": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "245": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "DUP1",
      "path": "30"
    },
    "246": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0x6FDDE03"
    },
    "251": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "EQ",
      "path": "30"
    },
    "252": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x126"
    },
    "255": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "256": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "DUP1",
      "path": "30"
    },
    "257": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0x18160DDD"
    },
    "262": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "EQ",
      "path": "30"
    },
    "263": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x144"
    },
    "266": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "267": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "DUP1",
      "path": "30"
    },
    "268": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0x2E1A7D4D"
    },
    "273": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "EQ",
      "path": "30"
    },
    "274": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x15A"
    },
    "277": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "278": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "DUP1",
      "path": "30"
    },
    "279": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0x313CE567"
    },
    "284": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "EQ",
      "path": "30"
    },
    "285": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x16F"
    },
    "288": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "289": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "290": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "292": {
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "DUP1",
      "path": "30"
    },
    "293": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1230,
        13250
      ],
      "op": "REVERT",
      "path": "30"
    },
    "294": {
      "fn": "VoteLocker.name",
      "offset": [
        2729,
        2818
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "295": {
      "fn": "VoteLocker.name",
      "offset": [
        2729,
        2818
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x12E"
    },
    "298": {
      "fn": "VoteLocker.name",
      "offset": [
        2729,
        2818
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x2D2"
    },
    "301": {
      "fn": "VoteLocker.name",
      "jump": "i",
      "offset": [
        2729,
        2818
      ],
      "op": "JUMP",
      "path": "30"
    },
    "302": {
      "fn": "VoteLocker.name",
      "offset": [
        2729,
        2818
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "303": {
      "fn": "VoteLocker.name",
      "offset": [
        2729,
        2818
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "305": {
      "fn": "VoteLocker.name",
      "offset": [
        2729,
        2818
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "306": {
      "fn": "VoteLocker.name",
      "offset": [
        2729,
        2818
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x13B"
    },
    "309": {
      "fn": "VoteLocker.name",
      "offset": [
        2729,
        2818
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "310": {
      "fn": "VoteLocker.name",
      "offset": [
        2729,
        2818
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "311": {
      "fn": "VoteLocker.name",
      "offset": [
        2729,
        2818
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1002"
    },
    "314": {
      "fn": "VoteLocker.name",
      "jump": "i",
      "offset": [
        2729,
        2818
      ],
      "op": "JUMP",
      "path": "30"
    },
    "315": {
      "fn": "VoteLocker.name",
      "offset": [
        2729,
        2818
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "316": {
      "fn": "VoteLocker.name",
      "offset": [
        2729,
        2818
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "318": {
      "fn": "VoteLocker.name",
      "offset": [
        2729,
        2818
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "319": {
      "fn": "VoteLocker.name",
      "offset": [
        2729,
        2818
      ],
      "op": "DUP1",
      "path": "30"
    },
    "320": {
      "fn": "VoteLocker.name",
      "offset": [
        2729,
        2818
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "321": {
      "fn": "VoteLocker.name",
      "offset": [
        2729,
        2818
      ],
      "op": "SUB",
      "path": "30"
    },
    "322": {
      "fn": "VoteLocker.name",
      "offset": [
        2729,
        2818
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "323": {
      "fn": "VoteLocker.name",
      "offset": [
        2729,
        2818
      ],
      "op": "RETURN",
      "path": "30"
    },
    "324": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3596,
        3841
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "325": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3596,
        3841
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x14C"
    },
    "328": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3596,
        3841
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x364"
    },
    "331": {
      "fn": "VoteLocker.totalSupply",
      "jump": "i",
      "offset": [
        3596,
        3841
      ],
      "op": "JUMP",
      "path": "30"
    },
    "332": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3596,
        3841
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "333": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3596,
        3841
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "335": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3596,
        3841
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "336": {
      "op": "SWAP1"
    },
    "337": {
      "op": "DUP2"
    },
    "338": {
      "op": "MSTORE"
    },
    "339": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "341": {
      "op": "ADD"
    },
    "342": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3596,
        3841
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x13B"
    },
    "345": {
      "op": "JUMP"
    },
    "346": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10770,
        11827
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "347": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10770,
        11827
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x16D"
    },
    "350": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10770,
        11827
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x168"
    },
    "353": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10770,
        11827
      ],
      "op": "CALLDATASIZE",
      "path": "30"
    },
    "354": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10770,
        11827
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "356": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10770,
        11827
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1057"
    },
    "359": {
      "fn": "VoteLocker.withdraw",
      "jump": "i",
      "offset": [
        10770,
        11827
      ],
      "op": "JUMP",
      "path": "30"
    },
    "360": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10770,
        11827
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "361": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10770,
        11827
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x3B6"
    },
    "364": {
      "fn": "VoteLocker.withdraw",
      "jump": "i",
      "offset": [
        10770,
        11827
      ],
      "op": "JUMP",
      "path": "30"
    },
    "365": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10770,
        11827
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "366": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10770,
        11827
      ],
      "op": "STOP",
      "path": "30"
    },
    "367": {
      "fn": "VoteLocker.decimals",
      "offset": [
        3448,
        3537
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "368": {
      "fn": "VoteLocker.decimals",
      "offset": [
        3521,
        3530
      ],
      "op": "PUSH1",
      "path": "30",
      "statement": 0,
      "value": "0x2"
    },
    "370": {
      "fn": "VoteLocker.decimals",
      "offset": [
        3521,
        3530
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "371": {
      "fn": "VoteLocker.decimals",
      "offset": [
        3448,
        3537
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "373": {
      "fn": "VoteLocker.decimals",
      "offset": [
        3448,
        3537
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "374": {
      "fn": "VoteLocker.decimals",
      "offset": [
        3521,
        3530
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0xFF"
    },
    "376": {
      "fn": "VoteLocker.decimals",
      "offset": [
        3521,
        3530
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "377": {
      "fn": "VoteLocker.decimals",
      "offset": [
        3521,
        3530
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "378": {
      "fn": "VoteLocker.decimals",
      "offset": [
        3521,
        3530
      ],
      "op": "AND",
      "path": "30"
    },
    "379": {
      "op": "DUP2"
    },
    "380": {
      "op": "MSTORE"
    },
    "381": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "383": {
      "op": "ADD"
    },
    "384": {
      "fn": "VoteLocker.decimals",
      "offset": [
        3448,
        3537
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x13B"
    },
    "387": {
      "op": "JUMP"
    },
    "388": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5164,
        5440
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "389": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5164,
        5440
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x14C"
    },
    "392": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5164,
        5440
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x192"
    },
    "395": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5164,
        5440
      ],
      "op": "CALLDATASIZE",
      "path": "30"
    },
    "396": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5164,
        5440
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "398": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5164,
        5440
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x108C"
    },
    "401": {
      "fn": "VoteLocker.getPastVotes",
      "jump": "i",
      "offset": [
        5164,
        5440
      ],
      "op": "JUMP",
      "path": "30"
    },
    "402": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5164,
        5440
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "403": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5164,
        5440
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x628"
    },
    "406": {
      "fn": "VoteLocker.getPastVotes",
      "jump": "i",
      "offset": [
        5164,
        5440
      ],
      "op": "JUMP",
      "path": "30"
    },
    "407": {
      "offset": [
        1789,
        1838
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "408": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        1789,
        1838
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x14C"
    },
    "411": {
      "offset": [
        1829,
        1838
      ],
      "op": "PUSH3",
      "path": "30",
      "value": "0x93A80"
    },
    "415": {
      "offset": [
        1789,
        1838
      ],
      "op": "DUP2",
      "path": "30"
    },
    "416": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        1789,
        1838
      ],
      "op": "JUMP",
      "path": "30"
    },
    "417": {
      "fn": "VoteLocker.delegates",
      "offset": [
        4624,
        4700
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "418": {
      "fn": "VoteLocker.delegates",
      "offset": [
        4624,
        4700
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1B5"
    },
    "421": {
      "fn": "VoteLocker.delegates",
      "offset": [
        4624,
        4700
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1AF"
    },
    "424": {
      "fn": "VoteLocker.delegates",
      "offset": [
        4624,
        4700
      ],
      "op": "CALLDATASIZE",
      "path": "30"
    },
    "425": {
      "fn": "VoteLocker.delegates",
      "offset": [
        4624,
        4700
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "427": {
      "fn": "VoteLocker.delegates",
      "offset": [
        4624,
        4700
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x10B6"
    },
    "430": {
      "fn": "VoteLocker.delegates",
      "jump": "i",
      "offset": [
        4624,
        4700
      ],
      "op": "JUMP",
      "path": "30"
    },
    "431": {
      "fn": "VoteLocker.delegates",
      "offset": [
        4624,
        4700
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "432": {
      "op": "POP"
    },
    "433": {
      "fn": "VoteLocker.delegates",
      "offset": [
        4689,
        4696
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "435": {
      "fn": "VoteLocker.delegates",
      "offset": [
        4689,
        4696
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "436": {
      "fn": "VoteLocker.delegates",
      "offset": [
        4624,
        4700
      ],
      "op": "JUMP",
      "path": "30"
    },
    "437": {
      "fn": "VoteLocker.delegates",
      "offset": [
        4624,
        4700
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "438": {
      "fn": "VoteLocker.delegates",
      "offset": [
        4624,
        4700
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "440": {
      "fn": "VoteLocker.delegates",
      "offset": [
        4624,
        4700
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "445": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "447": {
      "op": "SHL"
    },
    "448": {
      "op": "SUB"
    },
    "449": {
      "op": "SWAP1"
    },
    "450": {
      "op": "SWAP2"
    },
    "451": {
      "op": "AND"
    },
    "452": {
      "op": "DUP2"
    },
    "453": {
      "op": "MSTORE"
    },
    "454": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "456": {
      "op": "ADD"
    },
    "457": {
      "fn": "VoteLocker.delegates",
      "offset": [
        4624,
        4700
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x13B"
    },
    "460": {
      "op": "JUMP"
    },
    "461": {
      "fn": "VoteLocker.delegate",
      "offset": [
        7989,
        8095
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "462": {
      "fn": "VoteLocker.delegate",
      "offset": [
        7989,
        8095
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x16D"
    },
    "465": {
      "fn": "VoteLocker.delegate",
      "offset": [
        7989,
        8095
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1DB"
    },
    "468": {
      "fn": "VoteLocker.delegate",
      "offset": [
        7989,
        8095
      ],
      "op": "CALLDATASIZE",
      "path": "30"
    },
    "469": {
      "fn": "VoteLocker.delegate",
      "offset": [
        7989,
        8095
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "471": {
      "fn": "VoteLocker.delegate",
      "offset": [
        7989,
        8095
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x10B6"
    },
    "474": {
      "fn": "VoteLocker.delegate",
      "jump": "i",
      "offset": [
        7989,
        8095
      ],
      "op": "JUMP",
      "path": "30"
    },
    "475": {
      "fn": "VoteLocker.delegate",
      "offset": [
        7989,
        8095
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "476": {
      "fn": "VoteLocker.delegate",
      "offset": [
        7989,
        8095
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x6A2"
    },
    "479": {
      "fn": "VoteLocker.delegate",
      "jump": "i",
      "offset": [
        7989,
        8095
      ],
      "op": "JUMP",
      "path": "30"
    },
    "480": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4351,
        4536
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "481": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4351,
        4536
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1F3"
    },
    "484": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4351,
        4536
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1EE"
    },
    "487": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4351,
        4536
      ],
      "op": "CALLDATASIZE",
      "path": "30"
    },
    "488": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4351,
        4536
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "490": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4351,
        4536
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x10B6"
    },
    "493": {
      "fn": "VoteLocker.numCheckpoints",
      "jump": "i",
      "offset": [
        4351,
        4536
      ],
      "op": "JUMP",
      "path": "30"
    },
    "494": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4351,
        4536
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "495": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4351,
        4536
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x6EA"
    },
    "498": {
      "fn": "VoteLocker.numCheckpoints",
      "jump": "i",
      "offset": [
        4351,
        4536
      ],
      "op": "JUMP",
      "path": "30"
    },
    "499": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4351,
        4536
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "500": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4351,
        4536
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "502": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4351,
        4536
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "503": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "508": {
      "op": "SWAP1"
    },
    "509": {
      "op": "SWAP2"
    },
    "510": {
      "op": "AND"
    },
    "511": {
      "op": "DUP2"
    },
    "512": {
      "op": "MSTORE"
    },
    "513": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "515": {
      "op": "ADD"
    },
    "516": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4351,
        4536
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x13B"
    },
    "519": {
      "op": "JUMP"
    },
    "520": {
      "fn": "VoteLocker.balanceOf",
      "offset": [
        3898,
        4015
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "521": {
      "fn": "VoteLocker.balanceOf",
      "offset": [
        3898,
        4015
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x14C"
    },
    "524": {
      "fn": "VoteLocker.balanceOf",
      "offset": [
        3898,
        4015
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x216"
    },
    "527": {
      "fn": "VoteLocker.balanceOf",
      "offset": [
        3898,
        4015
      ],
      "op": "CALLDATASIZE",
      "path": "30"
    },
    "528": {
      "fn": "VoteLocker.balanceOf",
      "offset": [
        3898,
        4015
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "530": {
      "fn": "VoteLocker.balanceOf",
      "offset": [
        3898,
        4015
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x10B6"
    },
    "533": {
      "fn": "VoteLocker.balanceOf",
      "jump": "i",
      "offset": [
        3898,
        4015
      ],
      "op": "JUMP",
      "path": "30"
    },
    "534": {
      "fn": "VoteLocker.balanceOf",
      "offset": [
        3898,
        4015
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "535": {
      "fn": "VoteLocker.balanceOf",
      "offset": [
        3898,
        4015
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x712"
    },
    "538": {
      "fn": "VoteLocker.balanceOf",
      "jump": "i",
      "offset": [
        3898,
        4015
      ],
      "op": "JUMP",
      "path": "30"
    },
    "539": {
      "offset": [
        2280,
        2305
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "540": {
      "fn": "VoteLocker.balanceOf",
      "offset": [
        2280,
        2305
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x6"
    },
    "542": {
      "fn": "VoteLocker.balanceOf",
      "offset": [
        2280,
        2305
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "543": {
      "fn": "VoteLocker.balanceOf",
      "offset": [
        2280,
        2305
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1B5"
    },
    "546": {
      "fn": "VoteLocker.balanceOf",
      "offset": [
        2280,
        2305
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "551": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "553": {
      "op": "SHL"
    },
    "554": {
      "op": "SUB"
    },
    "555": {
      "offset": [
        2280,
        2305
      ],
      "op": "AND",
      "path": "30"
    },
    "556": {
      "fn": "VoteLocker.balanceOf",
      "offset": [
        2280,
        2305
      ],
      "op": "DUP2",
      "path": "30"
    },
    "557": {
      "fn": "VoteLocker.balanceOf",
      "offset": [
        2280,
        2305
      ],
      "op": "JUMP",
      "path": "30"
    },
    "558": {
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        5662,
        5929
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "559": {
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        5662,
        5929
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x14C"
    },
    "562": {
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        5662,
        5929
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x23C"
    },
    "565": {
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        5662,
        5929
      ],
      "op": "CALLDATASIZE",
      "path": "30"
    },
    "566": {
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        5662,
        5929
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "568": {
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        5662,
        5929
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1057"
    },
    "571": {
      "fn": "VoteLocker.getPastTotalSupply",
      "jump": "i",
      "offset": [
        5662,
        5929
      ],
      "op": "JUMP",
      "path": "30"
    },
    "572": {
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        5662,
        5929
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "573": {
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        5662,
        5929
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x71D"
    },
    "576": {
      "fn": "VoteLocker.getPastTotalSupply",
      "jump": "i",
      "offset": [
        5662,
        5929
      ],
      "op": "JUMP",
      "path": "30"
    },
    "577": {
      "offset": [
        1912,
        1957
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "578": {
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        1912,
        1957
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x14C"
    },
    "581": {
      "offset": [
        1956,
        1957
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "583": {
      "offset": [
        1912,
        1957
      ],
      "op": "DUP2",
      "path": "30"
    },
    "584": {
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        1912,
        1957
      ],
      "op": "JUMP",
      "path": "30"
    },
    "585": {
      "fn": "VoteLocker.symbol",
      "offset": [
        2931,
        3024
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "586": {
      "fn": "VoteLocker.symbol",
      "offset": [
        2931,
        3024
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x12E"
    },
    "589": {
      "fn": "VoteLocker.symbol",
      "offset": [
        2931,
        3024
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x779"
    },
    "592": {
      "fn": "VoteLocker.symbol",
      "jump": "i",
      "offset": [
        2931,
        3024
      ],
      "op": "JUMP",
      "path": "30"
    },
    "593": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4779,
        4971
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "594": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4779,
        4971
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x14C"
    },
    "597": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4779,
        4971
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x25F"
    },
    "600": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4779,
        4971
      ],
      "op": "CALLDATASIZE",
      "path": "30"
    },
    "601": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4779,
        4971
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "603": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4779,
        4971
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x10B6"
    },
    "606": {
      "fn": "VoteLocker.getVotes",
      "jump": "i",
      "offset": [
        4779,
        4971
      ],
      "op": "JUMP",
      "path": "30"
    },
    "607": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4779,
        4971
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "608": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4779,
        4971
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x788"
    },
    "611": {
      "fn": "VoteLocker.getVotes",
      "jump": "i",
      "offset": [
        4779,
        4971
      ],
      "op": "JUMP",
      "path": "30"
    },
    "612": {
      "fn": "VoteLocker.delegateBySig",
      "offset": [
        8172,
        8412
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "613": {
      "fn": "VoteLocker.delegateBySig",
      "offset": [
        8172,
        8412
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x16D"
    },
    "616": {
      "fn": "VoteLocker.delegateBySig",
      "offset": [
        8172,
        8412
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x272"
    },
    "619": {
      "fn": "VoteLocker.delegateBySig",
      "offset": [
        8172,
        8412
      ],
      "op": "CALLDATASIZE",
      "path": "30"
    },
    "620": {
      "fn": "VoteLocker.delegateBySig",
      "offset": [
        8172,
        8412
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "622": {
      "fn": "VoteLocker.delegateBySig",
      "offset": [
        8172,
        8412
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x10D1"
    },
    "625": {
      "fn": "VoteLocker.delegateBySig",
      "jump": "i",
      "offset": [
        8172,
        8412
      ],
      "op": "JUMP",
      "path": "30"
    },
    "626": {
      "fn": "VoteLocker.delegateBySig",
      "offset": [
        8172,
        8412
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "627": {
      "fn": "VoteLocker.delegateBySig",
      "offset": [
        8172,
        8412
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x80F"
    },
    "630": {
      "fn": "VoteLocker.delegateBySig",
      "jump": "i",
      "offset": [
        8172,
        8412
      ],
      "op": "JUMP",
      "path": "30"
    },
    "631": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8754,
        10336
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "632": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8754,
        10336
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x16D"
    },
    "635": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8754,
        10336
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x285"
    },
    "638": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8754,
        10336
      ],
      "op": "CALLDATASIZE",
      "path": "30"
    },
    "639": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8754,
        10336
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "641": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8754,
        10336
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1131"
    },
    "644": {
      "fn": "VoteLocker.deposit",
      "jump": "i",
      "offset": [
        8754,
        10336
      ],
      "op": "JUMP",
      "path": "30"
    },
    "645": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8754,
        10336
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "646": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8754,
        10336
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x868"
    },
    "649": {
      "fn": "VoteLocker.deposit",
      "jump": "i",
      "offset": [
        8754,
        10336
      ],
      "op": "JUMP",
      "path": "30"
    },
    "650": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4092,
        4276
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "651": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4092,
        4276
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x29D"
    },
    "654": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4092,
        4276
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x298"
    },
    "657": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4092,
        4276
      ],
      "op": "CALLDATASIZE",
      "path": "30"
    },
    "658": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4092,
        4276
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "660": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4092,
        4276
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1153"
    },
    "663": {
      "fn": "VoteLocker.checkpoints",
      "jump": "i",
      "offset": [
        4092,
        4276
      ],
      "op": "JUMP",
      "path": "30"
    },
    "664": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4092,
        4276
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "665": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4092,
        4276
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xB60"
    },
    "668": {
      "fn": "VoteLocker.checkpoints",
      "jump": "i",
      "offset": [
        4092,
        4276
      ],
      "op": "JUMP",
      "path": "30"
    },
    "669": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4092,
        4276
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "670": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4092,
        4276
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "672": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4092,
        4276
      ],
      "op": "DUP1",
      "path": "30"
    },
    "673": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4092,
        4276
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "674": {
      "op": "DUP3"
    },
    "675": {
      "op": "MLOAD"
    },
    "676": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "681": {
      "op": "AND"
    },
    "682": {
      "op": "DUP2"
    },
    "683": {
      "op": "MSTORE"
    },
    "684": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "686": {
      "op": "SWAP3"
    },
    "687": {
      "op": "DUP4"
    },
    "688": {
      "op": "ADD"
    },
    "689": {
      "op": "MLOAD"
    },
    "690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "694": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "696": {
      "op": "SHL"
    },
    "697": {
      "op": "SUB"
    },
    "698": {
      "op": "AND"
    },
    "699": {
      "op": "SWAP3"
    },
    "700": {
      "op": "DUP2"
    },
    "701": {
      "op": "ADD"
    },
    "702": {
      "op": "SWAP3"
    },
    "703": {
      "op": "SWAP1"
    },
    "704": {
      "op": "SWAP3"
    },
    "705": {
      "op": "MSTORE"
    },
    "706": {
      "op": "ADD"
    },
    "707": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4092,
        4276
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x13B"
    },
    "710": {
      "op": "JUMP"
    },
    "711": {
      "offset": [
        1683,
        1738
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "712": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        1683,
        1738
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x14C"
    },
    "715": {
      "offset": [
        1723,
        1738
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0x784CE00"
    },
    "720": {
      "offset": [
        1683,
        1738
      ],
      "op": "DUP2",
      "path": "30"
    },
    "721": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        1683,
        1738
      ],
      "op": "JUMP",
      "path": "30"
    },
    "722": {
      "fn": "VoteLocker.name",
      "offset": [
        2729,
        2818
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "723": {
      "fn": "VoteLocker.name",
      "offset": [
        2774,
        2787
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x60"
    },
    "725": {
      "fn": "VoteLocker.name",
      "offset": [
        2806,
        2811
      ],
      "op": "PUSH1",
      "path": "30",
      "statement": 1,
      "value": "0x0"
    },
    "727": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "DUP1",
      "path": "30"
    },
    "728": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "729": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x2E1"
    },
    "732": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "733": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1193"
    },
    "736": {
      "fn": "VoteLocker.name",
      "jump": "i",
      "offset": [
        2799,
        2811
      ],
      "op": "JUMP",
      "path": "30"
    },
    "737": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "738": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "DUP1",
      "path": "30"
    },
    "739": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x1F"
    },
    "741": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "ADD",
      "path": "30"
    },
    "742": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "744": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "DUP1",
      "path": "30"
    },
    "745": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "746": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "DIV",
      "path": "30"
    },
    "747": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "MUL",
      "path": "30"
    },
    "748": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "750": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "ADD",
      "path": "30"
    },
    "751": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "753": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "754": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "755": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "DUP2",
      "path": "30"
    },
    "756": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "ADD",
      "path": "30"
    },
    "757": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "759": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "760": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "DUP1",
      "path": "30"
    },
    "761": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "762": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "763": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "764": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "DUP2",
      "path": "30"
    },
    "765": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "DUP2",
      "path": "30"
    },
    "766": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "767": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "769": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "ADD",
      "path": "30"
    },
    "770": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "DUP3",
      "path": "30"
    },
    "771": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "DUP1",
      "path": "30"
    },
    "772": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "773": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x30D"
    },
    "776": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "777": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1193"
    },
    "780": {
      "fn": "VoteLocker.name",
      "jump": "i",
      "offset": [
        2799,
        2811
      ],
      "op": "JUMP",
      "path": "30"
    },
    "781": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "782": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "DUP1",
      "path": "30"
    },
    "783": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "784": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x35A"
    },
    "787": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "788": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "DUP1",
      "path": "30"
    },
    "789": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x1F"
    },
    "791": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "LT",
      "path": "30"
    },
    "792": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x32F"
    },
    "795": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "796": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x100"
    },
    "799": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "DUP1",
      "path": "30"
    },
    "800": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "DUP4",
      "path": "30"
    },
    "801": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "802": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "DIV",
      "path": "30"
    },
    "803": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "MUL",
      "path": "30"
    },
    "804": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "DUP4",
      "path": "30"
    },
    "805": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "806": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "807": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "809": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "ADD",
      "path": "30"
    },
    "810": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "811": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x35A"
    },
    "814": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "JUMP",
      "path": "30"
    },
    "815": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "816": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "DUP3",
      "path": "30"
    },
    "817": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "ADD",
      "path": "30"
    },
    "818": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "819": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "820": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "822": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "823": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "825": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "827": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "KECCAK256",
      "path": "30"
    },
    "828": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "829": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "830": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "DUP2",
      "path": "30"
    },
    "831": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "832": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "DUP2",
      "path": "30"
    },
    "833": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "834": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "835": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x1"
    },
    "837": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "ADD",
      "path": "30"
    },
    "838": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "839": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "841": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "ADD",
      "path": "30"
    },
    "842": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "DUP1",
      "path": "30"
    },
    "843": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "DUP4",
      "path": "30"
    },
    "844": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "GT",
      "path": "30"
    },
    "845": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x33D"
    },
    "848": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "849": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "DUP3",
      "path": "30"
    },
    "850": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "851": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "SUB",
      "path": "30"
    },
    "852": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x1F"
    },
    "854": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "AND",
      "path": "30"
    },
    "855": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "DUP3",
      "path": "30"
    },
    "856": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "ADD",
      "path": "30"
    },
    "857": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "858": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "859": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "POP",
      "path": "30"
    },
    "860": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "POP",
      "path": "30"
    },
    "861": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "POP",
      "path": "30"
    },
    "862": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "POP",
      "path": "30"
    },
    "863": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "POP",
      "path": "30"
    },
    "864": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "865": {
      "fn": "VoteLocker.name",
      "offset": [
        2799,
        2811
      ],
      "op": "POP",
      "path": "30"
    },
    "866": {
      "fn": "VoteLocker.name",
      "offset": [
        2729,
        2818
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "867": {
      "fn": "VoteLocker.name",
      "jump": "o",
      "offset": [
        2729,
        2818
      ],
      "op": "JUMP",
      "path": "30"
    },
    "868": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3596,
        3841
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "869": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3671,
        3694
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x5"
    },
    "871": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3671,
        3701
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "872": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3648,
        3655
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "874": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3648,
        3655
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "875": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3667,
        3741
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x374"
    },
    "878": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3667,
        3741
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "879": {
      "op": "POP"
    },
    "880": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3729,
        3730
      ],
      "op": "PUSH1",
      "path": "30",
      "statement": 2,
      "value": "0x0"
    },
    "882": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3729,
        3730
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "883": {
      "fn": "VoteLocker.totalSupply",
      "jump": "o",
      "offset": [
        3596,
        3841
      ],
      "op": "JUMP",
      "path": "30"
    },
    "884": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3667,
        3741
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "885": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3769,
        3792
      ],
      "op": "PUSH1",
      "path": "30",
      "statement": 3,
      "value": "0x5"
    },
    "887": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3793,
        3823
      ],
      "op": "DUP1",
      "path": "30"
    },
    "888": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3793,
        3823
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "889": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3793,
        3827
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x384"
    },
    "892": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3793,
        3827
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "893": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3826,
        3827
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x1"
    },
    "895": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3826,
        3827
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "896": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3793,
        3827
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x11E4"
    },
    "899": {
      "fn": "VoteLocker.totalSupply",
      "jump": "i",
      "offset": [
        3793,
        3827
      ],
      "op": "JUMP",
      "path": "30"
    },
    "900": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3793,
        3827
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "901": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3769,
        3828
      ],
      "op": "DUP2",
      "path": "30"
    },
    "902": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3769,
        3828
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "903": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3769,
        3828
      ],
      "op": "DUP2",
      "path": "30"
    },
    "904": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3769,
        3828
      ],
      "op": "LT",
      "path": "30"
    },
    "905": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3769,
        3828
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x394"
    },
    "908": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3769,
        3828
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "909": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3769,
        3828
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x394"
    },
    "912": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3769,
        3828
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x11FB"
    },
    "915": {
      "fn": "VoteLocker.totalSupply",
      "jump": "i",
      "offset": [
        3769,
        3828
      ],
      "op": "JUMP",
      "path": "30"
    },
    "916": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3769,
        3828
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "917": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3769,
        3828
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "919": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3769,
        3828
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "920": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3769,
        3828
      ],
      "op": "DUP3",
      "path": "30"
    },
    "921": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3769,
        3828
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "922": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3769,
        3828
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "924": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3769,
        3828
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "925": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3769,
        3828
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "926": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3769,
        3828
      ],
      "op": "KECCAK256",
      "path": "30"
    },
    "927": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3769,
        3828
      ],
      "op": "ADD",
      "path": "30"
    },
    "928": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3769,
        3834
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "929": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3769,
        3834
      ],
      "op": "PUSH5",
      "path": "30",
      "value": "0x100000000"
    },
    "935": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3769,
        3834
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "936": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3769,
        3834
      ],
      "op": "DIV",
      "path": "30"
    },
    "937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "941": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "943": {
      "op": "SHL"
    },
    "944": {
      "op": "SUB"
    },
    "945": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3769,
        3834
      ],
      "op": "AND",
      "path": "30"
    },
    "946": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3769,
        3834
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "947": {
      "fn": "VoteLocker.totalSupply",
      "offset": [
        3769,
        3834
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "948": {
      "op": "POP"
    },
    "949": {
      "fn": "VoteLocker.totalSupply",
      "jump": "o",
      "offset": [
        3596,
        3841
      ],
      "op": "JUMP",
      "path": "30"
    },
    "950": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10770,
        11827
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "951": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10838,
        10839
      ],
      "op": "PUSH1",
      "path": "30",
      "statement": 4,
      "value": "0x0"
    },
    "953": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10829,
        10835
      ],
      "op": "DUP2",
      "path": "30"
    },
    "954": {
      "branch": 45,
      "fn": "VoteLocker.withdraw",
      "offset": [
        10829,
        10839
      ],
      "op": "GT",
      "path": "30"
    },
    "955": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10821,
        10873
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x40B"
    },
    "958": {
      "branch": 45,
      "fn": "VoteLocker.withdraw",
      "offset": [
        10821,
        10873
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "959": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10821,
        10873
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "961": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10821,
        10873
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "962": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "966": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "968": {
      "op": "SHL"
    },
    "969": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10821,
        10873
      ],
      "op": "DUP2",
      "path": "30"
    },
    "970": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10821,
        10873
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "971": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "973": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10821,
        10873
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "975": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10821,
        10873
      ],
      "op": "DUP3",
      "path": "30"
    },
    "976": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10821,
        10873
      ],
      "op": "ADD",
      "path": "30"
    },
    "977": {
      "op": "MSTORE"
    },
    "978": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "980": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "982": {
      "op": "DUP3"
    },
    "983": {
      "op": "ADD"
    },
    "984": {
      "op": "MSTORE"
    },
    "985": {
      "op": "PUSH32",
      "value": "0x416D6F756E74206D7573742062652067726561746572207468616E2030000000"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1020": {
      "op": "DUP3"
    },
    "1021": {
      "op": "ADD"
    },
    "1022": {
      "op": "MSTORE"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1025": {
      "op": "ADD"
    },
    "1026": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10821,
        10873
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1027": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10821,
        10873
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "1029": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10821,
        10873
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "1030": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10821,
        10873
      ],
      "op": "DUP1",
      "path": "30"
    },
    "1031": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10821,
        10873
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "1032": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10821,
        10873
      ],
      "op": "SUB",
      "path": "30"
    },
    "1033": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10821,
        10873
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1034": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10821,
        10873
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "30"
    },
    "1035": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10821,
        10873
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1036": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10921,
        10931
      ],
      "op": "CALLER",
      "path": "30"
    },
    "1037": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10910
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "1039": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10913,
        10932
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1040": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10913,
        10932
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1041": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10913,
        10932
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1042": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10913,
        10920
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "1044": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10913,
        10932
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "1046": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10913,
        10932
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1047": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10913,
        10932
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1048": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10913,
        10932
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1049": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10913,
        10932
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "1051": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10913,
        10932
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "1052": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10913,
        10932
      ],
      "op": "DUP3",
      "path": "30"
    },
    "1053": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10913,
        10932
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1054": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10913,
        10932
      ],
      "op": "KECCAK256",
      "path": "30"
    },
    "1055": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "DUP3",
      "path": "30"
    },
    "1056": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "1057": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x80"
    },
    "1059": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1060": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "ADD",
      "path": "30"
    },
    "1061": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "DUP5",
      "path": "30"
    },
    "1062": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1063": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1064": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "1065": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0xFF"
    },
    "1067": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "AND",
      "path": "30"
    },
    "1068": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "1069": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "1070": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1071": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1072": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x1"
    },
    "1074": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "DUP3",
      "path": "30"
    },
    "1075": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "ADD",
      "path": "30"
    },
    "1076": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "1077": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "1078": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1079": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "ADD",
      "path": "30"
    },
    "1080": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "1081": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1082": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "1083": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1084": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x2"
    },
    "1086": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1087": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "ADD",
      "path": "30"
    },
    "1088": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "1089": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "1090": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "DUP3",
      "path": "30"
    },
    "1091": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "ADD",
      "path": "30"
    },
    "1092": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "1093": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1094": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "1095": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1096": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x3"
    },
    "1098": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1099": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "1100": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "ADD",
      "path": "30"
    },
    "1101": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "1102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1108": {
      "op": "SHL"
    },
    "1109": {
      "op": "SUB"
    },
    "1110": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "AND",
      "path": "30"
    },
    "1111": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x60"
    },
    "1113": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "DUP3",
      "path": "30"
    },
    "1114": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "ADD",
      "path": "30"
    },
    "1115": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1116": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1117": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10884,
        10932
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1118": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10942,
        10999
      ],
      "op": "PUSH2",
      "path": "30",
      "statement": 5,
      "value": "0x4A0"
    },
    "1121": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10942,
        10999
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "1122": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10942,
        10999
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "1124": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10942,
        10999
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "1125": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1129": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1131": {
      "op": "SHL"
    },
    "1132": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10942,
        10999
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1133": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10942,
        10999
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1136": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10942,
        10999
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "1138": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10942,
        10999
      ],
      "op": "DUP3",
      "path": "30"
    },
    "1139": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10942,
        10999
      ],
      "op": "ADD",
      "path": "30"
    },
    "1140": {
      "op": "MSTORE"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1145": {
      "op": "DUP3"
    },
    "1146": {
      "op": "ADD"
    },
    "1147": {
      "op": "MSTORE"
    },
    "1148": {
      "op": "PUSH20",
      "value": "0x4E6F207374616B6520746F207769746864726177"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1171": {
      "op": "SHL"
    },
    "1172": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1174": {
      "op": "DUP3"
    },
    "1175": {
      "op": "ADD"
    },
    "1176": {
      "op": "MSTORE"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1179": {
      "op": "ADD"
    },
    "1180": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10942,
        10999
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x402"
    },
    "1183": {
      "op": "JUMP"
    },
    "1184": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10942,
        10999
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1185": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11041,
        11056
      ],
      "op": "TIMESTAMP",
      "path": "30",
      "statement": 6
    },
    "1186": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11017,
        11030
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1187": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11017,
        11037
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "1189": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11017,
        11037
      ],
      "op": "ADD",
      "path": "30"
    },
    "1190": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11017,
        11037
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "1191": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11017,
        11056
      ],
      "op": "GT",
      "path": "30"
    },
    "1192": {
      "branch": 46,
      "fn": "VoteLocker.withdraw",
      "offset": [
        11017,
        11056
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "1193": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11009,
        11079
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x4E9"
    },
    "1196": {
      "branch": 46,
      "fn": "VoteLocker.withdraw",
      "offset": [
        11009,
        11079
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "1197": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11009,
        11079
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "1199": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11009,
        11079
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "1200": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1206": {
      "op": "SHL"
    },
    "1207": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11009,
        11079
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1208": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11009,
        11079
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1211": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11009,
        11079
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "1213": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11009,
        11079
      ],
      "op": "DUP3",
      "path": "30"
    },
    "1214": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11009,
        11079
      ],
      "op": "ADD",
      "path": "30"
    },
    "1215": {
      "op": "MSTORE"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1220": {
      "op": "DUP3"
    },
    "1221": {
      "op": "ADD"
    },
    "1222": {
      "op": "MSTORE"
    },
    "1223": {
      "op": "PUSH18",
      "value": "0x131BD8DADD5C081B9BDD08195E1C1A5C9959"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "1244": {
      "op": "SHL"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1247": {
      "op": "DUP3"
    },
    "1248": {
      "op": "ADD"
    },
    "1249": {
      "op": "MSTORE"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1252": {
      "op": "ADD"
    },
    "1253": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11009,
        11079
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x402"
    },
    "1256": {
      "op": "JUMP"
    },
    "1257": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11009,
        11079
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1258": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11090,
        11106
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "1260": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11109,
        11252
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x50B"
    },
    "1263": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11147,
        11160
      ],
      "op": "DUP3",
      "path": "30"
    },
    "1264": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11147,
        11167
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x60"
    },
    "1266": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11147,
        11167
      ],
      "op": "ADD",
      "path": "30"
    },
    "1267": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11147,
        11167
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "1268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1274": {
      "op": "SHL"
    },
    "1275": {
      "op": "SUB"
    },
    "1276": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11109,
        11252
      ],
      "op": "AND",
      "path": "30"
    },
    "1277": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11181,
        11194
      ],
      "op": "DUP4",
      "path": "30"
    },
    "1278": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11181,
        11201
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "1280": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11181,
        11201
      ],
      "op": "ADD",
      "path": "30"
    },
    "1281": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11181,
        11201
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "1282": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11215,
        11228
      ],
      "op": "DUP5",
      "path": "30"
    },
    "1283": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11215,
        11242
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "1285": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11215,
        11242
      ],
      "op": "ADD",
      "path": "30"
    },
    "1286": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11215,
        11242
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "1287": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11109,
        11133
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xBE4"
    },
    "1290": {
      "fn": "VoteLocker.withdraw",
      "jump": "i",
      "offset": [
        11109,
        11252
      ],
      "op": "JUMP",
      "path": "30"
    },
    "1291": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11109,
        11252
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1292": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11090,
        11252
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1293": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11090,
        11252
      ],
      "op": "POP",
      "path": "30"
    },
    "1294": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11263,
        11279
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "1296": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11282,
        11454
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x542"
    },
    "1299": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11343,
        11369
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x51B"
    },
    "1302": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11362,
        11368
      ],
      "op": "DUP6",
      "path": "30"
    },
    "1303": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11343,
        11361
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xC34"
    },
    "1306": {
      "fn": "VoteLocker.withdraw",
      "jump": "i",
      "offset": [
        11343,
        11369
      ],
      "op": "JUMP",
      "path": "30"
    },
    "1307": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11343,
        11369
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1308": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11320,
        11333
      ],
      "op": "DUP5",
      "path": "30"
    },
    "1309": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11320,
        11340
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x60"
    },
    "1311": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11320,
        11340
      ],
      "op": "ADD",
      "path": "30"
    },
    "1312": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11320,
        11340
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "1313": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11320,
        11369
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x52A"
    },
    "1316": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11320,
        11369
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "1317": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11320,
        11369
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1318": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11320,
        11369
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1211"
    },
    "1321": {
      "fn": "VoteLocker.withdraw",
      "jump": "i",
      "offset": [
        11320,
        11369
      ],
      "op": "JUMP",
      "path": "30"
    },
    "1322": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11320,
        11369
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1329": {
      "op": "SHL"
    },
    "1330": {
      "op": "SUB"
    },
    "1331": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11282,
        11454
      ],
      "op": "AND",
      "path": "30"
    },
    "1332": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11383,
        11396
      ],
      "op": "DUP5",
      "path": "30"
    },
    "1333": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11383,
        11403
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "1335": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11383,
        11403
      ],
      "op": "ADD",
      "path": "30"
    },
    "1336": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11383,
        11403
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "1337": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11417,
        11430
      ],
      "op": "DUP6",
      "path": "30"
    },
    "1338": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11417,
        11444
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "1340": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11417,
        11444
      ],
      "op": "ADD",
      "path": "30"
    },
    "1341": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11417,
        11444
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "1342": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11282,
        11306
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xBE4"
    },
    "1345": {
      "fn": "VoteLocker.withdraw",
      "jump": "i",
      "offset": [
        11282,
        11454
      ],
      "op": "JUMP",
      "path": "30"
    },
    "1346": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11282,
        11454
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1347": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11263,
        11454
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1348": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11263,
        11454
      ],
      "op": "POP",
      "path": "30"
    },
    "1349": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11489,
        11515
      ],
      "op": "PUSH2",
      "path": "30",
      "statement": 7,
      "value": "0x54D"
    },
    "1352": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11508,
        11514
      ],
      "op": "DUP5",
      "path": "30"
    },
    "1353": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11489,
        11507
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xC34"
    },
    "1356": {
      "fn": "VoteLocker.withdraw",
      "jump": "i",
      "offset": [
        11489,
        11515
      ],
      "op": "JUMP",
      "path": "30"
    },
    "1357": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11489,
        11515
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1358": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11465,
        11478
      ],
      "op": "DUP4",
      "path": "30"
    },
    "1359": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11465,
        11485
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x60"
    },
    "1361": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11465,
        11485
      ],
      "op": "ADD",
      "path": "30"
    },
    "1362": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11465,
        11515
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1363": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11465,
        11515
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1364": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11465,
        11515
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "1365": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11465,
        11515
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x55E"
    },
    "1368": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11465,
        11515
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "1369": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11465,
        11515
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1370": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11465,
        11515
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1211"
    },
    "1373": {
      "fn": "VoteLocker.withdraw",
      "jump": "i",
      "offset": [
        11465,
        11515
      ],
      "op": "JUMP",
      "path": "30"
    },
    "1374": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11465,
        11515
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1381": {
      "op": "SHL"
    },
    "1382": {
      "op": "SUB"
    },
    "1383": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11465,
        11515
      ],
      "op": "AND",
      "path": "30"
    },
    "1384": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11465,
        11515
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1385": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11465,
        11515
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1386": {
      "op": "POP"
    },
    "1387": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11530,
        11540
      ],
      "op": "DUP4",
      "path": "30"
    },
    "1388": {
      "branch": 47,
      "fn": "VoteLocker.withdraw",
      "offset": [
        11530,
        11540
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "1389": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11526,
        11661
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x5E7"
    },
    "1392": {
      "branch": 47,
      "fn": "VoteLocker.withdraw",
      "offset": [
        11526,
        11661
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "1393": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11621
      ],
      "op": "PUSH1",
      "path": "30",
      "statement": 8,
      "value": "0x6"
    },
    "1395": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11621
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "1396": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "1398": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "1399": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1406": {
      "op": "SHL"
    },
    "1407": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1408": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1409": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11631,
        11641
      ],
      "op": "CALLER",
      "path": "30"
    },
    "1410": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "1412": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "DUP3",
      "path": "30"
    },
    "1413": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "ADD",
      "path": "30"
    },
    "1414": {
      "op": "MSTORE"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1417": {
      "op": "DUP2"
    },
    "1418": {
      "op": "ADD"
    },
    "1419": {
      "op": "DUP7"
    },
    "1420": {
      "op": "SWAP1"
    },
    "1421": {
      "op": "MSTORE"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1428": {
      "op": "SHL"
    },
    "1429": {
      "op": "SUB"
    },
    "1430": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11621
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1431": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11621
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "1432": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11621
      ],
      "op": "AND",
      "path": "30"
    },
    "1433": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11621
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1434": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11630
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0xA9059CBB"
    },
    "1439": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11630
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1442": {
      "op": "ADD"
    },
    "1443": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "1445": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "1447": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "1448": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "DUP1",
      "path": "30"
    },
    "1449": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "DUP4",
      "path": "30"
    },
    "1450": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "SUB",
      "path": "30"
    },
    "1451": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1452": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "1454": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "DUP8",
      "path": "30"
    },
    "1455": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "GAS",
      "path": "30"
    },
    "1456": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "CALL",
      "path": "30"
    },
    "1457": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "1458": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "DUP1",
      "path": "30"
    },
    "1459": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "1460": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x5C1"
    },
    "1463": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "1464": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "RETURNDATASIZE",
      "path": "30"
    },
    "1465": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "1467": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "DUP1",
      "path": "30"
    },
    "1468": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "RETURNDATACOPY",
      "path": "30"
    },
    "1469": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "RETURNDATASIZE",
      "path": "30"
    },
    "1470": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "1472": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "REVERT",
      "path": "30"
    },
    "1473": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1474": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "POP",
      "path": "30"
    },
    "1475": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "POP",
      "path": "30"
    },
    "1476": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "POP",
      "path": "30"
    },
    "1477": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "POP",
      "path": "30"
    },
    "1478": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "1480": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "1481": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "RETURNDATASIZE",
      "path": "30"
    },
    "1482": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x1F"
    },
    "1484": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "NOT",
      "path": "30"
    },
    "1485": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x1F"
    },
    "1487": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "DUP3",
      "path": "30"
    },
    "1488": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "ADD",
      "path": "30"
    },
    "1489": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "AND",
      "path": "30"
    },
    "1490": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "DUP3",
      "path": "30"
    },
    "1491": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "ADD",
      "path": "30"
    },
    "1492": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "DUP1",
      "path": "30"
    },
    "1493": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "1495": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1496": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "POP",
      "path": "30"
    },
    "1497": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1498": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "ADD",
      "path": "30"
    },
    "1499": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1500": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x5E5"
    },
    "1503": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "1504": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1505": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1239"
    },
    "1508": {
      "fn": "VoteLocker.withdraw",
      "jump": "i",
      "offset": [
        11609,
        11650
      ],
      "op": "JUMP",
      "path": "30"
    },
    "1509": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1510": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11609,
        11650
      ],
      "op": "POP",
      "path": "30"
    },
    "1511": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11526,
        11661
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1512": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11701,
        11711
      ],
      "op": "CALLER",
      "path": "30",
      "statement": 9
    },
    "1513": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11688,
        11712
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "1515": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11688,
        11712
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1516": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11688,
        11712
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1517": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11688,
        11712
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1518": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11688,
        11700
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x3"
    },
    "1520": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11688,
        11712
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "1522": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11688,
        11712
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1523": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11688,
        11712
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "1525": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11688,
        11712
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1526": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11688,
        11712
      ],
      "op": "KECCAK256",
      "path": "30"
    },
    "1527": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11671,
        11740
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x60C"
    },
    "1530": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11671,
        11740
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1531": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11714,
        11718
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xCA1"
    },
    "1534": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11720,
        11739
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x607"
    },
    "1537": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11731,
        11739
      ],
      "op": "DUP5",
      "path": "30"
    },
    "1538": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11720,
        11728
      ],
      "op": "DUP7",
      "path": "30"
    },
    "1539": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11720,
        11739
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x11E4"
    },
    "1542": {
      "fn": "VoteLocker.withdraw",
      "jump": "i",
      "offset": [
        11720,
        11739
      ],
      "op": "JUMP",
      "path": "30"
    },
    "1543": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11720,
        11739
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1544": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11671,
        11687
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xCAD"
    },
    "1547": {
      "fn": "VoteLocker.withdraw",
      "jump": "i",
      "offset": [
        11671,
        11740
      ],
      "op": "JUMP",
      "path": "30"
    },
    "1548": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11671,
        11740
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1549": {
      "op": "POP"
    },
    "1550": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11782,
        11820
      ],
      "op": "PUSH2",
      "path": "30",
      "statement": 10,
      "value": "0x622"
    },
    "1553": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11782,
        11820
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1554": {
      "op": "POP"
    },
    "1555": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11788,
        11798
      ],
      "op": "CALLER",
      "path": "30"
    },
    "1556": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11800,
        11819
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x61D"
    },
    "1559": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11811,
        11819
      ],
      "op": "DUP4",
      "path": "30"
    },
    "1560": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11800,
        11808
      ],
      "op": "DUP6",
      "path": "30"
    },
    "1561": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11800,
        11819
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x11E4"
    },
    "1564": {
      "fn": "VoteLocker.withdraw",
      "jump": "i",
      "offset": [
        11800,
        11819
      ],
      "op": "JUMP",
      "path": "30"
    },
    "1565": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11800,
        11819
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1566": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11782,
        11787
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xE26"
    },
    "1569": {
      "fn": "VoteLocker.withdraw",
      "jump": "i",
      "offset": [
        11782,
        11820
      ],
      "op": "JUMP",
      "path": "30"
    },
    "1570": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        11782,
        11820
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1571": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10811,
        11827
      ],
      "op": "POP",
      "path": "30"
    },
    "1572": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10811,
        11827
      ],
      "op": "POP",
      "path": "30"
    },
    "1573": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10811,
        11827
      ],
      "op": "POP",
      "path": "30"
    },
    "1574": {
      "fn": "VoteLocker.withdraw",
      "offset": [
        10770,
        11827
      ],
      "op": "POP",
      "path": "30"
    },
    "1575": {
      "fn": "VoteLocker.withdraw",
      "jump": "o",
      "offset": [
        10770,
        11827
      ],
      "op": "JUMP",
      "path": "30"
    },
    "1576": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5164,
        5440
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1577": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5269,
        5276
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "1579": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5314,
        5326
      ],
      "op": "NUMBER",
      "path": "30",
      "statement": 11
    },
    "1580": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5300,
        5311
      ],
      "op": "DUP3",
      "path": "30"
    },
    "1581": {
      "branch": 48,
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5300,
        5326
      ],
      "op": "LT",
      "path": "30"
    },
    "1582": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5292,
        5362
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x679"
    },
    "1585": {
      "branch": 48,
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5292,
        5362
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "1586": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5292,
        5362
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "1588": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5292,
        5362
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "1589": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1595": {
      "op": "SHL"
    },
    "1596": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5292,
        5362
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1597": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5292,
        5362
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1600": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5292,
        5362
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "1602": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5292,
        5362
      ],
      "op": "DUP3",
      "path": "30"
    },
    "1603": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5292,
        5362
      ],
      "op": "ADD",
      "path": "30"
    },
    "1604": {
      "op": "MSTORE"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1609": {
      "op": "DUP3"
    },
    "1610": {
      "op": "ADD"
    },
    "1611": {
      "op": "MSTORE"
    },
    "1612": {
      "op": "PUSH32",
      "value": "0x566F74654C6F636B65723A20626C6F636B206E6F7420796574206D696E656400"
    },
    "1645": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1647": {
      "op": "DUP3"
    },
    "1648": {
      "op": "ADD"
    },
    "1649": {
      "op": "MSTORE"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1652": {
      "op": "ADD"
    },
    "1653": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5292,
        5362
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x402"
    },
    "1656": {
      "op": "JUMP"
    },
    "1657": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5292,
        5362
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1664": {
      "op": "SHL"
    },
    "1665": {
      "op": "SUB"
    },
    "1666": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5398,
        5419
      ],
      "op": "DUP4",
      "path": "30",
      "statement": 12
    },
    "1667": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5398,
        5419
      ],
      "op": "AND",
      "path": "30"
    },
    "1668": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5398,
        5419
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "1670": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5398,
        5419
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1671": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5398,
        5419
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1672": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5398,
        5419
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1673": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5398,
        5410
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x3"
    },
    "1675": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5398,
        5419
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "1677": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5398,
        5419
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1678": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5398,
        5419
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "1680": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5398,
        5419
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1681": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5398,
        5419
      ],
      "op": "KECCAK256",
      "path": "30"
    },
    "1682": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5379,
        5433
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x69B"
    },
    "1685": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5379,
        5433
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1686": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5421,
        5432
      ],
      "op": "DUP4",
      "path": "30"
    },
    "1687": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5379,
        5397
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xE34"
    },
    "1690": {
      "fn": "VoteLocker.getPastVotes",
      "jump": "i",
      "offset": [
        5379,
        5433
      ],
      "op": "JUMP",
      "path": "30"
    },
    "1691": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5379,
        5433
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1692": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5372,
        5433
      ],
      "op": "SWAP4",
      "path": "30"
    },
    "1693": {
      "fn": "VoteLocker.getPastVotes",
      "offset": [
        5164,
        5440
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "1694": {
      "op": "POP"
    },
    "1695": {
      "op": "POP"
    },
    "1696": {
      "op": "POP"
    },
    "1697": {
      "fn": "VoteLocker.getPastVotes",
      "jump": "o",
      "offset": [
        5164,
        5440
      ],
      "op": "JUMP",
      "path": "30"
    },
    "1698": {
      "fn": "VoteLocker.delegate",
      "offset": [
        7989,
        8095
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1699": {
      "fn": "VoteLocker.delegate",
      "offset": [
        8051,
        8088
      ],
      "op": "PUSH1",
      "path": "30",
      "statement": 13,
      "value": "0x40"
    },
    "1701": {
      "fn": "VoteLocker.delegate",
      "offset": [
        8051,
        8088
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "1702": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1706": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1708": {
      "op": "SHL"
    },
    "1709": {
      "fn": "VoteLocker.delegate",
      "offset": [
        8051,
        8088
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1710": {
      "fn": "VoteLocker.delegate",
      "offset": [
        8051,
        8088
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1711": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1713": {
      "fn": "VoteLocker.delegate",
      "offset": [
        8051,
        8088
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "1715": {
      "fn": "VoteLocker.delegate",
      "offset": [
        8051,
        8088
      ],
      "op": "DUP3",
      "path": "30"
    },
    "1716": {
      "fn": "VoteLocker.delegate",
      "offset": [
        8051,
        8088
      ],
      "op": "ADD",
      "path": "30"
    },
    "1717": {
      "op": "MSTORE"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "1720": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1722": {
      "op": "DUP3"
    },
    "1723": {
      "op": "ADD"
    },
    "1724": {
      "op": "MSTORE"
    },
    "1725": {
      "op": "PUSH32",
      "value": "0x44656C65676174696F6E206973206E6F7420737570706F727465640000000000"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1760": {
      "op": "DUP3"
    },
    "1761": {
      "op": "ADD"
    },
    "1762": {
      "op": "MSTORE"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1765": {
      "op": "ADD"
    },
    "1766": {
      "fn": "VoteLocker.delegate",
      "offset": [
        8051,
        8088
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x402"
    },
    "1769": {
      "op": "JUMP"
    },
    "1770": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4351,
        4536
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1775": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1777": {
      "op": "SHL"
    },
    "1778": {
      "op": "SUB"
    },
    "1779": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4500,
        4521
      ],
      "op": "DUP2",
      "path": "30",
      "statement": 14
    },
    "1780": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4500,
        4521
      ],
      "op": "AND",
      "path": "30"
    },
    "1781": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4453,
        4459
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "1783": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4500,
        4521
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1784": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4500,
        4521
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1785": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4500,
        4521
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1786": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4500,
        4512
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x3"
    },
    "1788": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4500,
        4521
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "1790": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4500,
        4521
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1791": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4500,
        4521
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "1793": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4500,
        4521
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1794": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4500,
        4521
      ],
      "op": "KECCAK256",
      "path": "30"
    },
    "1795": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4500,
        4528
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "1796": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4482,
        4529
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x70C"
    },
    "1799": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4482,
        4529
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1800": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4482,
        4499
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xEF1"
    },
    "1803": {
      "fn": "VoteLocker.numCheckpoints",
      "jump": "i",
      "offset": [
        4482,
        4529
      ],
      "op": "JUMP",
      "path": "30"
    },
    "1804": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4482,
        4529
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1805": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4475,
        4529
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "1806": {
      "fn": "VoteLocker.numCheckpoints",
      "offset": [
        4351,
        4536
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "1807": {
      "op": "POP"
    },
    "1808": {
      "op": "POP"
    },
    "1809": {
      "fn": "VoteLocker.numCheckpoints",
      "jump": "o",
      "offset": [
        4351,
        4536
      ],
      "op": "JUMP",
      "path": "30"
    },
    "1810": {
      "fn": "VoteLocker.balanceOf",
      "offset": [
        3898,
        4015
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1811": {
      "fn": "VoteLocker.balanceOf",
      "offset": [
        3964,
        3971
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "1813": {
      "fn": "VoteLocker.balanceOf",
      "offset": [
        3990,
        4008
      ],
      "op": "PUSH2",
      "path": "30",
      "statement": 15,
      "value": "0x70C"
    },
    "1816": {
      "fn": "VoteLocker.balanceOf",
      "offset": [
        3999,
        4007
      ],
      "op": "DUP3",
      "path": "30"
    },
    "1817": {
      "fn": "VoteLocker.balanceOf",
      "offset": [
        3990,
        3998
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x788"
    },
    "1820": {
      "fn": "VoteLocker.balanceOf",
      "jump": "i",
      "offset": [
        3990,
        4008
      ],
      "op": "JUMP",
      "path": "30"
    },
    "1821": {
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        5662,
        5929
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1822": {
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        5756,
        5763
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "1824": {
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        5801,
        5813
      ],
      "op": "NUMBER",
      "path": "30",
      "statement": 16
    },
    "1825": {
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        5787,
        5798
      ],
      "op": "DUP3",
      "path": "30"
    },
    "1826": {
      "branch": 49,
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        5787,
        5813
      ],
      "op": "LT",
      "path": "30"
    },
    "1827": {
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        5779,
        5849
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x76E"
    },
    "1830": {
      "branch": 49,
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        5779,
        5849
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "1831": {
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        5779,
        5849
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "1833": {
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        5779,
        5849
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "1834": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1838": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1840": {
      "op": "SHL"
    },
    "1841": {
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        5779,
        5849
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1842": {
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        5779,
        5849
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1845": {
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        5779,
        5849
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "1847": {
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        5779,
        5849
      ],
      "op": "DUP3",
      "path": "30"
    },
    "1848": {
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        5779,
        5849
      ],
      "op": "ADD",
      "path": "30"
    },
    "1849": {
      "op": "MSTORE"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1854": {
      "op": "DUP3"
    },
    "1855": {
      "op": "ADD"
    },
    "1856": {
      "op": "MSTORE"
    },
    "1857": {
      "op": "PUSH32",
      "value": "0x566F74654C6F636B65723A20626C6F636B206E6F7420796574206D696E656400"
    },
    "1890": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1892": {
      "op": "DUP3"
    },
    "1893": {
      "op": "ADD"
    },
    "1894": {
      "op": "MSTORE"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1897": {
      "op": "ADD"
    },
    "1898": {
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        5779,
        5849
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x402"
    },
    "1901": {
      "op": "JUMP"
    },
    "1902": {
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        5779,
        5849
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1903": {
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        5866,
        5922
      ],
      "op": "PUSH2",
      "path": "30",
      "statement": 17,
      "value": "0x70C"
    },
    "1906": {
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        5885,
        5908
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x5"
    },
    "1908": {
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        5910,
        5921
      ],
      "op": "DUP4",
      "path": "30"
    },
    "1909": {
      "fn": "VoteLocker.getPastTotalSupply",
      "offset": [
        5866,
        5884
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xE34"
    },
    "1912": {
      "fn": "VoteLocker.getPastTotalSupply",
      "jump": "i",
      "offset": [
        5866,
        5922
      ],
      "op": "JUMP",
      "path": "30"
    },
    "1913": {
      "fn": "VoteLocker.symbol",
      "offset": [
        2931,
        3024
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1914": {
      "fn": "VoteLocker.symbol",
      "offset": [
        2978,
        2991
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x60"
    },
    "1916": {
      "fn": "VoteLocker.symbol",
      "offset": [
        3010,
        3017
      ],
      "op": "PUSH1",
      "path": "30",
      "statement": 18,
      "value": "0x1"
    },
    "1918": {
      "fn": "VoteLocker.symbol",
      "offset": [
        3003,
        3017
      ],
      "op": "DUP1",
      "path": "30"
    },
    "1919": {
      "fn": "VoteLocker.symbol",
      "offset": [
        3003,
        3017
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "1920": {
      "fn": "VoteLocker.symbol",
      "offset": [
        3003,
        3017
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x2E1"
    },
    "1923": {
      "fn": "VoteLocker.symbol",
      "offset": [
        3003,
        3017
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1924": {
      "fn": "VoteLocker.symbol",
      "offset": [
        3003,
        3017
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1193"
    },
    "1927": {
      "fn": "VoteLocker.symbol",
      "jump": "i",
      "offset": [
        3003,
        3017
      ],
      "op": "JUMP",
      "path": "30"
    },
    "1928": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4779,
        4971
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1935": {
      "op": "SHL"
    },
    "1936": {
      "op": "SUB"
    },
    "1937": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4868,
        4889
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1938": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4868,
        4889
      ],
      "op": "AND",
      "path": "30"
    },
    "1939": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4835,
        4842
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "1941": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4868,
        4889
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1942": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4868,
        4889
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1943": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4868,
        4889
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1944": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4868,
        4880
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x3"
    },
    "1946": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4868,
        4889
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "1948": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4868,
        4889
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1949": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4868,
        4889
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "1951": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4868,
        4889
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1952": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4868,
        4889
      ],
      "op": "KECCAK256",
      "path": "30"
    },
    "1953": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4868,
        4896
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "1954": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4913,
        4921
      ],
      "op": "DUP1",
      "path": "30",
      "statement": 19
    },
    "1955": {
      "branch": 50,
      "fn": "VoteLocker.getVotes",
      "offset": [
        4913,
        4921
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "1956": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4913,
        4964
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x7FC"
    },
    "1959": {
      "branch": 50,
      "fn": "VoteLocker.getVotes",
      "offset": [
        4913,
        4964
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1966": {
      "op": "SHL"
    },
    "1967": {
      "op": "SUB"
    },
    "1968": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4949
      ],
      "op": "DUP4",
      "path": "30"
    },
    "1969": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4949
      ],
      "op": "AND",
      "path": "30"
    },
    "1970": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4949
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "1972": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4949
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1973": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4949
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1974": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4949
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1975": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4940
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x3"
    },
    "1977": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4949
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "1979": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4949
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1980": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4949
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "1982": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4949
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1983": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4949
      ],
      "op": "KECCAK256",
      "path": "30"
    },
    "1984": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4950,
        4957
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x7CA"
    },
    "1987": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4956,
        4957
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x1"
    },
    "1989": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4950,
        4953
      ],
      "op": "DUP4",
      "path": "30"
    },
    "1990": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4950,
        4957
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x11E4"
    },
    "1993": {
      "fn": "VoteLocker.getVotes",
      "jump": "i",
      "offset": [
        4950,
        4957
      ],
      "op": "JUMP",
      "path": "30"
    },
    "1994": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4950,
        4957
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1995": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4958
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1996": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4958
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "1997": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4958
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1998": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4958
      ],
      "op": "LT",
      "path": "30"
    },
    "1999": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4958
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x7DA"
    },
    "2002": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4958
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "2003": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4958
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x7DA"
    },
    "2006": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4958
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x11FB"
    },
    "2009": {
      "fn": "VoteLocker.getVotes",
      "jump": "i",
      "offset": [
        4928,
        4958
      ],
      "op": "JUMP",
      "path": "30"
    },
    "2010": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4958
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "2011": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4958
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "2013": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4958
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "2014": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4958
      ],
      "op": "DUP3",
      "path": "30"
    },
    "2015": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4958
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "2016": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4958
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "2018": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4958
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2019": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4958
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "2020": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4958
      ],
      "op": "KECCAK256",
      "path": "30"
    },
    "2021": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4958
      ],
      "op": "ADD",
      "path": "30"
    },
    "2022": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4964
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "2023": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4964
      ],
      "op": "PUSH5",
      "path": "30",
      "value": "0x100000000"
    },
    "2029": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4964
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2030": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4964
      ],
      "op": "DIV",
      "path": "30"
    },
    "2031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2037": {
      "op": "SHL"
    },
    "2038": {
      "op": "SUB"
    },
    "2039": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4928,
        4964
      ],
      "op": "AND",
      "path": "30"
    },
    "2040": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4913,
        4964
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x7FF"
    },
    "2043": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4913,
        4964
      ],
      "op": "JUMP",
      "path": "30"
    },
    "2044": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4913,
        4964
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "2045": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4924,
        4925
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "2047": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4913,
        4964
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2052": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2054": {
      "op": "SHL"
    },
    "2055": {
      "op": "SUB"
    },
    "2056": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4906,
        4964
      ],
      "op": "AND",
      "path": "30"
    },
    "2057": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4906,
        4964
      ],
      "op": "SWAP4",
      "path": "30"
    },
    "2058": {
      "fn": "VoteLocker.getVotes",
      "offset": [
        4779,
        4971
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "2059": {
      "op": "POP"
    },
    "2060": {
      "op": "POP"
    },
    "2061": {
      "op": "POP"
    },
    "2062": {
      "fn": "VoteLocker.getVotes",
      "jump": "o",
      "offset": [
        4779,
        4971
      ],
      "op": "JUMP",
      "path": "30"
    },
    "2063": {
      "fn": "VoteLocker.delegateBySig",
      "offset": [
        8172,
        8412
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "2064": {
      "fn": "VoteLocker.delegateBySig",
      "offset": [
        8355,
        8405
      ],
      "op": "PUSH1",
      "path": "30",
      "statement": 20,
      "value": "0x40"
    },
    "2066": {
      "fn": "VoteLocker.delegateBySig",
      "offset": [
        8355,
        8405
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "2067": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2073": {
      "op": "SHL"
    },
    "2074": {
      "fn": "VoteLocker.delegateBySig",
      "offset": [
        8355,
        8405
      ],
      "op": "DUP2",
      "path": "30"
    },
    "2075": {
      "fn": "VoteLocker.delegateBySig",
      "offset": [
        8355,
        8405
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "2076": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2078": {
      "fn": "VoteLocker.delegateBySig",
      "offset": [
        8355,
        8405
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "2080": {
      "fn": "VoteLocker.delegateBySig",
      "offset": [
        8355,
        8405
      ],
      "op": "DUP3",
      "path": "30"
    },
    "2081": {
      "fn": "VoteLocker.delegateBySig",
      "offset": [
        8355,
        8405
      ],
      "op": "ADD",
      "path": "30"
    },
    "2082": {
      "op": "MSTORE"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2087": {
      "op": "DUP3"
    },
    "2088": {
      "op": "ADD"
    },
    "2089": {
      "op": "MSTORE"
    },
    "2090": {
      "op": "PUSH32",
      "value": "0x44656C65676174696F6E206279207369676E6174757265206973206E6F742073"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2125": {
      "op": "DUP3"
    },
    "2126": {
      "op": "ADD"
    },
    "2127": {
      "op": "MSTORE"
    },
    "2128": {
      "op": "PUSH8",
      "value": "0x1D5C1C1BDC9D1959"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0xC2"
    },
    "2139": {
      "op": "SHL"
    },
    "2140": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2142": {
      "op": "DUP3"
    },
    "2143": {
      "op": "ADD"
    },
    "2144": {
      "op": "MSTORE"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2147": {
      "op": "ADD"
    },
    "2148": {
      "fn": "VoteLocker.delegateBySig",
      "offset": [
        8355,
        8405
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x402"
    },
    "2151": {
      "op": "JUMP"
    },
    "2152": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8754,
        10336
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "2153": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8845,
        8860
      ],
      "op": "TIMESTAMP",
      "path": "30",
      "statement": 21
    },
    "2154": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8836,
        8842
      ],
      "op": "DUP2",
      "path": "30"
    },
    "2155": {
      "branch": 51,
      "fn": "VoteLocker.deposit",
      "offset": [
        8836,
        8860
      ],
      "op": "GT",
      "path": "30"
    },
    "2156": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8828,
        8893
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x8B7"
    },
    "2159": {
      "branch": 51,
      "fn": "VoteLocker.deposit",
      "offset": [
        8828,
        8893
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "2160": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8828,
        8893
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "2162": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8828,
        8893
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "2163": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2169": {
      "op": "SHL"
    },
    "2170": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8828,
        8893
      ],
      "op": "DUP2",
      "path": "30"
    },
    "2171": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8828,
        8893
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2174": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8828,
        8893
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "2176": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8828,
        8893
      ],
      "op": "DUP3",
      "path": "30"
    },
    "2177": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8828,
        8893
      ],
      "op": "ADD",
      "path": "30"
    },
    "2178": {
      "op": "MSTORE"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "2181": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2183": {
      "op": "DUP3"
    },
    "2184": {
      "op": "ADD"
    },
    "2185": {
      "op": "MSTORE"
    },
    "2186": {
      "op": "PUSH32",
      "value": "0x457870697279206D75737420626520696E207468652066757475726500000000"
    },
    "2219": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2221": {
      "op": "DUP3"
    },
    "2222": {
      "op": "ADD"
    },
    "2223": {
      "op": "MSTORE"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2226": {
      "op": "ADD"
    },
    "2227": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8828,
        8893
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x402"
    },
    "2230": {
      "op": "JUMP"
    },
    "2231": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8828,
        8893
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "2232": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8934,
        8965
      ],
      "op": "PUSH2",
      "path": "30",
      "statement": 22,
      "value": "0x8C5"
    },
    "2235": {
      "offset": [
        1723,
        1738
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0x784CE00"
    },
    "2240": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8934,
        8949
      ],
      "op": "TIMESTAMP",
      "path": "30"
    },
    "2241": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8934,
        8965
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x125B"
    },
    "2244": {
      "fn": "VoteLocker.deposit",
      "jump": "i",
      "offset": [
        8934,
        8965
      ],
      "op": "JUMP",
      "path": "30"
    },
    "2245": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8934,
        8965
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "2246": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8924,
        8930
      ],
      "op": "DUP2",
      "path": "30"
    },
    "2247": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8924,
        8965
      ],
      "op": "GT",
      "path": "30"
    },
    "2248": {
      "branch": 52,
      "fn": "VoteLocker.deposit",
      "offset": [
        8924,
        8965
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "2249": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8903,
        9032
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x926"
    },
    "2252": {
      "branch": 52,
      "fn": "VoteLocker.deposit",
      "offset": [
        8903,
        9032
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "2253": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8903,
        9032
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "2255": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8903,
        9032
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "2256": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2262": {
      "op": "SHL"
    },
    "2263": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8903,
        9032
      ],
      "op": "DUP2",
      "path": "30"
    },
    "2264": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8903,
        9032
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2267": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8903,
        9032
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "2269": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8903,
        9032
      ],
      "op": "DUP3",
      "path": "30"
    },
    "2270": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8903,
        9032
      ],
      "op": "ADD",
      "path": "30"
    },
    "2271": {
      "op": "MSTORE"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2274": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2276": {
      "op": "DUP3"
    },
    "2277": {
      "op": "ADD"
    },
    "2278": {
      "op": "MSTORE"
    },
    "2279": {
      "op": "PUSH32",
      "value": "0x457870697279206D757374206265206265666F7265206D6178696D756D206C6F"
    },
    "2312": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2314": {
      "op": "DUP3"
    },
    "2315": {
      "op": "ADD"
    },
    "2316": {
      "op": "MSTORE"
    },
    "2317": {
      "op": "PUSH9",
      "value": "0x636B75702074696D65"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "2329": {
      "op": "SHL"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2332": {
      "op": "DUP3"
    },
    "2333": {
      "op": "ADD"
    },
    "2334": {
      "op": "MSTORE"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2337": {
      "op": "ADD"
    },
    "2338": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8903,
        9032
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x402"
    },
    "2341": {
      "op": "JUMP"
    },
    "2342": {
      "fn": "VoteLocker.deposit",
      "offset": [
        8903,
        9032
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "2343": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9073,
        9104
      ],
      "op": "PUSH2",
      "path": "30",
      "statement": 23,
      "value": "0x933"
    },
    "2346": {
      "offset": [
        1829,
        1838
      ],
      "op": "PUSH3",
      "path": "30",
      "value": "0x93A80"
    },
    "2350": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9073,
        9088
      ],
      "op": "TIMESTAMP",
      "path": "30"
    },
    "2351": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9073,
        9104
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x125B"
    },
    "2354": {
      "fn": "VoteLocker.deposit",
      "jump": "i",
      "offset": [
        9073,
        9104
      ],
      "op": "JUMP",
      "path": "30"
    },
    "2355": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9073,
        9104
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "2356": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9063,
        9069
      ],
      "op": "DUP2",
      "path": "30"
    },
    "2357": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9063,
        9104
      ],
      "op": "LT",
      "path": "30"
    },
    "2358": {
      "branch": 53,
      "fn": "VoteLocker.deposit",
      "offset": [
        9063,
        9104
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "2359": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9042,
        9170
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x993"
    },
    "2362": {
      "branch": 53,
      "fn": "VoteLocker.deposit",
      "offset": [
        9042,
        9170
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "2363": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9042,
        9170
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "2365": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9042,
        9170
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "2366": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2372": {
      "op": "SHL"
    },
    "2373": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9042,
        9170
      ],
      "op": "DUP2",
      "path": "30"
    },
    "2374": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9042,
        9170
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2377": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9042,
        9170
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "2379": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9042,
        9170
      ],
      "op": "DUP3",
      "path": "30"
    },
    "2380": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9042,
        9170
      ],
      "op": "ADD",
      "path": "30"
    },
    "2381": {
      "op": "MSTORE"
    },
    "2382": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "2384": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2386": {
      "op": "DUP3"
    },
    "2387": {
      "op": "ADD"
    },
    "2388": {
      "op": "MSTORE"
    },
    "2389": {
      "op": "PUSH32",
      "value": "0x457870697279206D757374206265206166746572206D696E696D756D206C6F63"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2424": {
      "op": "DUP3"
    },
    "2425": {
      "op": "ADD"
    },
    "2426": {
      "op": "MSTORE"
    },
    "2427": {
      "op": "PUSH8",
      "value": "0x6B75702074696D65"
    },
    "2436": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2438": {
      "op": "SHL"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2441": {
      "op": "DUP3"
    },
    "2442": {
      "op": "ADD"
    },
    "2443": {
      "op": "MSTORE"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2446": {
      "op": "ADD"
    },
    "2447": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9042,
        9170
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x402"
    },
    "2450": {
      "op": "JUMP"
    },
    "2451": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9042,
        9170
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "2452": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9272,
        9282
      ],
      "op": "CALLER",
      "path": "30"
    },
    "2453": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9245,
        9261
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "2455": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9264,
        9283
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2456": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9264,
        9283
      ],
      "op": "DUP2",
      "path": "30"
    },
    "2457": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9264,
        9283
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "2458": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9264,
        9271
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "2460": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9264,
        9283
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "2462": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9264,
        9283
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "2463": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9264,
        9283
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "2465": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9264,
        9283
      ],
      "op": "DUP2",
      "path": "30"
    },
    "2466": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9264,
        9283
      ],
      "op": "KECCAK256",
      "path": "30"
    },
    "2467": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9264,
        9295
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "2468": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9264,
        9295
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0xFF"
    },
    "2470": {
      "branch": 54,
      "fn": "VoteLocker.deposit",
      "offset": [
        9264,
        9295
      ],
      "op": "AND",
      "path": "30"
    },
    "2471": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9264,
        9463
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x9B1"
    },
    "2474": {
      "branch": 54,
      "fn": "VoteLocker.deposit",
      "offset": [
        9264,
        9463
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "2475": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9462,
        9463
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "2477": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9264,
        9463
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x9E6"
    },
    "2480": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9264,
        9463
      ],
      "op": "JUMP",
      "path": "30"
    },
    "2481": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9264,
        9463
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "2482": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9344,
        9354
      ],
      "op": "CALLER",
      "path": "30"
    },
    "2483": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9336,
        9355
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "2485": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9336,
        9355
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2486": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9336,
        9355
      ],
      "op": "DUP2",
      "path": "30"
    },
    "2487": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9336,
        9355
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "2488": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9336,
        9343
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "2490": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9336,
        9355
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "2492": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9336,
        9355
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "2493": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9336,
        9355
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "2495": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9336,
        9355
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2496": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9336,
        9355
      ],
      "op": "KECCAK256",
      "path": "30"
    },
    "2497": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9336,
        9362
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x3"
    },
    "2499": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9336,
        9362
      ],
      "op": "DUP2",
      "path": "30"
    },
    "2500": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9336,
        9362
      ],
      "op": "ADD",
      "path": "30"
    },
    "2501": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9336,
        9362
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "2502": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9376,
        9402
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x2"
    },
    "2504": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9376,
        9402
      ],
      "op": "DUP3",
      "path": "30"
    },
    "2505": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9376,
        9402
      ],
      "op": "ADD",
      "path": "30"
    },
    "2506": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9376,
        9402
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "2507": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9336,
        9362
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x1"
    },
    "2509": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9416,
        9449
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2510": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9416,
        9449
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "2511": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9416,
        9449
      ],
      "op": "ADD",
      "path": "30"
    },
    "2512": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9416,
        9449
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "2513": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9298,
        9459
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x9E6"
    },
    "2516": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9298,
        9459
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "2517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2521": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2523": {
      "op": "SHL"
    },
    "2524": {
      "op": "SUB"
    },
    "2525": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9336,
        9362
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2526": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9336,
        9362
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "2527": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9336,
        9362
      ],
      "op": "AND",
      "path": "30"
    },
    "2528": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9336,
        9362
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "2529": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9376,
        9402
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2530": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9298,
        9322
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xBE4"
    },
    "2533": {
      "fn": "VoteLocker.deposit",
      "jump": "i",
      "offset": [
        9298,
        9459
      ],
      "op": "JUMP",
      "path": "30"
    },
    "2534": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9298,
        9459
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "2535": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9245,
        9463
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2536": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9245,
        9463
      ],
      "op": "POP",
      "path": "30"
    },
    "2537": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9572,
        9769
      ],
      "op": "PUSH1",
      "path": "30",
      "statement": 24,
      "value": "0x40"
    },
    "2539": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9572,
        9769
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "2540": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9572,
        9769
      ],
      "op": "DUP1",
      "path": "30"
    },
    "2541": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9572,
        9769
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x80"
    },
    "2543": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9572,
        9769
      ],
      "op": "ADD",
      "path": "30"
    },
    "2544": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9572,
        9769
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "2546": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9572,
        9769
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "2547": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9572,
        9769
      ],
      "op": "DUP1",
      "path": "30"
    },
    "2548": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9605,
        9609
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x1"
    },
    "2550": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9572,
        9769
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "2551": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9572,
        9769
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "2552": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9572,
        9769
      ],
      "op": "DUP2",
      "path": "30"
    },
    "2553": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9572,
        9769
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "2554": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9572,
        9769
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "2556": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9572,
        9769
      ],
      "op": "ADD",
      "path": "30"
    },
    "2557": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9638,
        9653
      ],
      "op": "TIMESTAMP",
      "path": "30"
    },
    "2558": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9572,
        9769
      ],
      "op": "DUP2",
      "path": "30"
    },
    "2559": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9572,
        9769
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "2560": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9572,
        9769
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "2562": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9572,
        9769
      ],
      "op": "ADD",
      "path": "30"
    },
    "2563": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9752,
        9758
      ],
      "op": "DUP4",
      "path": "30"
    },
    "2564": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9572,
        9769
      ],
      "op": "DUP2",
      "path": "30"
    },
    "2565": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9572,
        9769
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "2566": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9572,
        9769
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "2568": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9572,
        9769
      ],
      "op": "ADD",
      "path": "30"
    },
    "2569": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9704,
        9730
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xA11"
    },
    "2572": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9723,
        9729
      ],
      "op": "DUP6",
      "path": "30"
    },
    "2573": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9704,
        9722
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xC34"
    },
    "2576": {
      "fn": "VoteLocker.deposit",
      "jump": "i",
      "offset": [
        9704,
        9730
      ],
      "op": "JUMP",
      "path": "30"
    },
    "2577": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9704,
        9730
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "2578": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9683,
        9693
      ],
      "op": "CALLER",
      "path": "30"
    },
    "2579": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9675,
        9694
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "2581": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9675,
        9694
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2582": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9675,
        9694
      ],
      "op": "DUP2",
      "path": "30"
    },
    "2583": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9675,
        9694
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "2584": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9675,
        9682
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "2586": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9675,
        9694
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "2588": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9675,
        9694
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "2589": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9675,
        9694
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "2591": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9675,
        9694
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2592": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9675,
        9694
      ],
      "op": "KECCAK256",
      "path": "30"
    },
    "2593": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9675,
        9701
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x3"
    },
    "2595": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9675,
        9701
      ],
      "op": "ADD",
      "path": "30"
    },
    "2596": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9675,
        9701
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "2597": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9675,
        9730
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xA37"
    },
    "2600": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9675,
        9730
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "2601": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9675,
        9730
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2606": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2608": {
      "op": "SHL"
    },
    "2609": {
      "op": "SUB"
    },
    "2610": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9675,
        9701
      ],
      "op": "AND",
      "path": "30"
    },
    "2611": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9675,
        9730
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1273"
    },
    "2614": {
      "fn": "VoteLocker.deposit",
      "jump": "i",
      "offset": [
        9675,
        9730
      ],
      "op": "JUMP",
      "path": "30"
    },
    "2615": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9675,
        9730
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "2616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2620": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2622": {
      "op": "SHL"
    },
    "2623": {
      "op": "SUB"
    },
    "2624": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9572,
        9769
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2625": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9572,
        9769
      ],
      "op": "DUP2",
      "path": "30"
    },
    "2626": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9572,
        9769
      ],
      "op": "AND",
      "path": "30"
    },
    "2627": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9572,
        9769
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2628": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9572,
        9769
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "2629": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9572,
        9769
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "2630": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9558,
        9568
      ],
      "op": "CALLER",
      "path": "30"
    },
    "2631": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9569
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "2633": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9569
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2634": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9569
      ],
      "op": "DUP2",
      "path": "30"
    },
    "2635": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9569
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "2636": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9557
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "2638": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9569
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "2640": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9569
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2641": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9569
      ],
      "op": "DUP2",
      "path": "30"
    },
    "2642": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9569
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "2643": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9569
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "2645": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9569
      ],
      "op": "DUP1",
      "path": "30"
    },
    "2646": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9569
      ],
      "op": "DUP4",
      "path": "30"
    },
    "2647": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9569
      ],
      "op": "KECCAK256",
      "path": "30"
    },
    "2648": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "DUP6",
      "path": "30"
    },
    "2649": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "2650": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "DUP2",
      "path": "30"
    },
    "2651": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "2652": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2654": {
      "op": "NOT"
    },
    "2655": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "AND",
      "path": "30"
    },
    "2656": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2657": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "2658": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "2659": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "OR",
      "path": "30"
    },
    "2660": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "DUP2",
      "path": "30"
    },
    "2661": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "SSTORE",
      "path": "30"
    },
    "2662": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "2663": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "DUP6",
      "path": "30"
    },
    "2664": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "ADD",
      "path": "30"
    },
    "2665": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "2666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2668": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "DUP4",
      "path": "30"
    },
    "2669": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "ADD",
      "path": "30"
    },
    "2670": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "SSTORE",
      "path": "30"
    },
    "2671": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "DUP5",
      "path": "30"
    },
    "2672": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "ADD",
      "path": "30"
    },
    "2673": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "2674": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x2"
    },
    "2676": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "DUP3",
      "path": "30"
    },
    "2677": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "ADD",
      "path": "30"
    },
    "2678": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "DUP2",
      "path": "30"
    },
    "2679": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2680": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "SSTORE",
      "path": "30"
    },
    "2681": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x60"
    },
    "2683": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2684": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "SWAP5",
      "path": "30"
    },
    "2685": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "ADD",
      "path": "30"
    },
    "2686": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "2687": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x3"
    },
    "2689": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2690": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "2691": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "ADD",
      "path": "30"
    },
    "2692": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "DUP1",
      "path": "30"
    },
    "2693": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "2694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2698": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2700": {
      "op": "SHL"
    },
    "2701": {
      "op": "SUB"
    },
    "2702": {
      "op": "NOT"
    },
    "2703": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "AND",
      "path": "30"
    },
    "2704": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "2705": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2706": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "SWAP4",
      "path": "30"
    },
    "2707": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "AND",
      "path": "30"
    },
    "2708": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2709": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "DUP2",
      "path": "30"
    },
    "2710": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "OR",
      "path": "30"
    },
    "2711": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2712": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "2713": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "SSTORE",
      "path": "30"
    },
    "2714": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9569
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "2715": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9848,
        9991
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xAA5"
    },
    "2718": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9848,
        9991
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "2719": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9550,
        9769
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2720": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9966,
        9981
      ],
      "op": "TIMESTAMP",
      "path": "30"
    },
    "2721": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9848,
        9872
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xBE4"
    },
    "2724": {
      "fn": "VoteLocker.deposit",
      "jump": "i",
      "offset": [
        9848,
        9991
      ],
      "op": "JUMP",
      "path": "30"
    },
    "2725": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9848,
        9991
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "2726": {
      "fn": "VoteLocker.deposit",
      "offset": [
        9829,
        9991
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2727": {
      "op": "POP"
    },
    "2728": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10006,
        10016
      ],
      "op": "DUP4",
      "path": "30"
    },
    "2729": {
      "branch": 55,
      "fn": "VoteLocker.deposit",
      "offset": [
        10006,
        10016
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "2730": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10002,
        10170
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xB2A"
    },
    "2733": {
      "branch": 55,
      "fn": "VoteLocker.deposit",
      "offset": [
        10002,
        10170
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "2734": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10111
      ],
      "op": "PUSH1",
      "path": "30",
      "statement": 25,
      "value": "0x6"
    },
    "2736": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10111
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "2737": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "2739": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "2740": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2745": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2747": {
      "op": "SHL"
    },
    "2748": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "DUP2",
      "path": "30"
    },
    "2749": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "2750": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10125,
        10135
      ],
      "op": "CALLER",
      "path": "30"
    },
    "2751": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "2753": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "DUP3",
      "path": "30"
    },
    "2754": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "ADD",
      "path": "30"
    },
    "2755": {
      "op": "MSTORE"
    },
    "2756": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10145,
        10149
      ],
      "op": "ADDRESS",
      "path": "30"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2759": {
      "op": "DUP3"
    },
    "2760": {
      "op": "ADD"
    },
    "2761": {
      "op": "MSTORE"
    },
    "2762": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2764": {
      "op": "DUP2"
    },
    "2765": {
      "op": "ADD"
    },
    "2766": {
      "op": "DUP7"
    },
    "2767": {
      "op": "SWAP1"
    },
    "2768": {
      "op": "MSTORE"
    },
    "2769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2773": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2775": {
      "op": "SHL"
    },
    "2776": {
      "op": "SUB"
    },
    "2777": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10111
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2778": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10111
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "2779": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10111
      ],
      "op": "AND",
      "path": "30"
    },
    "2780": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10111
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2781": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10124
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0x23B872DD"
    },
    "2786": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10124
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2787": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2789": {
      "op": "ADD"
    },
    "2790": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "2792": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "2794": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "2795": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "DUP1",
      "path": "30"
    },
    "2796": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "DUP4",
      "path": "30"
    },
    "2797": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "SUB",
      "path": "30"
    },
    "2798": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "DUP2",
      "path": "30"
    },
    "2799": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "2801": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "DUP8",
      "path": "30"
    },
    "2802": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "GAS",
      "path": "30"
    },
    "2803": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "CALL",
      "path": "30"
    },
    "2804": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "2805": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "DUP1",
      "path": "30"
    },
    "2806": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "2807": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xB04"
    },
    "2810": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "2811": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "RETURNDATASIZE",
      "path": "30"
    },
    "2812": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "2814": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "DUP1",
      "path": "30"
    },
    "2815": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "RETURNDATACOPY",
      "path": "30"
    },
    "2816": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "RETURNDATASIZE",
      "path": "30"
    },
    "2817": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "2819": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "REVERT",
      "path": "30"
    },
    "2820": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "2821": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "POP",
      "path": "30"
    },
    "2822": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "POP",
      "path": "30"
    },
    "2823": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "POP",
      "path": "30"
    },
    "2824": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "POP",
      "path": "30"
    },
    "2825": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "2827": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "2828": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "RETURNDATASIZE",
      "path": "30"
    },
    "2829": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x1F"
    },
    "2831": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "NOT",
      "path": "30"
    },
    "2832": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x1F"
    },
    "2834": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "DUP3",
      "path": "30"
    },
    "2835": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "ADD",
      "path": "30"
    },
    "2836": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "AND",
      "path": "30"
    },
    "2837": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "DUP3",
      "path": "30"
    },
    "2838": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "ADD",
      "path": "30"
    },
    "2839": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "DUP1",
      "path": "30"
    },
    "2840": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "2842": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "2843": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "POP",
      "path": "30"
    },
    "2844": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "DUP2",
      "path": "30"
    },
    "2845": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "ADD",
      "path": "30"
    },
    "2846": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2847": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xB28"
    },
    "2850": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "2851": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2852": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1239"
    },
    "2855": {
      "fn": "VoteLocker.deposit",
      "jump": "i",
      "offset": [
        10099,
        10159
      ],
      "op": "JUMP",
      "path": "30"
    },
    "2856": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "2857": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10099,
        10159
      ],
      "op": "POP",
      "path": "30"
    },
    "2858": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10002,
        10170
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "2859": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10210,
        10220
      ],
      "op": "CALLER",
      "path": "30",
      "statement": 26
    },
    "2860": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10197,
        10221
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "2862": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10197,
        10221
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2863": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10197,
        10221
      ],
      "op": "DUP2",
      "path": "30"
    },
    "2864": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10197,
        10221
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "2865": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10197,
        10209
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x3"
    },
    "2867": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10197,
        10221
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "2869": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10197,
        10221
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "2870": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10197,
        10221
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "2872": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10197,
        10221
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2873": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10197,
        10221
      ],
      "op": "KECCAK256",
      "path": "30"
    },
    "2874": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10180,
        10249
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xB4A"
    },
    "2877": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10180,
        10249
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2878": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10223,
        10227
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xCA1"
    },
    "2881": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10229,
        10248
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x607"
    },
    "2884": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10240,
        10248
      ],
      "op": "DUP6",
      "path": "30"
    },
    "2885": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10229,
        10237
      ],
      "op": "DUP6",
      "path": "30"
    },
    "2886": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10229,
        10248
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x11E4"
    },
    "2889": {
      "fn": "VoteLocker.deposit",
      "jump": "i",
      "offset": [
        10229,
        10248
      ],
      "op": "JUMP",
      "path": "30"
    },
    "2890": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10180,
        10249
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "2891": {
      "op": "POP"
    },
    "2892": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10291,
        10329
      ],
      "op": "PUSH2",
      "path": "30",
      "statement": 27,
      "value": "0x622"
    },
    "2895": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10291,
        10329
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2896": {
      "op": "POP"
    },
    "2897": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10297,
        10307
      ],
      "op": "CALLER",
      "path": "30"
    },
    "2898": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10309,
        10328
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xB5B"
    },
    "2901": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10320,
        10328
      ],
      "op": "DUP5",
      "path": "30"
    },
    "2902": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10309,
        10317
      ],
      "op": "DUP5",
      "path": "30"
    },
    "2903": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10309,
        10328
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x11E4"
    },
    "2906": {
      "fn": "VoteLocker.deposit",
      "jump": "i",
      "offset": [
        10309,
        10328
      ],
      "op": "JUMP",
      "path": "30"
    },
    "2907": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10309,
        10328
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "2908": {
      "fn": "VoteLocker.deposit",
      "offset": [
        10291,
        10296
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xF56"
    },
    "2911": {
      "fn": "VoteLocker.deposit",
      "jump": "i",
      "offset": [
        10291,
        10329
      ],
      "op": "JUMP",
      "path": "30"
    },
    "2912": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4092,
        4276
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "2913": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2915": {
      "op": "DUP1"
    },
    "2916": {
      "op": "MLOAD"
    },
    "2917": {
      "op": "DUP1"
    },
    "2918": {
      "op": "DUP3"
    },
    "2919": {
      "op": "ADD"
    },
    "2920": {
      "op": "SWAP1"
    },
    "2921": {
      "op": "SWAP2"
    },
    "2922": {
      "op": "MSTORE"
    },
    "2923": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2925": {
      "op": "DUP1"
    },
    "2926": {
      "op": "DUP3"
    },
    "2927": {
      "op": "MSTORE"
    },
    "2928": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2930": {
      "op": "DUP3"
    },
    "2931": {
      "op": "ADD"
    },
    "2932": {
      "op": "MSTORE"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2939": {
      "op": "SHL"
    },
    "2940": {
      "op": "SUB"
    },
    "2941": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4264
      ],
      "op": "DUP4",
      "path": "30",
      "statement": 28
    },
    "2942": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4264
      ],
      "op": "AND",
      "path": "30"
    },
    "2943": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4264
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "2945": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4264
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2946": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4264
      ],
      "op": "DUP2",
      "path": "30"
    },
    "2947": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4264
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "2948": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4255
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x3"
    },
    "2950": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4264
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "2952": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4264
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "2953": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4264
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "2955": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4264
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2956": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4264
      ],
      "op": "KECCAK256",
      "path": "30"
    },
    "2957": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4269
      ],
      "op": "DUP1",
      "path": "30"
    },
    "2958": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4269
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "2959": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4269
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0xFFFFFFFF"
    },
    "2964": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4269
      ],
      "op": "DUP5",
      "path": "30"
    },
    "2965": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4269
      ],
      "op": "AND",
      "path": "30"
    },
    "2966": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4269
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2967": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4269
      ],
      "op": "DUP2",
      "path": "30"
    },
    "2968": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4269
      ],
      "op": "LT",
      "path": "30"
    },
    "2969": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4269
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xBA4"
    },
    "2972": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4269
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "2973": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4269
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xBA4"
    },
    "2976": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4269
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x11FB"
    },
    "2979": {
      "fn": "VoteLocker.checkpoints",
      "jump": "i",
      "offset": [
        4243,
        4269
      ],
      "op": "JUMP",
      "path": "30"
    },
    "2980": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4269
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "2981": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4269
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "2983": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4269
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "2984": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4269
      ],
      "op": "DUP3",
      "path": "30"
    },
    "2985": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4269
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "2986": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4269
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "2988": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4269
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "2989": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4269
      ],
      "op": "DUP3",
      "path": "30"
    },
    "2990": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4269
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2991": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4269
      ],
      "op": "KECCAK256",
      "path": "30"
    },
    "2992": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4236,
        4269
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "2994": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4236,
        4269
      ],
      "op": "DUP1",
      "path": "30"
    },
    "2995": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4236,
        4269
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "2996": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4236,
        4269
      ],
      "op": "DUP1",
      "path": "30"
    },
    "2997": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4236,
        4269
      ],
      "op": "DUP3",
      "path": "30"
    },
    "2998": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4236,
        4269
      ],
      "op": "ADD",
      "path": "30"
    },
    "2999": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4236,
        4269
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "3000": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4236,
        4269
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "3001": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4236,
        4269
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "3002": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4269
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "3003": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4243,
        4269
      ],
      "op": "ADD",
      "path": "30"
    },
    "3004": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4236,
        4269
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "3005": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4236,
        4269
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0xFFFFFFFF"
    },
    "3010": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4236,
        4269
      ],
      "op": "DUP2",
      "path": "30"
    },
    "3011": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4236,
        4269
      ],
      "op": "AND",
      "path": "30"
    },
    "3012": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4236,
        4269
      ],
      "op": "DUP3",
      "path": "30"
    },
    "3013": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4236,
        4269
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "3014": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4236,
        4269
      ],
      "op": "PUSH5",
      "path": "30",
      "value": "0x100000000"
    },
    "3020": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4236,
        4269
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "3021": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4236,
        4269
      ],
      "op": "DIV",
      "path": "30"
    },
    "3022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3026": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3028": {
      "op": "SHL"
    },
    "3029": {
      "op": "SUB"
    },
    "3030": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4236,
        4269
      ],
      "op": "AND",
      "path": "30"
    },
    "3031": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4236,
        4269
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "3032": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4236,
        4269
      ],
      "op": "DUP2",
      "path": "30"
    },
    "3033": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4236,
        4269
      ],
      "op": "ADD",
      "path": "30"
    },
    "3034": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4236,
        4269
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "3035": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4236,
        4269
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "3036": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4236,
        4269
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "3037": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4236,
        4269
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "3038": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4236,
        4269
      ],
      "op": "SWAP4",
      "path": "30"
    },
    "3039": {
      "fn": "VoteLocker.checkpoints",
      "offset": [
        4092,
        4276
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "3040": {
      "op": "POP"
    },
    "3041": {
      "op": "POP"
    },
    "3042": {
      "op": "POP"
    },
    "3043": {
      "fn": "VoteLocker.checkpoints",
      "jump": "o",
      "offset": [
        4092,
        4276
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3044": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7593,
        7908
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3045": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7734,
        7741
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "3047": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7734,
        7741
      ],
      "op": "DUP1",
      "path": "30"
    },
    "3048": {
      "offset": [
        1723,
        1738
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0x784CE00"
    },
    "3053": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7844,
        7850
      ],
      "op": "DUP6",
      "path": "30"
    },
    "3054": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7819,
        7840
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xBF9"
    },
    "3057": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7839,
        7840
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x1"
    },
    "3059": {
      "offset": [
        1956,
        1957
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "3061": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7819,
        7840
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x11E4"
    },
    "3064": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "jump": "i",
      "offset": [
        7819,
        7840
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3065": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7819,
        7840
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3066": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7792,
        7814
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xC03"
    },
    "3069": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7801,
        7814
      ],
      "op": "DUP7",
      "path": "30"
    },
    "3070": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7792,
        7798
      ],
      "op": "DUP9",
      "path": "30"
    },
    "3071": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7792,
        7814
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x11E4"
    },
    "3074": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "jump": "i",
      "offset": [
        7792,
        7814
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3075": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7792,
        7814
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3076": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7791,
        7841
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xC0D"
    },
    "3079": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7791,
        7841
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "3080": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7791,
        7841
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "3081": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7791,
        7841
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x129E"
    },
    "3084": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "jump": "i",
      "offset": [
        7791,
        7841
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3085": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7791,
        7841
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3086": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7791,
        7850
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xC17"
    },
    "3089": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7791,
        7850
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "3090": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7791,
        7850
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "3091": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7791,
        7850
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x129E"
    },
    "3094": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "jump": "i",
      "offset": [
        7791,
        7850
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3095": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7791,
        7850
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3096": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7790,
        7879
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xC21"
    },
    "3099": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7790,
        7879
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "3100": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7790,
        7879
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "3101": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7790,
        7879
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x12BD"
    },
    "3104": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "jump": "i",
      "offset": [
        7790,
        7879
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3105": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7790,
        7879
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3106": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7781,
        7879
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xC2B"
    },
    "3109": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7781,
        7879
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "3110": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7781,
        7787
      ],
      "op": "DUP7",
      "path": "30"
    },
    "3111": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7781,
        7879
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x125B"
    },
    "3114": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "jump": "i",
      "offset": [
        7781,
        7879
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3115": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7781,
        7879
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3116": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7753,
        7879
      ],
      "op": "SWAP6",
      "path": "30"
    },
    "3117": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "offset": [
        7593,
        7908
      ],
      "op": "SWAP5",
      "path": "30"
    },
    "3118": {
      "op": "POP"
    },
    "3119": {
      "op": "POP"
    },
    "3120": {
      "op": "POP"
    },
    "3121": {
      "op": "POP"
    },
    "3122": {
      "op": "POP"
    },
    "3123": {
      "fn": "VoteLocker._calculateVotesFromStake",
      "jump": "o",
      "offset": [
        7593,
        7908
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3124": {
      "fn": "SafeCast.toUint224",
      "offset": [
        1135,
        1327
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3125": {
      "fn": "SafeCast.toUint224",
      "offset": [
        1192,
        1199
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3131": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3133": {
      "op": "SHL"
    },
    "3134": {
      "op": "SUB"
    },
    "3135": {
      "fn": "SafeCast.toUint224",
      "offset": [
        1219,
        1245
      ],
      "op": "DUP3",
      "path": "27",
      "statement": 29
    },
    "3136": {
      "fn": "SafeCast.toUint224",
      "offset": [
        1219,
        1245
      ],
      "op": "GT",
      "path": "27"
    },
    "3137": {
      "branch": 62,
      "fn": "SafeCast.toUint224",
      "offset": [
        1219,
        1245
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "3138": {
      "fn": "SafeCast.toUint224",
      "offset": [
        1211,
        1289
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xC9D"
    },
    "3141": {
      "branch": 62,
      "fn": "SafeCast.toUint224",
      "offset": [
        1211,
        1289
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3142": {
      "fn": "SafeCast.toUint224",
      "offset": [
        1211,
        1289
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3144": {
      "fn": "SafeCast.toUint224",
      "offset": [
        1211,
        1289
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3145": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3149": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3151": {
      "op": "SHL"
    },
    "3152": {
      "fn": "SafeCast.toUint224",
      "offset": [
        1211,
        1289
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3153": {
      "fn": "SafeCast.toUint224",
      "offset": [
        1211,
        1289
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3154": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3156": {
      "fn": "SafeCast.toUint224",
      "offset": [
        1211,
        1289
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "3158": {
      "fn": "SafeCast.toUint224",
      "offset": [
        1211,
        1289
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3159": {
      "fn": "SafeCast.toUint224",
      "offset": [
        1211,
        1289
      ],
      "op": "ADD",
      "path": "27"
    },
    "3160": {
      "op": "MSTORE"
    },
    "3161": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3165": {
      "op": "DUP3"
    },
    "3166": {
      "op": "ADD"
    },
    "3167": {
      "op": "MSTORE"
    },
    "3168": {
      "op": "PUSH32",
      "value": "0x53616665436173743A2076616C756520646F65736E27742066697420696E2032"
    },
    "3201": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3203": {
      "op": "DUP3"
    },
    "3204": {
      "op": "ADD"
    },
    "3205": {
      "op": "MSTORE"
    },
    "3206": {
      "op": "PUSH7",
      "value": "0x32342062697473"
    },
    "3214": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "3216": {
      "op": "SHL"
    },
    "3217": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3219": {
      "op": "DUP3"
    },
    "3220": {
      "op": "ADD"
    },
    "3221": {
      "op": "MSTORE"
    },
    "3222": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3224": {
      "op": "ADD"
    },
    "3225": {
      "fn": "SafeCast.toUint224",
      "offset": [
        1211,
        1289
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x402"
    },
    "3228": {
      "op": "JUMP"
    },
    "3229": {
      "fn": "SafeCast.toUint224",
      "offset": [
        1211,
        1289
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3230": {
      "op": "POP"
    },
    "3231": {
      "fn": "SafeCast.toUint224",
      "offset": [
        1314,
        1319
      ],
      "op": "SWAP1",
      "path": "27",
      "statement": 30
    },
    "3232": {
      "fn": "SafeCast.toUint224",
      "jump": "o",
      "offset": [
        1135,
        1327
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3233": {
      "fn": "VoteLocker._add",
      "offset": [
        12949,
        13045
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3234": {
      "fn": "VoteLocker._add",
      "offset": [
        13007,
        13014
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "3236": {
      "fn": "VoteLocker._add",
      "offset": [
        13033,
        13038
      ],
      "op": "PUSH2",
      "path": "30",
      "statement": 31,
      "value": "0x69B"
    },
    "3239": {
      "fn": "VoteLocker._add",
      "offset": [
        13037,
        13038
      ],
      "op": "DUP3",
      "path": "30"
    },
    "3240": {
      "fn": "VoteLocker._add",
      "offset": [
        13033,
        13034
      ],
      "op": "DUP5",
      "path": "30"
    },
    "3241": {
      "fn": "VoteLocker._add",
      "offset": [
        13033,
        13038
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x125B"
    },
    "3244": {
      "fn": "VoteLocker._add",
      "jump": "i",
      "offset": [
        13033,
        13038
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3245": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12131,
        12850
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3246": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12363,
        12375
      ],
      "op": "DUP3",
      "path": "30"
    },
    "3247": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12363,
        12375
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "3248": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12301,
        12318
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "3250": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12301,
        12318
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "3251": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12301,
        12318
      ],
      "op": "DUP2",
      "path": "30"
    },
    "3252": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12301,
        12318
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "3253": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12397,
        12405
      ],
      "op": "DUP1",
      "path": "30",
      "statement": 32
    },
    "3254": {
      "branch": 56,
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12397,
        12405
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "3255": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12397,
        12432
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xCF8"
    },
    "3258": {
      "branch": 56,
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12397,
        12432
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "3259": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12412,
        12417
      ],
      "op": "DUP6",
      "path": "30"
    },
    "3260": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12418,
        12425
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xCC6"
    },
    "3263": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12424,
        12425
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x1"
    },
    "3265": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12418,
        12421
      ],
      "op": "DUP4",
      "path": "30"
    },
    "3266": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12418,
        12425
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x11E4"
    },
    "3269": {
      "fn": "VoteLocker._writeCheckpoint",
      "jump": "i",
      "offset": [
        12418,
        12425
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3270": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12418,
        12425
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3271": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12412,
        12426
      ],
      "op": "DUP2",
      "path": "30"
    },
    "3272": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12412,
        12426
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "3273": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12412,
        12426
      ],
      "op": "DUP2",
      "path": "30"
    },
    "3274": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12412,
        12426
      ],
      "op": "LT",
      "path": "30"
    },
    "3275": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12412,
        12426
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xCD6"
    },
    "3278": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12412,
        12426
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "3279": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12412,
        12426
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xCD6"
    },
    "3282": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12412,
        12426
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x11FB"
    },
    "3285": {
      "fn": "VoteLocker._writeCheckpoint",
      "jump": "i",
      "offset": [
        12412,
        12426
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3286": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12412,
        12426
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3287": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12412,
        12426
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "3289": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12412,
        12426
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "3290": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12412,
        12426
      ],
      "op": "DUP3",
      "path": "30"
    },
    "3291": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12412,
        12426
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "3292": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12412,
        12426
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "3294": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12412,
        12426
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "3295": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12412,
        12426
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "3296": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12412,
        12426
      ],
      "op": "KECCAK256",
      "path": "30"
    },
    "3297": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12412,
        12426
      ],
      "op": "ADD",
      "path": "30"
    },
    "3298": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12412,
        12432
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "3299": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12412,
        12432
      ],
      "op": "PUSH5",
      "path": "30",
      "value": "0x100000000"
    },
    "3305": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12412,
        12432
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "3306": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12412,
        12432
      ],
      "op": "DIV",
      "path": "30"
    },
    "3307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3311": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3313": {
      "op": "SHL"
    },
    "3314": {
      "op": "SUB"
    },
    "3315": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12412,
        12432
      ],
      "op": "AND",
      "path": "30"
    },
    "3316": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12397,
        12432
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xCFB"
    },
    "3319": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12397,
        12432
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3320": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12397,
        12432
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3321": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12408,
        12409
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "3323": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12397,
        12432
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3328": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3330": {
      "op": "SHL"
    },
    "3331": {
      "op": "SUB"
    },
    "3332": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12385,
        12432
      ],
      "op": "AND",
      "path": "30"
    },
    "3333": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12385,
        12432
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "3334": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12385,
        12432
      ],
      "op": "POP",
      "path": "30"
    },
    "3335": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12454,
        12474
      ],
      "op": "PUSH2",
      "path": "30",
      "statement": 33,
      "value": "0xD14"
    },
    "3338": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12457,
        12466
      ],
      "op": "DUP4",
      "path": "30"
    },
    "3339": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12468,
        12473
      ],
      "op": "DUP6",
      "path": "30"
    },
    "3340": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12454,
        12456
      ],
      "op": "DUP8",
      "path": "30"
    },
    "3341": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12454,
        12474
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0xFFFFFFFF"
    },
    "3346": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12454,
        12474
      ],
      "op": "AND",
      "path": "30"
    },
    "3347": {
      "fn": "VoteLocker._writeCheckpoint",
      "jump": "i",
      "offset": [
        12454,
        12474
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3348": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12454,
        12474
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3349": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12442,
        12474
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "3350": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12442,
        12474
      ],
      "op": "POP",
      "path": "30"
    },
    "3351": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12495,
        12496
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "3353": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12489,
        12492
      ],
      "op": "DUP2",
      "path": "30"
    },
    "3354": {
      "branch": 57,
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12489,
        12496
      ],
      "op": "GT",
      "path": "30"
    },
    "3355": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12489,
        12540
      ],
      "op": "DUP1",
      "path": "30"
    },
    "3356": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12489,
        12540
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "3357": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12489,
        12540
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xD52"
    },
    "3360": {
      "branch": 57,
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12489,
        12540
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "3361": {
      "op": "POP"
    },
    "3362": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12528,
        12540
      ],
      "op": "NUMBER",
      "path": "30"
    },
    "3363": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12500,
        12505
      ],
      "op": "DUP7",
      "path": "30"
    },
    "3364": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12506,
        12513
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xD2E"
    },
    "3367": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12512,
        12513
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x1"
    },
    "3369": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12506,
        12509
      ],
      "op": "DUP5",
      "path": "30"
    },
    "3370": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12506,
        12513
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x11E4"
    },
    "3373": {
      "fn": "VoteLocker._writeCheckpoint",
      "jump": "i",
      "offset": [
        12506,
        12513
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3374": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12506,
        12513
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3375": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12500,
        12514
      ],
      "op": "DUP2",
      "path": "30"
    },
    "3376": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12500,
        12514
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "3377": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12500,
        12514
      ],
      "op": "DUP2",
      "path": "30"
    },
    "3378": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12500,
        12514
      ],
      "op": "LT",
      "path": "30"
    },
    "3379": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12500,
        12514
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xD3E"
    },
    "3382": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12500,
        12514
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "3383": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12500,
        12514
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xD3E"
    },
    "3386": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12500,
        12514
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x11FB"
    },
    "3389": {
      "fn": "VoteLocker._writeCheckpoint",
      "jump": "i",
      "offset": [
        12500,
        12514
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3390": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12500,
        12514
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3391": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12500,
        12514
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "3393": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12500,
        12514
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "3394": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12500,
        12514
      ],
      "op": "DUP3",
      "path": "30"
    },
    "3395": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12500,
        12514
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "3396": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12500,
        12514
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "3398": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12500,
        12514
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "3399": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12500,
        12514
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "3400": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12500,
        12514
      ],
      "op": "KECCAK256",
      "path": "30"
    },
    "3401": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12500,
        12514
      ],
      "op": "ADD",
      "path": "30"
    },
    "3402": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12500,
        12524
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "3403": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12500,
        12524
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0xFFFFFFFF"
    },
    "3408": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12500,
        12524
      ],
      "op": "AND",
      "path": "30"
    },
    "3409": {
      "branch": 58,
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12500,
        12540
      ],
      "op": "EQ",
      "path": "30"
    },
    "3410": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12489,
        12540
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3411": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12485,
        12844
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "3412": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12485,
        12844
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xDB2"
    },
    "3415": {
      "branch": 58,
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12485,
        12844
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "3416": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12579,
        12608
      ],
      "op": "PUSH2",
      "path": "30",
      "statement": 34,
      "value": "0xD60"
    },
    "3419": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12598,
        12607
      ],
      "op": "DUP3",
      "path": "30"
    },
    "3420": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12579,
        12597
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xC34"
    },
    "3423": {
      "fn": "VoteLocker._writeCheckpoint",
      "jump": "i",
      "offset": [
        12579,
        12608
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3424": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12579,
        12608
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3425": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12561
      ],
      "op": "DUP7",
      "path": "30"
    },
    "3426": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12562,
        12569
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xD6C"
    },
    "3429": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12568,
        12569
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x1"
    },
    "3431": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12562,
        12565
      ],
      "op": "DUP5",
      "path": "30"
    },
    "3432": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12562,
        12569
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x11E4"
    },
    "3435": {
      "fn": "VoteLocker._writeCheckpoint",
      "jump": "i",
      "offset": [
        12562,
        12569
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3436": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12562,
        12569
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3437": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12570
      ],
      "op": "DUP2",
      "path": "30"
    },
    "3438": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12570
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "3439": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12570
      ],
      "op": "DUP2",
      "path": "30"
    },
    "3440": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12570
      ],
      "op": "LT",
      "path": "30"
    },
    "3441": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12570
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xD7C"
    },
    "3444": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12570
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "3445": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12570
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xD7C"
    },
    "3448": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12570
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x11FB"
    },
    "3451": {
      "fn": "VoteLocker._writeCheckpoint",
      "jump": "i",
      "offset": [
        12556,
        12570
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3452": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12570
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3453": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12570
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "3454": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12570
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "3456": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12570
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "3457": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12570
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "3459": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12570
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "3461": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12570
      ],
      "op": "KECCAK256",
      "path": "30"
    },
    "3462": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12570
      ],
      "op": "ADD",
      "path": "30"
    },
    "3463": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12576
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "3465": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12576
      ],
      "op": "ADD",
      "path": "30"
    },
    "3466": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12576
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "3468": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12608
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x100"
    },
    "3471": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12608
      ],
      "op": "EXP",
      "path": "30"
    },
    "3472": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12608
      ],
      "op": "DUP2",
      "path": "30"
    },
    "3473": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12608
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "3474": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12608
      ],
      "op": "DUP2",
      "path": "30"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3479": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3481": {
      "op": "SHL"
    },
    "3482": {
      "op": "SUB"
    },
    "3483": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12608
      ],
      "op": "MUL",
      "path": "30"
    },
    "3484": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12608
      ],
      "op": "NOT",
      "path": "30"
    },
    "3485": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12608
      ],
      "op": "AND",
      "path": "30"
    },
    "3486": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12608
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "3487": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12608
      ],
      "op": "DUP4",
      "path": "30"
    },
    "3488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3492": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3494": {
      "op": "SHL"
    },
    "3495": {
      "op": "SUB"
    },
    "3496": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12608
      ],
      "op": "AND",
      "path": "30"
    },
    "3497": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12608
      ],
      "op": "MUL",
      "path": "30"
    },
    "3498": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12608
      ],
      "op": "OR",
      "path": "30"
    },
    "3499": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12608
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "3500": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12608
      ],
      "op": "SSTORE",
      "path": "30"
    },
    "3501": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12556,
        12608
      ],
      "op": "POP",
      "path": "30"
    },
    "3502": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12485,
        12844
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xE1D"
    },
    "3505": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12485,
        12844
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3506": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12485,
        12844
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3507": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12644
      ],
      "op": "DUP6",
      "path": "30",
      "statement": 35
    },
    "3508": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12667,
        12819
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "3510": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12667,
        12819
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "3511": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12667,
        12819
      ],
      "op": "DUP1",
      "path": "30"
    },
    "3512": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12667,
        12819
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "3514": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12667,
        12819
      ],
      "op": "ADD",
      "path": "30"
    },
    "3515": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12667,
        12819
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "3517": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12667,
        12819
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "3518": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12667,
        12819
      ],
      "op": "DUP1",
      "path": "30"
    },
    "3519": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12711,
        12742
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xDC7"
    },
    "3522": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12729,
        12741
      ],
      "op": "NUMBER",
      "path": "30"
    },
    "3523": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12711,
        12728
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xEF1"
    },
    "3526": {
      "fn": "VoteLocker._writeCheckpoint",
      "jump": "i",
      "offset": [
        12711,
        12742
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3527": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12711,
        12742
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3528": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12667,
        12819
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0xFFFFFFFF"
    },
    "3533": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12667,
        12819
      ],
      "op": "AND",
      "path": "30"
    },
    "3534": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12667,
        12819
      ],
      "op": "DUP2",
      "path": "30"
    },
    "3535": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12667,
        12819
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "3536": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12667,
        12819
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "3538": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12667,
        12819
      ],
      "op": "ADD",
      "path": "30"
    },
    "3539": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12771,
        12800
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xDDB"
    },
    "3542": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12790,
        12799
      ],
      "op": "DUP6",
      "path": "30"
    },
    "3543": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12771,
        12789
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xC34"
    },
    "3546": {
      "fn": "VoteLocker._writeCheckpoint",
      "jump": "i",
      "offset": [
        12771,
        12800
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3547": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12771,
        12800
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3552": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3554": {
      "op": "SHL"
    },
    "3555": {
      "op": "SUB"
    },
    "3556": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12667,
        12819
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "3557": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12667,
        12819
      ],
      "op": "DUP2",
      "path": "30"
    },
    "3558": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12667,
        12819
      ],
      "op": "AND",
      "path": "30"
    },
    "3559": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12667,
        12819
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "3560": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12667,
        12819
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "3561": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12667,
        12819
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "3562": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "DUP3",
      "path": "30"
    },
    "3563": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "3564": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x1"
    },
    "3566": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "DUP2",
      "path": "30"
    },
    "3567": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "ADD",
      "path": "30"
    },
    "3568": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "DUP5",
      "path": "30"
    },
    "3569": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "SSTORE",
      "path": "30"
    },
    "3570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3572": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "SWAP4",
      "path": "30"
    },
    "3573": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "DUP5",
      "path": "30"
    },
    "3574": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "3575": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "3577": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "SWAP4",
      "path": "30"
    },
    "3578": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "DUP5",
      "path": "30"
    },
    "3579": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "3580": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "KECCAK256",
      "path": "30"
    },
    "3581": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "DUP4",
      "path": "30"
    },
    "3582": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "3583": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "SWAP5",
      "path": "30"
    },
    "3584": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "3585": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "SWAP4",
      "path": "30"
    },
    "3586": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "ADD",
      "path": "30"
    },
    "3587": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "3588": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "3589": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "3590": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "AND",
      "path": "30"
    },
    "3591": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "PUSH5",
      "path": "30",
      "value": "0x100000000"
    },
    "3597": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "MUL",
      "path": "30"
    },
    "3598": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0xFFFFFFFF"
    },
    "3603": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "3604": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "SWAP4",
      "path": "30"
    },
    "3605": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "AND",
      "path": "30"
    },
    "3606": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "3607": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "3608": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "3609": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "OR",
      "path": "30"
    },
    "3610": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "3611": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "ADD",
      "path": "30"
    },
    "3612": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12639,
        12833
      ],
      "op": "SSTORE",
      "path": "30"
    },
    "3613": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12485,
        12844
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3614": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12339,
        12850
      ],
      "op": "POP",
      "path": "30"
    },
    "3615": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12131,
        12850
      ],
      "op": "SWAP4",
      "path": "30"
    },
    "3616": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12131,
        12850
      ],
      "op": "POP",
      "path": "30"
    },
    "3617": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12131,
        12850
      ],
      "op": "SWAP4",
      "path": "30"
    },
    "3618": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12131,
        12850
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "3619": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12131,
        12850
      ],
      "op": "POP",
      "path": "30"
    },
    "3620": {
      "fn": "VoteLocker._writeCheckpoint",
      "offset": [
        12131,
        12850
      ],
      "op": "POP",
      "path": "30"
    },
    "3621": {
      "fn": "VoteLocker._writeCheckpoint",
      "jump": "o",
      "offset": [
        12131,
        12850
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3622": {
      "fn": "VoteLocker._burn",
      "offset": [
        11916,
        12058
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3623": {
      "fn": "VoteLocker._burn",
      "offset": [
        11991,
        12051
      ],
      "op": "PUSH2",
      "path": "30",
      "statement": 36,
      "value": "0x622"
    },
    "3626": {
      "fn": "VoteLocker._burn",
      "offset": [
        12008,
        12031
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x5"
    },
    "3628": {
      "fn": "VoteLocker._burn",
      "offset": [
        12033,
        12042
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xFDB"
    },
    "3631": {
      "fn": "VoteLocker._burn",
      "offset": [
        12044,
        12050
      ],
      "op": "DUP4",
      "path": "30"
    },
    "3632": {
      "fn": "VoteLocker._burn",
      "offset": [
        11991,
        12007
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xCAD"
    },
    "3635": {
      "fn": "VoteLocker._burn",
      "jump": "i",
      "offset": [
        11991,
        12051
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3636": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        6013,
        7498
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3637": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7162,
        7174
      ],
      "op": "DUP2",
      "path": "30"
    },
    "3638": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7162,
        7174
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "3639": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        6136,
        6143
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "3641": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        6136,
        6143
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "3642": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        6136,
        6143
      ],
      "op": "DUP2",
      "path": "30"
    },
    "3643": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7209,
        7438
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3644": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7222,
        7226
      ],
      "op": "DUP2",
      "path": "30"
    },
    "3645": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7216,
        7219
      ],
      "op": "DUP2",
      "path": "30"
    },
    "3646": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7216,
        7226
      ],
      "op": "LT",
      "path": "30"
    },
    "3647": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7209,
        7438
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "3648": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7209,
        7438
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xE98"
    },
    "3651": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7209,
        7438
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "3652": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7242,
        7253
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "3654": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7256,
        7279
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xE4F"
    },
    "3657": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7269,
        7272
      ],
      "op": "DUP3",
      "path": "30"
    },
    "3658": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7274,
        7278
      ],
      "op": "DUP5",
      "path": "30"
    },
    "3659": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7256,
        7268
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xFE7"
    },
    "3662": {
      "fn": "VoteLocker._checkpointsLookup",
      "jump": "i",
      "offset": [
        7256,
        7279
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3663": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7256,
        7279
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3664": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7242,
        7279
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "3665": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7242,
        7279
      ],
      "op": "POP",
      "path": "30"
    },
    "3666": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7320,
        7331
      ],
      "op": "DUP5",
      "path": "30"
    },
    "3667": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7297,
        7302
      ],
      "op": "DUP7",
      "path": "30"
    },
    "3668": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7303,
        7306
      ],
      "op": "DUP3",
      "path": "30"
    },
    "3669": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7297,
        7307
      ],
      "op": "DUP2",
      "path": "30"
    },
    "3670": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7297,
        7307
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "3671": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7297,
        7307
      ],
      "op": "DUP2",
      "path": "30"
    },
    "3672": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7297,
        7307
      ],
      "op": "LT",
      "path": "30"
    },
    "3673": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7297,
        7307
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xE64"
    },
    "3676": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7297,
        7307
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "3677": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7297,
        7307
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xE64"
    },
    "3680": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7297,
        7307
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x11FB"
    },
    "3683": {
      "fn": "VoteLocker._checkpointsLookup",
      "jump": "i",
      "offset": [
        7297,
        7307
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3684": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7297,
        7307
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3685": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7297,
        7307
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "3687": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7297,
        7307
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "3688": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7297,
        7307
      ],
      "op": "DUP3",
      "path": "30"
    },
    "3689": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7297,
        7307
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "3690": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7297,
        7307
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "3692": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7297,
        7307
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "3693": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7297,
        7307
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "3694": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7297,
        7307
      ],
      "op": "KECCAK256",
      "path": "30"
    },
    "3695": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7297,
        7307
      ],
      "op": "ADD",
      "path": "30"
    },
    "3696": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7297,
        7317
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "3697": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7297,
        7317
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0xFFFFFFFF"
    },
    "3702": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7297,
        7317
      ],
      "op": "AND",
      "path": "30"
    },
    "3703": {
      "branch": 59,
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7297,
        7331
      ],
      "op": "GT",
      "path": "30"
    },
    "3704": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7293,
        7428
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "3705": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7293,
        7428
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xE84"
    },
    "3708": {
      "branch": 59,
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7293,
        7428
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "3709": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7358,
        7361
      ],
      "op": "DUP1",
      "path": "30",
      "statement": 37
    },
    "3710": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7351,
        7361
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "3711": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7351,
        7361
      ],
      "op": "POP",
      "path": "30"
    },
    "3712": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7293,
        7428
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xE92"
    },
    "3715": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7293,
        7428
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3716": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7293,
        7428
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3717": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7406,
        7413
      ],
      "op": "PUSH2",
      "path": "30",
      "statement": 38,
      "value": "0xE8F"
    },
    "3720": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7406,
        7409
      ],
      "op": "DUP2",
      "path": "30"
    },
    "3721": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7412,
        7413
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x1"
    },
    "3723": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7406,
        7413
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x125B"
    },
    "3726": {
      "fn": "VoteLocker._checkpointsLookup",
      "jump": "i",
      "offset": [
        7406,
        7413
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3727": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7406,
        7413
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3728": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7400,
        7413
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "3729": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7400,
        7413
      ],
      "op": "POP",
      "path": "30"
    },
    "3730": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7293,
        7428
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3731": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7228,
        7438
      ],
      "op": "POP",
      "path": "30"
    },
    "3732": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7209,
        7438
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xE3B"
    },
    "3735": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7209,
        7438
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3736": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7209,
        7438
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3737": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7454,
        7463
      ],
      "op": "DUP2",
      "path": "30",
      "statement": 39
    },
    "3738": {
      "branch": 60,
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7454,
        7463
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "3739": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7454,
        7491
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xEDC"
    },
    "3742": {
      "branch": 60,
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7454,
        7491
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "3743": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7470,
        7475
      ],
      "op": "DUP5",
      "path": "30"
    },
    "3744": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7476,
        7484
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xEAA"
    },
    "3747": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7483,
        7484
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x1"
    },
    "3749": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7476,
        7480
      ],
      "op": "DUP5",
      "path": "30"
    },
    "3750": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7476,
        7484
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x11E4"
    },
    "3753": {
      "fn": "VoteLocker._checkpointsLookup",
      "jump": "i",
      "offset": [
        7476,
        7484
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3754": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7476,
        7484
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3755": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7470,
        7485
      ],
      "op": "DUP2",
      "path": "30"
    },
    "3756": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7470,
        7485
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "3757": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7470,
        7485
      ],
      "op": "DUP2",
      "path": "30"
    },
    "3758": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7470,
        7485
      ],
      "op": "LT",
      "path": "30"
    },
    "3759": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7470,
        7485
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xEBA"
    },
    "3762": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7470,
        7485
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "3763": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7470,
        7485
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xEBA"
    },
    "3766": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7470,
        7485
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x11FB"
    },
    "3769": {
      "fn": "VoteLocker._checkpointsLookup",
      "jump": "i",
      "offset": [
        7470,
        7485
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3770": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7470,
        7485
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3771": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7470,
        7485
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "3773": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7470,
        7485
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "3774": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7470,
        7485
      ],
      "op": "DUP3",
      "path": "30"
    },
    "3775": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7470,
        7485
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "3776": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7470,
        7485
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "3778": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7470,
        7485
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "3779": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7470,
        7485
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "3780": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7470,
        7485
      ],
      "op": "KECCAK256",
      "path": "30"
    },
    "3781": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7470,
        7485
      ],
      "op": "ADD",
      "path": "30"
    },
    "3782": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7470,
        7491
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "3783": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7470,
        7491
      ],
      "op": "PUSH5",
      "path": "30",
      "value": "0x100000000"
    },
    "3789": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7470,
        7491
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "3790": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7470,
        7491
      ],
      "op": "DIV",
      "path": "30"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3795": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3797": {
      "op": "SHL"
    },
    "3798": {
      "op": "SUB"
    },
    "3799": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7470,
        7491
      ],
      "op": "AND",
      "path": "30"
    },
    "3800": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7454,
        7491
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xEDF"
    },
    "3803": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7454,
        7491
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3804": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7454,
        7491
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3805": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7466,
        7467
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "3807": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7454,
        7491
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3812": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3814": {
      "op": "SHL"
    },
    "3815": {
      "op": "SUB"
    },
    "3816": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7447,
        7491
      ],
      "op": "AND",
      "path": "30"
    },
    "3817": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        7447,
        7491
      ],
      "op": "SWAP6",
      "path": "30"
    },
    "3818": {
      "fn": "VoteLocker._checkpointsLookup",
      "offset": [
        6013,
        7498
      ],
      "op": "SWAP5",
      "path": "30"
    },
    "3819": {
      "op": "POP"
    },
    "3820": {
      "op": "POP"
    },
    "3821": {
      "op": "POP"
    },
    "3822": {
      "op": "POP"
    },
    "3823": {
      "op": "POP"
    },
    "3824": {
      "fn": "VoteLocker._checkpointsLookup",
      "jump": "o",
      "offset": [
        6013,
        7498
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3825": {
      "fn": "SafeCast.toUint32",
      "offset": [
        3045,
        3232
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3826": {
      "fn": "SafeCast.toUint32",
      "offset": [
        3101,
        3107
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3828": {
      "fn": "SafeCast.toUint32",
      "offset": [
        3136,
        3152
      ],
      "op": "PUSH4",
      "path": "27",
      "statement": 40,
      "value": "0xFFFFFFFF"
    },
    "3833": {
      "fn": "SafeCast.toUint32",
      "offset": [
        3127,
        3152
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3834": {
      "fn": "SafeCast.toUint32",
      "offset": [
        3127,
        3152
      ],
      "op": "GT",
      "path": "27"
    },
    "3835": {
      "branch": 63,
      "fn": "SafeCast.toUint32",
      "offset": [
        3127,
        3152
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "3836": {
      "fn": "SafeCast.toUint32",
      "offset": [
        3119,
        3195
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xC9D"
    },
    "3839": {
      "branch": 63,
      "fn": "SafeCast.toUint32",
      "offset": [
        3119,
        3195
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3840": {
      "fn": "SafeCast.toUint32",
      "offset": [
        3119,
        3195
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3842": {
      "fn": "SafeCast.toUint32",
      "offset": [
        3119,
        3195
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3843": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3847": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3849": {
      "op": "SHL"
    },
    "3850": {
      "fn": "SafeCast.toUint32",
      "offset": [
        3119,
        3195
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3851": {
      "fn": "SafeCast.toUint32",
      "offset": [
        3119,
        3195
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3852": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3854": {
      "fn": "SafeCast.toUint32",
      "offset": [
        3119,
        3195
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "3856": {
      "fn": "SafeCast.toUint32",
      "offset": [
        3119,
        3195
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3857": {
      "fn": "SafeCast.toUint32",
      "offset": [
        3119,
        3195
      ],
      "op": "ADD",
      "path": "27"
    },
    "3858": {
      "op": "MSTORE"
    },
    "3859": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3863": {
      "op": "DUP3"
    },
    "3864": {
      "op": "ADD"
    },
    "3865": {
      "op": "MSTORE"
    },
    "3866": {
      "op": "PUSH32",
      "value": "0x53616665436173743A2076616C756520646F65736E27742066697420696E2033"
    },
    "3899": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3901": {
      "op": "DUP3"
    },
    "3902": {
      "op": "ADD"
    },
    "3903": {
      "op": "MSTORE"
    },
    "3904": {
      "op": "PUSH6",
      "value": "0x322062697473"
    },
    "3911": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3913": {
      "op": "SHL"
    },
    "3914": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3916": {
      "op": "DUP3"
    },
    "3917": {
      "op": "ADD"
    },
    "3918": {
      "op": "MSTORE"
    },
    "3919": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3921": {
      "op": "ADD"
    },
    "3922": {
      "fn": "SafeCast.toUint32",
      "offset": [
        3119,
        3195
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x402"
    },
    "3925": {
      "op": "JUMP"
    },
    "3926": {
      "fn": "VoteLocker._mint",
      "offset": [
        10425,
        10696
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3933": {
      "op": "SHL"
    },
    "3934": {
      "op": "SUB"
    },
    "3935": {
      "fn": "VoteLocker._mint",
      "offset": [
        10521,
        10534
      ],
      "op": "PUSH2",
      "path": "30",
      "statement": 41,
      "value": "0xF66"
    },
    "3938": {
      "fn": "VoteLocker._mint",
      "offset": [
        10521,
        10532
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x364"
    },
    "3941": {
      "fn": "VoteLocker._mint",
      "jump": "i",
      "offset": [
        10521,
        10534
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3942": {
      "fn": "VoteLocker._mint",
      "offset": [
        10521,
        10534
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3943": {
      "fn": "VoteLocker._mint",
      "offset": [
        10521,
        10550
      ],
      "op": "GT",
      "path": "30"
    },
    "3944": {
      "branch": 61,
      "fn": "VoteLocker._mint",
      "offset": [
        10521,
        10550
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "3945": {
      "fn": "VoteLocker._mint",
      "offset": [
        10500,
        10624
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xFCD"
    },
    "3948": {
      "branch": 61,
      "fn": "VoteLocker._mint",
      "offset": [
        10500,
        10624
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "3949": {
      "fn": "VoteLocker._mint",
      "offset": [
        10500,
        10624
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "3951": {
      "fn": "VoteLocker._mint",
      "offset": [
        10500,
        10624
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "3952": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3956": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3958": {
      "op": "SHL"
    },
    "3959": {
      "fn": "VoteLocker._mint",
      "offset": [
        10500,
        10624
      ],
      "op": "DUP2",
      "path": "30"
    },
    "3960": {
      "fn": "VoteLocker._mint",
      "offset": [
        10500,
        10624
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "3961": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3963": {
      "fn": "VoteLocker._mint",
      "offset": [
        10500,
        10624
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "3965": {
      "fn": "VoteLocker._mint",
      "offset": [
        10500,
        10624
      ],
      "op": "DUP3",
      "path": "30"
    },
    "3966": {
      "fn": "VoteLocker._mint",
      "offset": [
        10500,
        10624
      ],
      "op": "ADD",
      "path": "30"
    },
    "3967": {
      "op": "MSTORE"
    },
    "3968": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "3970": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3972": {
      "op": "DUP3"
    },
    "3973": {
      "op": "ADD"
    },
    "3974": {
      "op": "MSTORE"
    },
    "3975": {
      "op": "PUSH32",
      "value": "0x566F74654C6F636B65723A20746F74616C20737570706C79207269736B73206F"
    },
    "4008": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4010": {
      "op": "DUP3"
    },
    "4011": {
      "op": "ADD"
    },
    "4012": {
      "op": "MSTORE"
    },
    "4013": {
      "op": "PUSH16",
      "value": "0x766572666C6F77696E6720766F746573"
    },
    "4030": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4032": {
      "op": "SHL"
    },
    "4033": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4035": {
      "op": "DUP3"
    },
    "4036": {
      "op": "ADD"
    },
    "4037": {
      "op": "MSTORE"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4040": {
      "op": "ADD"
    },
    "4041": {
      "fn": "VoteLocker._mint",
      "offset": [
        10500,
        10624
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x402"
    },
    "4044": {
      "op": "JUMP"
    },
    "4045": {
      "fn": "VoteLocker._mint",
      "offset": [
        10500,
        10624
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "4046": {
      "fn": "VoteLocker._mint",
      "offset": [
        10634,
        10689
      ],
      "op": "PUSH2",
      "path": "30",
      "statement": 42,
      "value": "0x622"
    },
    "4049": {
      "fn": "VoteLocker._mint",
      "offset": [
        10651,
        10674
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x5"
    },
    "4051": {
      "fn": "VoteLocker._mint",
      "offset": [
        10676,
        10680
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xCA1"
    },
    "4054": {
      "fn": "VoteLocker._mint",
      "offset": [
        10682,
        10688
      ],
      "op": "DUP4",
      "path": "30"
    },
    "4055": {
      "fn": "VoteLocker._mint",
      "offset": [
        10634,
        10650
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xCAD"
    },
    "4058": {
      "fn": "VoteLocker._mint",
      "jump": "i",
      "offset": [
        10634,
        10689
      ],
      "op": "JUMP",
      "path": "30"
    },
    "4059": {
      "fn": "VoteLocker._subtract",
      "offset": [
        13147,
        13248
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "4060": {
      "fn": "VoteLocker._subtract",
      "offset": [
        13210,
        13217
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "4062": {
      "fn": "VoteLocker._subtract",
      "offset": [
        13236,
        13241
      ],
      "op": "PUSH2",
      "path": "30",
      "statement": 43,
      "value": "0x69B"
    },
    "4065": {
      "fn": "VoteLocker._subtract",
      "offset": [
        13240,
        13241
      ],
      "op": "DUP3",
      "path": "30"
    },
    "4066": {
      "fn": "VoteLocker._subtract",
      "offset": [
        13236,
        13237
      ],
      "op": "DUP5",
      "path": "30"
    },
    "4067": {
      "fn": "VoteLocker._subtract",
      "offset": [
        13236,
        13241
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x11E4"
    },
    "4070": {
      "fn": "VoteLocker._subtract",
      "jump": "i",
      "offset": [
        13236,
        13241
      ],
      "op": "JUMP",
      "path": "30"
    },
    "4071": {
      "fn": "Math.average",
      "offset": [
        663,
        816
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4072": {
      "fn": "Math.average",
      "offset": [
        725,
        732
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4074": {
      "fn": "Math.average",
      "offset": [
        798,
        809
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 44,
      "value": "0xFF6"
    },
    "4077": {
      "fn": "Math.average",
      "offset": [
        808,
        809
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "4079": {
      "fn": "Math.average",
      "offset": [
        799,
        804
      ],
      "op": "DUP5",
      "path": "26"
    },
    "4080": {
      "fn": "Math.average",
      "offset": [
        799,
        804
      ],
      "op": "DUP5",
      "path": "26"
    },
    "4081": {
      "fn": "Math.average",
      "offset": [
        799,
        804
      ],
      "op": "XOR",
      "path": "26"
    },
    "4082": {
      "fn": "Math.average",
      "offset": [
        798,
        809
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x12BD"
    },
    "4085": {
      "fn": "Math.average",
      "jump": "i",
      "offset": [
        798,
        809
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4086": {
      "fn": "Math.average",
      "offset": [
        798,
        809
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4087": {
      "fn": "Math.average",
      "offset": [
        788,
        809
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x69B"
    },
    "4090": {
      "fn": "Math.average",
      "offset": [
        788,
        809
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4091": {
      "fn": "Math.average",
      "offset": [
        789,
        794
      ],
      "op": "DUP5",
      "path": "26"
    },
    "4092": {
      "fn": "Math.average",
      "offset": [
        789,
        794
      ],
      "op": "DUP5",
      "path": "26"
    },
    "4093": {
      "fn": "Math.average",
      "offset": [
        789,
        794
      ],
      "op": "AND",
      "path": "26"
    },
    "4094": {
      "fn": "Math.average",
      "offset": [
        788,
        809
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x125B"
    },
    "4097": {
      "fn": "Math.average",
      "jump": "i",
      "offset": [
        788,
        809
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4098": {
      "op": "JUMPDEST"
    },
    "4099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4101": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4103": {
      "op": "DUP1"
    },
    "4104": {
      "op": "DUP4"
    },
    "4105": {
      "op": "MSTORE"
    },
    "4106": {
      "op": "DUP4"
    },
    "4107": {
      "op": "MLOAD"
    },
    "4108": {
      "op": "DUP1"
    },
    "4109": {
      "op": "DUP3"
    },
    "4110": {
      "op": "DUP6"
    },
    "4111": {
      "op": "ADD"
    },
    "4112": {
      "op": "MSTORE"
    },
    "4113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4115": {
      "op": "JUMPDEST"
    },
    "4116": {
      "op": "DUP2"
    },
    "4117": {
      "op": "DUP2"
    },
    "4118": {
      "op": "LT"
    },
    "4119": {
      "op": "ISZERO"
    },
    "4120": {
      "op": "PUSH2",
      "value": "0x102F"
    },
    "4123": {
      "op": "JUMPI"
    },
    "4124": {
      "op": "DUP6"
    },
    "4125": {
      "op": "DUP2"
    },
    "4126": {
      "op": "ADD"
    },
    "4127": {
      "op": "DUP4"
    },
    "4128": {
      "op": "ADD"
    },
    "4129": {
      "op": "MLOAD"
    },
    "4130": {
      "op": "DUP6"
    },
    "4131": {
      "op": "DUP3"
    },
    "4132": {
      "op": "ADD"
    },
    "4133": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4135": {
      "op": "ADD"
    },
    "4136": {
      "op": "MSTORE"
    },
    "4137": {
      "op": "DUP3"
    },
    "4138": {
      "op": "ADD"
    },
    "4139": {
      "op": "PUSH2",
      "value": "0x1013"
    },
    "4142": {
      "op": "JUMP"
    },
    "4143": {
      "op": "JUMPDEST"
    },
    "4144": {
      "op": "DUP2"
    },
    "4145": {
      "op": "DUP2"
    },
    "4146": {
      "op": "GT"
    },
    "4147": {
      "op": "ISZERO"
    },
    "4148": {
      "op": "PUSH2",
      "value": "0x1041"
    },
    "4151": {
      "op": "JUMPI"
    },
    "4152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4154": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4156": {
      "op": "DUP4"
    },
    "4157": {
      "op": "DUP8"
    },
    "4158": {
      "op": "ADD"
    },
    "4159": {
      "op": "ADD"
    },
    "4160": {
      "op": "MSTORE"
    },
    "4161": {
      "op": "JUMPDEST"
    },
    "4162": {
      "op": "POP"
    },
    "4163": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4165": {
      "op": "ADD"
    },
    "4166": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4168": {
      "op": "NOT"
    },
    "4169": {
      "op": "AND"
    },
    "4170": {
      "op": "SWAP3"
    },
    "4171": {
      "op": "SWAP1"
    },
    "4172": {
      "op": "SWAP3"
    },
    "4173": {
      "op": "ADD"
    },
    "4174": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4176": {
      "op": "ADD"
    },
    "4177": {
      "op": "SWAP4"
    },
    "4178": {
      "op": "SWAP3"
    },
    "4179": {
      "op": "POP"
    },
    "4180": {
      "op": "POP"
    },
    "4181": {
      "op": "POP"
    },
    "4182": {
      "jump": "o",
      "op": "JUMP"
    },
    "4183": {
      "op": "JUMPDEST"
    },
    "4184": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4186": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4188": {
      "op": "DUP3"
    },
    "4189": {
      "op": "DUP5"
    },
    "4190": {
      "op": "SUB"
    },
    "4191": {
      "op": "SLT"
    },
    "4192": {
      "op": "ISZERO"
    },
    "4193": {
      "op": "PUSH2",
      "value": "0x1069"
    },
    "4196": {
      "op": "JUMPI"
    },
    "4197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4199": {
      "op": "DUP1"
    },
    "4200": {
      "op": "REVERT"
    },
    "4201": {
      "op": "JUMPDEST"
    },
    "4202": {
      "op": "POP"
    },
    "4203": {
      "op": "CALLDATALOAD"
    },
    "4204": {
      "op": "SWAP2"
    },
    "4205": {
      "op": "SWAP1"
    },
    "4206": {
      "op": "POP"
    },
    "4207": {
      "jump": "o",
      "op": "JUMP"
    },
    "4208": {
      "op": "JUMPDEST"
    },
    "4209": {
      "op": "DUP1"
    },
    "4210": {
      "op": "CALLDATALOAD"
    },
    "4211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4215": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4217": {
      "op": "SHL"
    },
    "4218": {
      "op": "SUB"
    },
    "4219": {
      "op": "DUP2"
    },
    "4220": {
      "op": "AND"
    },
    "4221": {
      "op": "DUP2"
    },
    "4222": {
      "op": "EQ"
    },
    "4223": {
      "op": "PUSH2",
      "value": "0x1087"
    },
    "4226": {
      "op": "JUMPI"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4229": {
      "op": "DUP1"
    },
    "4230": {
      "op": "REVERT"
    },
    "4231": {
      "op": "JUMPDEST"
    },
    "4232": {
      "op": "SWAP2"
    },
    "4233": {
      "op": "SWAP1"
    },
    "4234": {
      "op": "POP"
    },
    "4235": {
      "jump": "o",
      "op": "JUMP"
    },
    "4236": {
      "op": "JUMPDEST"
    },
    "4237": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4239": {
      "op": "DUP1"
    },
    "4240": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4242": {
      "op": "DUP4"
    },
    "4243": {
      "op": "DUP6"
    },
    "4244": {
      "op": "SUB"
    },
    "4245": {
      "op": "SLT"
    },
    "4246": {
      "op": "ISZERO"
    },
    "4247": {
      "op": "PUSH2",
      "value": "0x109F"
    },
    "4250": {
      "op": "JUMPI"
    },
    "4251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4253": {
      "op": "DUP1"
    },
    "4254": {
      "op": "REVERT"
    },
    "4255": {
      "op": "JUMPDEST"
    },
    "4256": {
      "op": "PUSH2",
      "value": "0x10A8"
    },
    "4259": {
      "op": "DUP4"
    },
    "4260": {
      "op": "PUSH2",
      "value": "0x1070"
    },
    "4263": {
      "jump": "i",
      "op": "JUMP"
    },
    "4264": {
      "op": "JUMPDEST"
    },
    "4265": {
      "op": "SWAP5"
    },
    "4266": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4268": {
      "op": "SWAP4"
    },
    "4269": {
      "op": "SWAP1"
    },
    "4270": {
      "op": "SWAP4"
    },
    "4271": {
      "op": "ADD"
    },
    "4272": {
      "op": "CALLDATALOAD"
    },
    "4273": {
      "op": "SWAP4"
    },
    "4274": {
      "op": "POP"
    },
    "4275": {
      "op": "POP"
    },
    "4276": {
      "op": "POP"
    },
    "4277": {
      "jump": "o",
      "op": "JUMP"
    },
    "4278": {
      "op": "JUMPDEST"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4281": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4283": {
      "op": "DUP3"
    },
    "4284": {
      "op": "DUP5"
    },
    "4285": {
      "op": "SUB"
    },
    "4286": {
      "op": "SLT"
    },
    "4287": {
      "op": "ISZERO"
    },
    "4288": {
      "op": "PUSH2",
      "value": "0x10C8"
    },
    "4291": {
      "op": "JUMPI"
    },
    "4292": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4294": {
      "op": "DUP1"
    },
    "4295": {
      "op": "REVERT"
    },
    "4296": {
      "op": "JUMPDEST"
    },
    "4297": {
      "op": "PUSH2",
      "value": "0x69B"
    },
    "4300": {
      "op": "DUP3"
    },
    "4301": {
      "op": "PUSH2",
      "value": "0x1070"
    },
    "4304": {
      "jump": "i",
      "op": "JUMP"
    },
    "4305": {
      "op": "JUMPDEST"
    },
    "4306": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4308": {
      "op": "DUP1"
    },
    "4309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4311": {
      "op": "DUP1"
    },
    "4312": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4314": {
      "op": "DUP1"
    },
    "4315": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4317": {
      "op": "DUP8"
    },
    "4318": {
      "op": "DUP10"
    },
    "4319": {
      "op": "SUB"
    },
    "4320": {
      "op": "SLT"
    },
    "4321": {
      "op": "ISZERO"
    },
    "4322": {
      "op": "PUSH2",
      "value": "0x10EA"
    },
    "4325": {
      "op": "JUMPI"
    },
    "4326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4328": {
      "op": "DUP1"
    },
    "4329": {
      "op": "REVERT"
    },
    "4330": {
      "op": "JUMPDEST"
    },
    "4331": {
      "op": "PUSH2",
      "value": "0x10F3"
    },
    "4334": {
      "op": "DUP8"
    },
    "4335": {
      "op": "PUSH2",
      "value": "0x1070"
    },
    "4338": {
      "jump": "i",
      "op": "JUMP"
    },
    "4339": {
      "op": "JUMPDEST"
    },
    "4340": {
      "op": "SWAP6"
    },
    "4341": {
      "op": "POP"
    },
    "4342": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4344": {
      "op": "DUP8"
    },
    "4345": {
      "op": "ADD"
    },
    "4346": {
      "op": "CALLDATALOAD"
    },
    "4347": {
      "op": "SWAP5"
    },
    "4348": {
      "op": "POP"
    },
    "4349": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4351": {
      "op": "DUP8"
    },
    "4352": {
      "op": "ADD"
    },
    "4353": {
      "op": "CALLDATALOAD"
    },
    "4354": {
      "op": "SWAP4"
    },
    "4355": {
      "op": "POP"
    },
    "4356": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4358": {
      "op": "DUP8"
    },
    "4359": {
      "op": "ADD"
    },
    "4360": {
      "op": "CALLDATALOAD"
    },
    "4361": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4363": {
      "op": "DUP2"
    },
    "4364": {
      "op": "AND"
    },
    "4365": {
      "op": "DUP2"
    },
    "4366": {
      "op": "EQ"
    },
    "4367": {
      "op": "PUSH2",
      "value": "0x1117"
    },
    "4370": {
      "op": "JUMPI"
    },
    "4371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4373": {
      "op": "DUP1"
    },
    "4374": {
      "op": "REVERT"
    },
    "4375": {
      "op": "JUMPDEST"
    },
    "4376": {
      "op": "SWAP6"
    },
    "4377": {
      "op": "SWAP9"
    },
    "4378": {
      "op": "SWAP5"
    },
    "4379": {
      "op": "SWAP8"
    },
    "4380": {
      "op": "POP"
    },
    "4381": {
      "op": "SWAP3"
    },
    "4382": {
      "op": "SWAP6"
    },
    "4383": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4385": {
      "op": "DUP2"
    },
    "4386": {
      "op": "ADD"
    },
    "4387": {
      "op": "CALLDATALOAD"
    },
    "4388": {
      "op": "SWAP5"
    },
    "4389": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4391": {
      "op": "SWAP1"
    },
    "4392": {
      "op": "SWAP2"
    },
    "4393": {
      "op": "ADD"
    },
    "4394": {
      "op": "CALLDATALOAD"
    },
    "4395": {
      "op": "SWAP4"
    },
    "4396": {
      "op": "POP"
    },
    "4397": {
      "op": "SWAP2"
    },
    "4398": {
      "op": "POP"
    },
    "4399": {
      "op": "POP"
    },
    "4400": {
      "jump": "o",
      "op": "JUMP"
    },
    "4401": {
      "op": "JUMPDEST"
    },
    "4402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4404": {
      "op": "DUP1"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4407": {
      "op": "DUP4"
    },
    "4408": {
      "op": "DUP6"
    },
    "4409": {
      "op": "SUB"
    },
    "4410": {
      "op": "SLT"
    },
    "4411": {
      "op": "ISZERO"
    },
    "4412": {
      "op": "PUSH2",
      "value": "0x1144"
    },
    "4415": {
      "op": "JUMPI"
    },
    "4416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4418": {
      "op": "DUP1"
    },
    "4419": {
      "op": "REVERT"
    },
    "4420": {
      "op": "JUMPDEST"
    },
    "4421": {
      "op": "POP"
    },
    "4422": {
      "op": "POP"
    },
    "4423": {
      "op": "DUP1"
    },
    "4424": {
      "op": "CALLDATALOAD"
    },
    "4425": {
      "op": "SWAP3"
    },
    "4426": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4428": {
      "op": "SWAP1"
    },
    "4429": {
      "op": "SWAP2"
    },
    "4430": {
      "op": "ADD"
    },
    "4431": {
      "op": "CALLDATALOAD"
    },
    "4432": {
      "op": "SWAP2"
    },
    "4433": {
      "op": "POP"
    },
    "4434": {
      "jump": "o",
      "op": "JUMP"
    },
    "4435": {
      "op": "JUMPDEST"
    },
    "4436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4438": {
      "op": "DUP1"
    },
    "4439": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4441": {
      "op": "DUP4"
    },
    "4442": {
      "op": "DUP6"
    },
    "4443": {
      "op": "SUB"
    },
    "4444": {
      "op": "SLT"
    },
    "4445": {
      "op": "ISZERO"
    },
    "4446": {
      "op": "PUSH2",
      "value": "0x1166"
    },
    "4449": {
      "op": "JUMPI"
    },
    "4450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4452": {
      "op": "DUP1"
    },
    "4453": {
      "op": "REVERT"
    },
    "4454": {
      "op": "JUMPDEST"
    },
    "4455": {
      "op": "PUSH2",
      "value": "0x116F"
    },
    "4458": {
      "op": "DUP4"
    },
    "4459": {
      "op": "PUSH2",
      "value": "0x1070"
    },
    "4462": {
      "jump": "i",
      "op": "JUMP"
    },
    "4463": {
      "op": "JUMPDEST"
    },
    "4464": {
      "op": "SWAP2"
    },
    "4465": {
      "op": "POP"
    },
    "4466": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4468": {
      "op": "DUP4"
    },
    "4469": {
      "op": "ADD"
    },
    "4470": {
      "op": "CALLDATALOAD"
    },
    "4471": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4476": {
      "op": "DUP2"
    },
    "4477": {
      "op": "AND"
    },
    "4478": {
      "op": "DUP2"
    },
    "4479": {
      "op": "EQ"
    },
    "4480": {
      "op": "PUSH2",
      "value": "0x1188"
    },
    "4483": {
      "op": "JUMPI"
    },
    "4484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4486": {
      "op": "DUP1"
    },
    "4487": {
      "op": "REVERT"
    },
    "4488": {
      "op": "JUMPDEST"
    },
    "4489": {
      "op": "DUP1"
    },
    "4490": {
      "op": "SWAP2"
    },
    "4491": {
      "op": "POP"
    },
    "4492": {
      "op": "POP"
    },
    "4493": {
      "op": "SWAP3"
    },
    "4494": {
      "op": "POP"
    },
    "4495": {
      "op": "SWAP3"
    },
    "4496": {
      "op": "SWAP1"
    },
    "4497": {
      "op": "POP"
    },
    "4498": {
      "jump": "o",
      "op": "JUMP"
    },
    "4499": {
      "op": "JUMPDEST"
    },
    "4500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4502": {
      "op": "DUP2"
    },
    "4503": {
      "op": "DUP2"
    },
    "4504": {
      "op": "SHR"
    },
    "4505": {
      "op": "SWAP1"
    },
    "4506": {
      "op": "DUP3"
    },
    "4507": {
      "op": "AND"
    },
    "4508": {
      "op": "DUP1"
    },
    "4509": {
      "op": "PUSH2",
      "value": "0x11A7"
    },
    "4512": {
      "op": "JUMPI"
    },
    "4513": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4515": {
      "op": "DUP3"
    },
    "4516": {
      "op": "AND"
    },
    "4517": {
      "op": "SWAP2"
    },
    "4518": {
      "op": "POP"
    },
    "4519": {
      "op": "JUMPDEST"
    },
    "4520": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4522": {
      "op": "DUP3"
    },
    "4523": {
      "op": "LT"
    },
    "4524": {
      "op": "DUP2"
    },
    "4525": {
      "op": "EQ"
    },
    "4526": {
      "op": "ISZERO"
    },
    "4527": {
      "op": "PUSH2",
      "value": "0x11C8"
    },
    "4530": {
      "op": "JUMPI"
    },
    "4531": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4536": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4538": {
      "op": "SHL"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4541": {
      "op": "MSTORE"
    },
    "4542": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4544": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4546": {
      "op": "MSTORE"
    },
    "4547": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4551": {
      "op": "REVERT"
    },
    "4552": {
      "op": "JUMPDEST"
    },
    "4553": {
      "op": "POP"
    },
    "4554": {
      "op": "SWAP2"
    },
    "4555": {
      "op": "SWAP1"
    },
    "4556": {
      "op": "POP"
    },
    "4557": {
      "jump": "o",
      "op": "JUMP"
    },
    "4558": {
      "op": "JUMPDEST"
    },
    "4559": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4564": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4566": {
      "op": "SHL"
    },
    "4567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4569": {
      "op": "MSTORE"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4572": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4574": {
      "op": "MSTORE"
    },
    "4575": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4579": {
      "op": "REVERT"
    },
    "4580": {
      "op": "JUMPDEST"
    },
    "4581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4583": {
      "op": "DUP3"
    },
    "4584": {
      "op": "DUP3"
    },
    "4585": {
      "op": "LT"
    },
    "4586": {
      "op": "ISZERO"
    },
    "4587": {
      "op": "PUSH2",
      "value": "0x11F6"
    },
    "4590": {
      "op": "JUMPI"
    },
    "4591": {
      "op": "PUSH2",
      "value": "0x11F6"
    },
    "4594": {
      "op": "PUSH2",
      "value": "0x11CE"
    },
    "4597": {
      "jump": "i",
      "op": "JUMP"
    },
    "4598": {
      "op": "JUMPDEST"
    },
    "4599": {
      "op": "POP"
    },
    "4600": {
      "op": "SUB"
    },
    "4601": {
      "op": "SWAP1"
    },
    "4602": {
      "jump": "o",
      "op": "JUMP"
    },
    "4603": {
      "op": "JUMPDEST"
    },
    "4604": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4609": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4611": {
      "op": "SHL"
    },
    "4612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4614": {
      "op": "MSTORE"
    },
    "4615": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4617": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4619": {
      "op": "MSTORE"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4622": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4624": {
      "op": "REVERT"
    },
    "4625": {
      "op": "JUMPDEST"
    },
    "4626": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4632": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4634": {
      "op": "SHL"
    },
    "4635": {
      "op": "SUB"
    },
    "4636": {
      "op": "DUP4"
    },
    "4637": {
      "op": "DUP2"
    },
    "4638": {
      "op": "AND"
    },
    "4639": {
      "op": "SWAP1"
    },
    "4640": {
      "op": "DUP4"
    },
    "4641": {
      "op": "AND"
    },
    "4642": {
      "op": "DUP2"
    },
    "4643": {
      "op": "DUP2"
    },
    "4644": {
      "op": "LT"
    },
    "4645": {
      "op": "ISZERO"
    },
    "4646": {
      "op": "PUSH2",
      "value": "0x1231"
    },
    "4649": {
      "op": "JUMPI"
    },
    "4650": {
      "op": "PUSH2",
      "value": "0x1231"
    },
    "4653": {
      "op": "PUSH2",
      "value": "0x11CE"
    },
    "4656": {
      "jump": "i",
      "op": "JUMP"
    },
    "4657": {
      "op": "JUMPDEST"
    },
    "4658": {
      "op": "SUB"
    },
    "4659": {
      "op": "SWAP4"
    },
    "4660": {
      "op": "SWAP3"
    },
    "4661": {
      "op": "POP"
    },
    "4662": {
      "op": "POP"
    },
    "4663": {
      "op": "POP"
    },
    "4664": {
      "jump": "o",
      "op": "JUMP"
    },
    "4665": {
      "op": "JUMPDEST"
    },
    "4666": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4668": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4670": {
      "op": "DUP3"
    },
    "4671": {
      "op": "DUP5"
    },
    "4672": {
      "op": "SUB"
    },
    "4673": {
      "op": "SLT"
    },
    "4674": {
      "op": "ISZERO"
    },
    "4675": {
      "op": "PUSH2",
      "value": "0x124B"
    },
    "4678": {
      "op": "JUMPI"
    },
    "4679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4681": {
      "op": "DUP1"
    },
    "4682": {
      "op": "REVERT"
    },
    "4683": {
      "op": "JUMPDEST"
    },
    "4684": {
      "op": "DUP2"
    },
    "4685": {
      "op": "MLOAD"
    },
    "4686": {
      "op": "DUP1"
    },
    "4687": {
      "op": "ISZERO"
    },
    "4688": {
      "op": "ISZERO"
    },
    "4689": {
      "op": "DUP2"
    },
    "4690": {
      "op": "EQ"
    },
    "4691": {
      "op": "PUSH2",
      "value": "0x69B"
    },
    "4694": {
      "op": "JUMPI"
    },
    "4695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4697": {
      "op": "DUP1"
    },
    "4698": {
      "op": "REVERT"
    },
    "4699": {
      "op": "JUMPDEST"
    },
    "4700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4702": {
      "op": "DUP3"
    },
    "4703": {
      "op": "NOT"
    },
    "4704": {
      "op": "DUP3"
    },
    "4705": {
      "op": "GT"
    },
    "4706": {
      "op": "ISZERO"
    },
    "4707": {
      "op": "PUSH2",
      "value": "0x126E"
    },
    "4710": {
      "op": "JUMPI"
    },
    "4711": {
      "op": "PUSH2",
      "value": "0x126E"
    },
    "4714": {
      "op": "PUSH2",
      "value": "0x11CE"
    },
    "4717": {
      "jump": "i",
      "op": "JUMP"
    },
    "4718": {
      "op": "JUMPDEST"
    },
    "4719": {
      "op": "POP"
    },
    "4720": {
      "op": "ADD"
    },
    "4721": {
      "op": "SWAP1"
    },
    "4722": {
      "jump": "o",
      "op": "JUMP"
    },
    "4723": {
      "op": "JUMPDEST"
    },
    "4724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4730": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4732": {
      "op": "SHL"
    },
    "4733": {
      "op": "SUB"
    },
    "4734": {
      "op": "DUP3"
    },
    "4735": {
      "op": "DUP2"
    },
    "4736": {
      "op": "AND"
    },
    "4737": {
      "op": "DUP5"
    },
    "4738": {
      "op": "DUP3"
    },
    "4739": {
      "op": "AND"
    },
    "4740": {
      "op": "DUP1"
    },
    "4741": {
      "op": "DUP4"
    },
    "4742": {
      "op": "SUB"
    },
    "4743": {
      "op": "DUP3"
    },
    "4744": {
      "op": "GT"
    },
    "4745": {
      "op": "ISZERO"
    },
    "4746": {
      "op": "PUSH2",
      "value": "0x1295"
    },
    "4749": {
      "op": "JUMPI"
    },
    "4750": {
      "op": "PUSH2",
      "value": "0x1295"
    },
    "4753": {
      "op": "PUSH2",
      "value": "0x11CE"
    },
    "4756": {
      "jump": "i",
      "op": "JUMP"
    },
    "4757": {
      "op": "JUMPDEST"
    },
    "4758": {
      "op": "ADD"
    },
    "4759": {
      "op": "SWAP5"
    },
    "4760": {
      "op": "SWAP4"
    },
    "4761": {
      "op": "POP"
    },
    "4762": {
      "op": "POP"
    },
    "4763": {
      "op": "POP"
    },
    "4764": {
      "op": "POP"
    },
    "4765": {
      "jump": "o",
      "op": "JUMP"
    },
    "4766": {
      "op": "JUMPDEST"
    },
    "4767": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4769": {
      "op": "DUP2"
    },
    "4770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4772": {
      "op": "NOT"
    },
    "4773": {
      "op": "DIV"
    },
    "4774": {
      "op": "DUP4"
    },
    "4775": {
      "op": "GT"
    },
    "4776": {
      "op": "DUP3"
    },
    "4777": {
      "op": "ISZERO"
    },
    "4778": {
      "op": "ISZERO"
    },
    "4779": {
      "op": "AND"
    },
    "4780": {
      "op": "ISZERO"
    },
    "4781": {
      "op": "PUSH2",
      "value": "0x12B8"
    },
    "4784": {
      "op": "JUMPI"
    },
    "4785": {
      "op": "PUSH2",
      "value": "0x12B8"
    },
    "4788": {
      "op": "PUSH2",
      "value": "0x11CE"
    },
    "4791": {
      "jump": "i",
      "op": "JUMP"
    },
    "4792": {
      "op": "JUMPDEST"
    },
    "4793": {
      "op": "POP"
    },
    "4794": {
      "op": "MUL"
    },
    "4795": {
      "op": "SWAP1"
    },
    "4796": {
      "jump": "o",
      "op": "JUMP"
    },
    "4797": {
      "op": "JUMPDEST"
    },
    "4798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4800": {
      "op": "DUP3"
    },
    "4801": {
      "op": "PUSH2",
      "value": "0x12DA"
    },
    "4804": {
      "op": "JUMPI"
    },
    "4805": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4810": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4812": {
      "op": "SHL"
    },
    "4813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4815": {
      "op": "MSTORE"
    },
    "4816": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4818": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4820": {
      "op": "MSTORE"
    },
    "4821": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4823": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4825": {
      "op": "REVERT"
    },
    "4826": {
      "op": "JUMPDEST"
    },
    "4827": {
      "op": "POP"
    },
    "4828": {
      "op": "DIV"
    },
    "4829": {
      "op": "SWAP1"
    },
    "4830": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "77e725537a4f6431632b55f9480b85d242741b74",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.2;\n\nimport \"OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/math/Math.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/token/ERC20/ERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/math/SafeCast.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/cryptography/ECDSA.sol\";\n\n/**\n * @title VoteLocker\n * @notice VoteLocker is smart contract that supports locking up of a staking token for increased\n *         governance voting power. It is largely based on the ERC20Votes contract from openzeppelin\n *         with some modificaitons to allow it to support lockups/vote boosting.\n *\n * - Voting power is determined by stake amount and lockup duration.\n * - Implements a subset of the ERC20 standard (no transfers, allowance, etc.)\n * - Implements the interfaces required by OpenZeppelin 4.x governance (VoteLocker) stack and exposes\n *   the amount of votes a user has and total votes through standard ERC20 balanceOf/totalSupply\n *   getters.\n * - Removes vote delegation.\n *\n * TODO resolve issues with extending lockup expiry and fromTimestamp\n * TODO vote boost never goes away after expiry ;(\n */\n\ncontract VoteLocker {\n    ///@notice ERC20 parameters\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    struct Stake {\n        bool initialised;\n        uint256 fromTimestamp;\n        uint256 expiry; // Timestamp of lockup expiry\n        uint224 amount; // Amount of staked tokens user has\n    }\n\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint224 votes;\n    }\n\n    /// @notice Maximum lock time\n    uint256 public constant MAX_LOCK_TIME = 4 * 365 * 86400; // 4 years\n    /// @notice Minimum lock time\n    uint256 public constant MIN_LOCK_TIME = 7 * 86400; // 7 days\n    /// @notice Vote boost if locked for maximum duration\n    uint256 public constant MAX_VOTE_MULTIPLE = 4;\n    /// @notice Checkpoints for each user\n    mapping(address => Checkpoint[]) private _checkpoints;\n    /// @notice Stake for each user\n    mapping(address => Stake) private _stakes;\n    /// @notice Global checkpoints\n    Checkpoint[] private _totalSupplyCheckpoints;\n    /// @notice Token used for creating lockups\n    ERC20 public stakingToken;\n\n    constructor(address _stakingToken) {\n        stakingToken = ERC20(_stakingToken);\n        _name = string(\n            bytes.concat(bytes(\"Vote Locked\"), \" \", bytes(stakingToken.name()))\n        );\n        _symbol = string(\n            bytes.concat(bytes(\"vl\"), bytes(stakingToken.symbol()))\n        );\n        _decimals = stakingToken.decimals();\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     */\n    function decimals() public view virtual returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {ERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        if (_totalSupplyCheckpoints.length == 0) {\n            return 0;\n        }\n        return\n            _totalSupplyCheckpoints[_totalSupplyCheckpoints.length - 1].votes;\n    }\n\n    /**\n     * @dev See {ERC20-balanceOf}.\n     */\n    function balanceOf(address _account) public view virtual returns (uint256) {\n        return getVotes(_account);\n    }\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function checkpoints(address account, uint32 pos)\n        public\n        view\n        virtual\n        returns (Checkpoint memory)\n    {\n        return _checkpoints[account][pos];\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function numCheckpoints(address account)\n        public\n        view\n        virtual\n        returns (uint32)\n    {\n        return SafeCast.toUint32(_checkpoints[account].length);\n    }\n\n    /**\n     * @dev Get the address `account` is currently delegating to.\n     */\n    function delegates(address account) public view virtual returns (address) {}\n\n    /**\n     * @dev Gets the current votes balance for `account`\n     */\n    function getVotes(address account) public view returns (uint256) {\n        uint256 pos = _checkpoints[account].length;\n        return pos == 0 ? 0 : _checkpoints[account][pos - 1].votes;\n    }\n\n    /**\n     * @dev Retrieve the number of votes for `account` at the end of `blockNumber`.\n     *\n     * Requirements:\n     *\n     * - `blockNumber` must have been already mined\n     */\n    function getPastVotes(address account, uint256 blockNumber)\n        public\n        view\n        returns (uint256)\n    {\n        require(blockNumber < block.number, \"VoteLocker: block not yet mined\");\n        return _checkpointsLookup(_checkpoints[account], blockNumber);\n    }\n\n    /**\n     * @dev Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances.\n     *\n     * Requirements:\n     *\n     * - `blockNumber` must have been already mined\n     */\n    function getPastTotalSupply(uint256 blockNumber)\n        public\n        view\n        returns (uint256)\n    {\n        require(blockNumber < block.number, \"VoteLocker: block not yet mined\");\n        return _checkpointsLookup(_totalSupplyCheckpoints, blockNumber);\n    }\n\n    /**\n     * @dev Lookup a value in a list of (sorted) checkpoints.\n     */\n    function _checkpointsLookup(Checkpoint[] storage ckpts, uint256 blockNumber)\n        private\n        view\n        returns (uint256)\n    {\n        // We run a binary search to look for the earliest checkpoint taken after `blockNumber`.\n        //\n        // During the loop, the index of the wanted checkpoint remains in the range [low-1, high).\n        // With each iteration, either `low` or `high` is moved towards the middle of the range to maintain the invariant.\n        // - If the middle checkpoint is after `blockNumber`, we look in [low, mid)\n        // - If the middle checkpoint is before or equal to `blockNumber`, we look in [mid+1, high)\n        // Once we reach a single value (when low == high), we've found the right checkpoint at the index high-1, if not\n        // out of bounds (in which case we're looking too far in the past and the result is 0).\n        // Note that if the latest checkpoint available is exactly for `blockNumber`, we end up with an index that is\n        // past the end of the array, so we technically don't find a checkpoint after `blockNumber`, but it works out\n        // the same.\n        uint256 high = ckpts.length;\n        uint256 low = 0;\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (ckpts[mid].fromBlock > blockNumber) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high == 0 ? 0 : ckpts[high - 1].votes;\n    }\n\n    /**\n     * @dev Calculate the votes from a stake and expiry in a checkpoint.\n     */\n    function _calculateVotesFromStake(\n        uint256 amount,\n        uint256 expiry,\n        uint256 fromTimestamp\n    ) private view returns (uint256) {\n        uint256 votes =\n            amount + ((expiry - fromTimestamp) * (MAX_VOTE_MULTIPLE - 1) * amount) /\n            MAX_LOCK_TIME;\n        return votes;\n    }\n\n    /**\n     * @dev Delegate votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) public virtual {\n        revert(\"Delegation is not supported\");\n    }\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        revert(\"Delegation by signature is not supported\");\n    }\n\n    /**\n     * @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1).\n     */\n    function _maxSupply() internal view virtual returns (uint224) {\n        return type(uint224).max;\n    }\n\n    /**\n     * @dev Deposits staking token and mints new tokens according to the MAX_VOTE_MULTIPLE and _expiry parameters.\n     */\n    function deposit(uint256 amount, uint256 expiry) public virtual {\n        require(expiry > block.timestamp, \"Expiry must be in the future\");\n        require(\n            expiry <= block.timestamp + MAX_LOCK_TIME,\n            \"Expiry must be before maximum lockup time\"\n        );\n        require(\n            expiry >= block.timestamp + MIN_LOCK_TIME,\n            \"Expiry must be after minimum lockup time\"\n        );\n\n        // Calculate old votes if user has an initialised stake\n        uint256 oldVotes = _stakes[msg.sender].initialised ? _calculateVotesFromStake(\n            _stakes[msg.sender].amount,\n            _stakes[msg.sender].expiry,\n            _stakes[msg.sender].fromTimestamp\n        ) : 0;\n\n        // Update the stake, amount could be 0 and expiry could be the same\n        _stakes[msg.sender] = Stake({\n            initialised: true,\n            fromTimestamp: block.timestamp,\n            amount: _stakes[msg.sender].amount + SafeCast.toUint224(amount),\n            expiry: expiry\n        });\n\n        // Calculate new votes for updated stake\n        uint256 newVotes = _calculateVotesFromStake(\n            _stakes[msg.sender].amount,\n            _stakes[msg.sender].expiry,\n            block.timestamp\n        );\n\n        if (amount > 0) {\n            // If amount is 0, this might just be an expiry change\n            stakingToken.transferFrom(msg.sender, address(this), amount);\n        }\n\n        _writeCheckpoint(_checkpoints[msg.sender], _add, newVotes - oldVotes);\n\n        // Mint the vote delta\n        _mint(msg.sender, newVotes - oldVotes);\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been increased.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(\n            totalSupply() <= _maxSupply(),\n            \"VoteLocker: total supply risks overflowing votes\"\n        );\n        _writeCheckpoint(_totalSupplyCheckpoints, _add, amount);\n    }\n\n    /**\n     * @dev Withdraw tokens from an expired lockup.\n     */\n    function withdraw(uint256 amount) public {\n        require(amount > 0, \"Amount must be greater than 0\");\n\n        Stake memory existingStake = _stakes[msg.sender];\n        require(existingStake.amount > 0, \"No stake to withdraw\");\n        require(existingStake.expiry <= block.timestamp, \"Lockup not expired\");\n\n        uint256 oldVotes = _calculateVotesFromStake(\n            existingStake.amount,\n            existingStake.expiry,\n            existingStake.fromTimestamp\n        );\n\n        uint256 newVotes = _calculateVotesFromStake(\n            existingStake.amount - SafeCast.toUint224(amount),\n            existingStake.expiry,\n            existingStake.fromTimestamp\n        );\n\n        existingStake.amount -= SafeCast.toUint224(amount);\n\n        if (amount > 0) {\n            // Transfer staking token back to sender\n            stakingToken.transfer(msg.sender, amount);\n        }\n\n        _writeCheckpoint(_checkpoints[msg.sender], _add, oldVotes - newVotes);\n\n        // Burn the vote delta\n        _burn(msg.sender, oldVotes - newVotes);\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been decreased.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        _writeCheckpoint(_totalSupplyCheckpoints, _subtract, amount);\n    }\n\n    /**\n     * @dev Withdraws all tokens from the account.\n     */\n    function _writeCheckpoint(\n        Checkpoint[] storage ckpts,\n        function(uint256, uint256) view returns (uint256) op,\n        uint256 delta\n    ) private returns (uint256 oldWeight, uint256 newWeight) {\n        uint256 pos = ckpts.length;\n        oldWeight = pos == 0 ? 0 : ckpts[pos - 1].votes;\n        newWeight = op(oldWeight, delta);\n\n        if (pos > 0 && ckpts[pos - 1].fromBlock == block.number) {\n            ckpts[pos - 1].votes = SafeCast.toUint224(newWeight);\n        } else {\n            ckpts.push(\n                Checkpoint({\n                    fromBlock: SafeCast.toUint32(block.number),\n                    votes: SafeCast.toUint224(newWeight)\n                })\n            );\n        }\n    }\n\n    /**\n     * @dev Helper addition function for passing to checkpointing functions.\n     */\n    function _add(uint256 a, uint256 b) private pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Helper subtraction function for passing to checkpointing functions.\n     */\n    function _subtract(uint256 a, uint256 b) private pure returns (uint256) {\n        return a - b;\n    }\n}\n",
  "sourceMap": "1230:12020:30:-:0;;;2312:352;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2357:12;:35;;-1:-1:-1;;;;;;2357:35:30;-1:-1:-1;;;;;2357:35:30;;;;;;;;2443:20;;;;;;;;;;;-1:-1:-1;;;2443:20:30;;;;2476:19;;-1:-1:-1;;;2476:19:30;;;;2443:20;;2357:35;2476:17;;:19;;;;;-1:-1:-1;;2476:19:30;;;;;;;2357:35;2476:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2476:19:30;;;;;;;;;;;;:::i;:::-;2430:67;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2402:5;:105;;;;;;;;;;;;:::i;:::-;;2560:11;;;;;;;;;;;;;-1:-1:-1;;;2560:11:30;;;2579:12;;;;;;;;;-1:-1:-1;;;;;2579:12:30;-1:-1:-1;;;;;2579:19:30;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2579:21:30;;;;;;;;;;;;:::i;:::-;2547:55;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2517:7;:95;;;;;;;;;;;;:::i;:::-;;2634:12;;;;;;;;;-1:-1:-1;;;;;2634:12:30;-1:-1:-1;;;;;2634:21:30;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2622:9;:35;;-1:-1:-1;;2622:35:30;;;;;;;;;;;;-1:-1:-1;1230:12020:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1230:12020:30;;;-1:-1:-1;1230:12020:30;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:290:31;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:31;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:31:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:258;513:1;523:113;537:6;534:1;531:13;523:113;;;613:11;;;607:18;594:11;;;587:39;559:2;552:10;523:113;;;654:6;651:1;648:13;645:48;;;689:1;680:6;675:3;671:16;664:27;645:48;;441:258;;;:::o;704:884::-;784:6;837:2;825:9;816:7;812:23;808:32;805:52;;;853:1;850;843:12;805:52;880:16;;-1:-1:-1;;;;;945:14:31;;;942:34;;;972:1;969;962:12;942:34;1010:6;999:9;995:22;985:32;;1055:7;1048:4;1044:2;1040:13;1036:27;1026:55;;1077:1;1074;1067:12;1026:55;1106:2;1100:9;1128:2;1124;1121:10;1118:36;;;1134:18;;:::i;:::-;1209:2;1203:9;1177:2;1263:13;;-1:-1:-1;;1259:22:31;;;1283:2;1255:31;1251:40;1239:53;;;1307:18;;;1327:22;;;1304:46;1301:72;;;1353:18;;:::i;:::-;1393:10;1389:2;1382:22;1428:2;1420:6;1413:18;1468:7;1463:2;1458;1454;1450:11;1446:20;1443:33;1440:53;;;1489:1;1486;1479:12;1440:53;1502:55;1554:2;1549;1541:6;1537:15;1532:2;1528;1524:11;1502:55;:::i;:::-;1576:6;704:884;-1:-1:-1;;;;;;;704:884:31:o;1593:599::-;1858:3;1896:6;1890:13;1912:53;1958:6;1953:3;1946:4;1938:6;1934:17;1912:53;:::i;:::-;-1:-1:-1;;;1987:16:31;;;2012:18;;;2055:13;;2077:65;2055:13;2129:1;2118:13;;2111:4;2099:17;;2077:65;:::i;:::-;2162:20;2184:1;2158:28;;1593:599;-1:-1:-1;;;;1593:599:31:o;2197:466::-;2372:3;2410:6;2404:13;2426:53;2472:6;2467:3;2460:4;2452:6;2448:17;2426:53;:::i;:::-;2542:13;;2501:16;;;;2564:57;2542:13;2501:16;2598:4;2586:17;;2564:57;:::i;:::-;2637:20;;2197:466;-1:-1:-1;;;;2197:466:31:o;2668:273::-;2736:6;2789:2;2777:9;2768:7;2764:23;2760:32;2757:52;;;2805:1;2802;2795:12;2757:52;2837:9;2831:16;2887:4;2880:5;2876:16;2869:5;2866:27;2856:55;;2907:1;2904;2897:12;2946:380;3025:1;3021:12;;;;3068;;;3089:61;;3143:4;3135:6;3131:17;3121:27;;3089:61;3196:2;3188:6;3185:14;3165:18;3162:38;3159:161;;;3242:10;3237:3;3233:20;3230:1;3223:31;3277:4;3274:1;3267:15;3305:4;3302:1;3295:15;3159:161;;2946:380;;;:::o;:::-;1230:12020:30;;;;;;",
  "sourcePath": "contracts/VoteLocker.sol",
  "type": "contract"
}