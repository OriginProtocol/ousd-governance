{"allSourcePaths": {"11": "contracts/OptionalLockupDistributor.sol", "9": "contracts/AbstractLockupDistributor.sol", "7": "/Users/domen-privat/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/IERC20.sol", "8": "/Users/domen-privat/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/cryptography/MerkleProof.sol"}, "bytecode": "61010060405234801561001157600080fd5b50604051610ceb380380610ceb8339810160408190526100309161006e565b6001600160a01b0393841660805260a09290925290911660c05260e0526100b2565b80516001600160a01b038116811461006957600080fd5b919050565b6000806000806080858703121561008457600080fd5b61008d85610052565b9350602085015192506100a260408601610052565b6060959095015193969295505050565b60805160a05160c05160e051610bbc61012f600039600081816092015281816101a90152610415015260008181610146015281816105ba015261067a01526000818160cc0152818161051301526108930152600081816101850152818161023f015281816102cb015281816105e901526106ff0152610bbc6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a4fa47a31161005b578063a4fa47a31461011b578063cb26baeb1461012e578063ee99205c14610141578063fc0c546a1461018057600080fd5b8063083c63231461008d5780632eb4a7ab146100c75780638f6f6966146100ee5780639e34070f146100f8575b600080fd5b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6100f66101a7565b005b61010b610106366004610991565b61036b565b60405190151581526020016100be565b6100f66101293660046109f6565b6103ac565b61010b61013c366004610a51565b61080b565b6101687f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100be565b6101687f000000000000000000000000000000000000000000000000000000000000000081565b7f00000000000000000000000000000000000000000000000000000000000000004310156102275760405162461bcd60e51b815260206004820152602260248201527f43616e206e6f7420796574206275726e207468652072656d61696e696e67204f60448201526123ab60f11b60648201526084015b60405180910390fd5b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561028e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b29190610ac7565b604051630852cd8d60e31b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906342966c6890602401600060405180830381600087803b15801561031757600080fd5b505af115801561032b573d6000803e3d6000fd5b505050507f6c503bd76738aacb466b50f0e1e1a98baeb5c216e2f170a86c048cea6bbb16148160405161036091815260200190565b60405180910390a150565b60008061037a61010084610af6565b9050600061038a61010085610b0a565b60009283526020839052604090922054600190921b9182169091149392505050565b6103b58561036b565b156104135760405162461bcd60e51b815260206004820152602860248201527f4d65726b6c654469737472696275746f723a2044726f7020616c72656164792060448201526731b630b4b6b2b21760c11b606482015260840161021e565b7f000000000000000000000000000000000000000000000000000000000000000043106104945760405162461bcd60e51b815260206004820152602960248201527f43616e206e6f206c6f6e67657220636c61696d2e20436c61696d20706572696f6044820152681908195e1c1a5c995960ba1b606482015260840161021e565b60408051602081018790526bffffffffffffffffffffffff193360601b16918101919091526054810185905260009060740160405160208183030381529060405280519060200120905061053e8484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508591506108c99050565b6105945760405162461bcd60e51b815260206004820152602160248201527f4d65726b6c654469737472696275746f723a20496e76616c69642070726f6f666044820152601760f91b606482015260840161021e565b61059d866108df565b81156106e35760405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018790527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af1158015610632573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106569190610b1e565b50604051637628a37d60e01b815260048101869052602481018390523360448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637628a37d90606401600060405180830381600087803b1580156106c657600080fd5b505af11580156106da573d6000803e3d6000fd5b505050506107cc565b60405163a9059cbb60e01b8152336004820152602481018690527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610750573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107749190610b1e565b6107cc5760405162461bcd60e51b815260206004820152602360248201527f4d65726b6c654469737472696275746f723a205472616e73666572206661696c60448201526232b21760e91b606482015260840161021e565b604051858152339087907f4ec90e965519d92681267467f775ada5bd214aa92c0dc93d90a5e880ce9ed0269060200160405180910390a3505050505050565b6000808685876040516020016108469392919092835260609190911b6bffffffffffffffffffffffff19166020830152603482015260540190565b6040516020818303038152906040528051906020012090506108be8484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508591506108c99050565b979650505050505050565b6000826108d6858461091d565b14949350505050565b60006108ed61010083610af6565b905060006108fd61010084610b0a565b6000928352602083905260409092208054600190931b9092179091555050565b600081815b845181101561098957600085828151811061093f5761093f610b47565b602002602001015190508083116109655760008381526020829052604090209250610976565b600081815260208490526040902092505b508061098181610b5d565b915050610922565b509392505050565b6000602082840312156109a357600080fd5b5035919050565b60008083601f8401126109bc57600080fd5b50813567ffffffffffffffff8111156109d457600080fd5b6020830191508360208260051b85010111156109ef57600080fd5b9250929050565b600080600080600060808688031215610a0e57600080fd5b8535945060208601359350604086013567ffffffffffffffff811115610a3357600080fd5b610a3f888289016109aa565b96999598509660600135949350505050565b600080600080600060808688031215610a6957600080fd5b853594506020860135935060408601356001600160a01b0381168114610a8e57600080fd5b9250606086013567ffffffffffffffff811115610aaa57600080fd5b610ab6888289016109aa565b969995985093965092949392505050565b600060208284031215610ad957600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b600082610b0557610b05610ae0565b500490565b600082610b1957610b19610ae0565b500690565b600060208284031215610b3057600080fd5b81518015158114610b4057600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610b7f57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220ef69f3895c171211a42c23630ee4154812d77bfe69f4184118f8cfbed0bfec9a64736f6c634300080a0033", "bytecodeSha1": "68092d027030208042042ff90a7c897e1acf5390", "coverageMap": {"statements": {"11": {"OptionalLockupDistributor.claim": {"4": [978, 1049], "5": [1059, 1136], "6": [1264, 1394], "7": [1452, 1470], "8": [1518, 1565], "9": [1654, 1787], "10": [1818, 1955], "11": [1976, 2017]}}, "9": {"AbstractLockupDistributor.burnRemainingOGV": {"0": [2364, 2435], "1": [2509, 2557], "2": [2564, 2590]}, "AbstractLockupDistributor.isClaimed": {"3": [1497, 1530]}, "AbstractLockupDistributor.isProofValid": {"12": [2187, 2244]}, "AbstractLockupDistributor.setClaimed": {"14": [1762, 1876]}}, "7": {}, "8": {"MerkleProof.verify": {"13": [1291, 1331]}, "MerkleProof.processProof": {"15": [2060, 2117], "16": [2234, 2291], "17": [1866, 1869], "18": [2325, 2344]}}}, "branches": {"11": {"OptionalLockupDistributor.claim": {"19": [986, 1004, true], "20": [1067, 1090, true], "21": [1285, 1335, true], "22": [1484, 1502, false], "23": [1843, 1886, true]}}, "9": {"AbstractLockupDistributor.burnRemainingOGV": {"24": [2372, 2396, true]}}, "7": {}, "8": {"MerkleProof.processProof": {"25": [1934, 1962, false]}}}}, "dependencies": ["AbstractLockupDistributor", "OpenZeppelin/openzeppelin-contracts@4.6.0/IERC20", "IOGVStaking", "OpenZeppelin/openzeppelin-contracts@4.6.0/MerkleProof"], "offset": [234, 2026], "type": "contract", "abi": [{"inputs": [{"internalType": "address", "name": "_token", "type": "address"}, {"internalType": "bytes32", "name": "_merkleRoot", "type": "bytes32"}, {"internalType": "address", "name": "_stakingContract", "type": "address"}, {"internalType": "uint256", "name": "_endBlock", "type": "uint256"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "uint256", "name": "index", "type": "uint256"}, {"indexed": true, "internalType": "address", "name": "account", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "Claimed", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "OGVBurned", "type": "event"}, {"inputs": [], "name": "burnRemainingOGV", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_index", "type": "uint256"}, {"internalType": "uint256", "name": "_amount", "type": "uint256"}, {"internalType": "bytes32[]", "name": "_merkleProof", "type": "bytes32[]"}, {"internalType": "uint256", "name": "_stakeDuration", "type": "uint256"}], "name": "claim", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "endBlock", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_index", "type": "uint256"}], "name": "isClaimed", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_index", "type": "uint256"}, {"internalType": "uint256", "name": "_amount", "type": "uint256"}, {"internalType": "address", "name": "_account", "type": "address"}, {"internalType": "bytes32[]", "name": "_merkleProof", "type": "bytes32[]"}], "name": "isProofValid", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "merkleRoot", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "stakingContract", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "token", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}], "ast": {"absolutePath": "contracts/OptionalLockupDistributor.sol", "exportedSymbols": {"AbstractLockupDistributor": [482], "AddressUpgradeable": [1755], "ContextUpgradeable": [1512], "ERC20BurnableUpgradeable": [546], "ERC20Upgradeable": [1470], "IERC20": [624], "IERC20MetadataUpgradeable": [1858], "IERC20Upgradeable": [1833], "IOGVStaking": [163], "Initializable": [859], "MerkleProof": [717], "OptionalLockupDistributor": [283]}, "id": 284, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 152, "literals": ["solidity", "^", "0.8", ".4"], "nodeType": "PragmaDirective", "src": "33:23:11"}, {"absolutePath": "contracts/AbstractLockupDistributor.sol", "file": "./AbstractLockupDistributor.sol", "id": 153, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 284, "sourceUnit": 483, "src": "58:41:11", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [], "canonicalName": "IOGVStaking", "contractDependencies": [], "contractKind": "interface", "fullyImplemented": false, "id": 163, "linearizedBaseContracts": [163], "name": "IOGVStaking", "nameLocation": "111:11:11", "nodeType": "ContractDefinition", "nodes": [{"functionSelector": "7628a37d", "id": 162, "implemented": false, "kind": "function", "modifiers": [], "name": "stake", "nameLocation": "138:5:11", "nodeType": "FunctionDefinition", "parameters": {"id": 160, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 155, "mutability": "mutable", "name": "amount", "nameLocation": "161:6:11", "nodeType": "VariableDeclaration", "scope": 162, "src": "153:14:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 154, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "153:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 157, "mutability": "mutable", "name": "end", "nameLocation": "185:3:11", "nodeType": "VariableDeclaration", "scope": 162, "src": "177:11:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 156, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "177:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 159, "mutability": "mutable", "name": "_account", "nameLocation": "206:8:11", "nodeType": "VariableDeclaration", "scope": 162, "src": "198:16:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 158, "name": "address", "nodeType": "ElementaryTypeName", "src": "198:7:11", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "143:77:11"}, "returnParameters": {"id": 161, "nodeType": "ParameterList", "parameters": [], "src": "229:0:11"}, "scope": 163, "src": "129:101:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}], "scope": 284, "src": "101:131:11", "usedErrors": []}, {"abstract": false, "baseContracts": [{"baseName": {"id": 164, "name": "AbstractLockupDistributor", "nodeType": "IdentifierPath", "referencedDeclaration": 482, "src": "272:25:11"}, "id": 165, "nodeType": "InheritanceSpecifier", "src": "272:25:11"}], "canonicalName": "OptionalLockupDistributor", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 283, "linearizedBaseContracts": [283, 482], "name": "OptionalLockupDistributor", "nameLocation": "243:25:11", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 182, "nodeType": "Block", "src": "513:2:11", "statements": []}, "id": 183, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"id": 176, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 167, "src": "463:6:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 177, "name": "_merkleRoot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 169, "src": "471:11:11", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 178, "name": "_stakingContract", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 171, "src": "484:16:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 179, "name": "_endBlock", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 173, "src": "502:9:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 180, "kind": "baseConstructorSpecifier", "modifierName": {"id": 175, "name": "AbstractLockupDistributor", "nodeType": "IdentifierPath", "referencedDeclaration": 482, "src": "437:25:11"}, "nodeType": "ModifierInvocation", "src": "437:75:11"}], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 174, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 167, "mutability": "mutable", "name": "_token", "nameLocation": "334:6:11", "nodeType": "VariableDeclaration", "scope": 183, "src": "326:14:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 166, "name": "address", "nodeType": "ElementaryTypeName", "src": "326:7:11", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 169, "mutability": "mutable", "name": "_merkleRoot", "nameLocation": "358:11:11", "nodeType": "VariableDeclaration", "scope": 183, "src": "350:19:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 168, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "350:7:11", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 171, "mutability": "mutable", "name": "_stakingContract", "nameLocation": "387:16:11", "nodeType": "VariableDeclaration", "scope": 183, "src": "379:24:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 170, "name": "address", "nodeType": "ElementaryTypeName", "src": "379:7:11", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 173, "mutability": "mutable", "name": "_endBlock", "nameLocation": "421:9:11", "nodeType": "VariableDeclaration", "scope": 183, "src": "413:17:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 172, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "413:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "316:120:11"}, "returnParameters": {"id": 181, "nodeType": "ParameterList", "parameters": [], "src": "513:0:11"}, "scope": 283, "src": "305:210:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 281, "nodeType": "Block", "src": "968:1056:11", "statements": [{"expression": {"arguments": [{"id": 200, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "986:18:11", "subExpression": {"arguments": [{"id": 198, "name": "_index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 186, "src": "997:6:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 197, "name": "isClaimed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 380, "src": "987:9:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$", "typeString": "function (uint256) view returns (bool)"}}, "id": 199, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "987:17:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4d65726b6c654469737472696275746f723a2044726f7020616c726561647920636c61696d65642e", "id": 201, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1006:42:11", "typeDescriptions": {"typeIdentifier": "t_stringliteral_3dd4fedd52cf57495a0383b3611a398031abfe6e8cda07bccd9f5f795a45333c", "typeString": "literal_string \"MerkleDistributor: Drop already claimed.\""}, "value": "MerkleDistributor: Drop already claimed."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_3dd4fedd52cf57495a0383b3611a398031abfe6e8cda07bccd9f5f795a45333c", "typeString": "literal_string \"MerkleDistributor: Drop already claimed.\""}], "id": 196, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "978:7:11", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 202, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "978:71:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 203, "nodeType": "ExpressionStatement", "src": "978:71:11"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 208, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 205, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "1067:5:11", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 206, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "1067:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 207, "name": "endBlock", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 308, "src": "1082:8:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1067:23:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "43616e206e6f206c6f6e67657220636c61696d2e20436c61696d20706572696f642065787069726564", "id": 209, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1092:43:11", "typeDescriptions": {"typeIdentifier": "t_stringliteral_dc1ada7340804d5cbb62c7c3dc431c87b0d7f1462ef49ceb3f277cd6a4c0cd27", "typeString": "literal_string \"Can no longer claim. Claim period expired\""}, "value": "Can no longer claim. Claim period expired"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_dc1ada7340804d5cbb62c7c3dc431c87b0d7f1462ef49ceb3f277cd6a4c0cd27", "typeString": "literal_string \"Can no longer claim. Claim period expired\""}], "id": 204, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1059:7:11", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 210, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1059:77:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 211, "nodeType": "ExpressionStatement", "src": "1059:77:11"}, {"assignments": [213], "declarations": [{"constant": false, "id": 213, "mutability": "mutable", "name": "node", "nameLocation": "1191:4:11", "nodeType": "VariableDeclaration", "scope": 281, "src": "1183:12:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 212, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1183:7:11", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 223, "initialValue": {"arguments": [{"arguments": [{"id": 217, "name": "_index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 186, "src": "1225:6:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 218, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1233:3:11", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 219, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1233:10:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 220, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 188, "src": "1245:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 215, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "1208:3:11", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 216, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodePacked", "nodeType": "MemberAccess", "src": "1208:16:11", "typeDescriptions": {"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 221, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1208:45:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 214, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "1198:9:11", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 222, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1198:56:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "1183:71:11"}, {"expression": {"arguments": [{"arguments": [{"id": 227, "name": "_merkleProof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 191, "src": "1304:12:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}}, {"id": 228, "name": "merkleRoot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 304, "src": "1318:10:11", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 229, "name": "node", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 213, "src": "1330:4:11", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 225, "name": "MerkleProof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 717, "src": "1285:11:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_MerkleProof_$717_$", "typeString": "type(library MerkleProof)"}}, "id": 226, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "verify", "nodeType": "MemberAccess", "referencedDeclaration": 648, "src": "1285:18:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$", "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}}, "id": 230, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1285:50:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4d65726b6c654469737472696275746f723a20496e76616c69642070726f6f662e", "id": 231, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1349:35:11", "typeDescriptions": {"typeIdentifier": "t_stringliteral_6afb067511959dbd4bc272e5aed6b4a5d429e99f0f504267fbd07e02406282d2", "typeString": "literal_string \"MerkleDistributor: Invalid proof.\""}, "value": "MerkleDistributor: Invalid proof."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_6afb067511959dbd4bc272e5aed6b4a5d429e99f0f504267fbd07e02406282d2", "typeString": "literal_string \"MerkleDistributor: Invalid proof.\""}], "id": 224, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1264:7:11", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 232, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1264:130:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 233, "nodeType": "ExpressionStatement", "src": "1264:130:11"}, {"expression": {"arguments": [{"id": 235, "name": "_index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 186, "src": "1463:6:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 234, "name": "setClaimed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 412, "src": "1452:10:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 236, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1452:18:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 237, "nodeType": "ExpressionStatement", "src": "1452:18:11"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 240, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 238, "name": "_stakeDuration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 193, "src": "1484:14:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 239, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1501:1:11", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "1484:18:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 272, "nodeType": "Block", "src": "1804:162:11", "statements": [{"expression": {"arguments": [{"arguments": [{"expression": {"id": 265, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1866:3:11", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 266, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1866:10:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 267, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 188, "src": "1878:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 262, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 302, "src": "1850:5:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 261, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 624, "src": "1843:6:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$624_$", "typeString": "type(contract IERC20)"}}, "id": 263, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1843:13:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$624", "typeString": "contract IERC20"}}, "id": 264, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transfer", "nodeType": "MemberAccess", "referencedDeclaration": 591, "src": "1843:22:11", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) external returns (bool)"}}, "id": 268, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1843:43:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4d65726b6c654469737472696275746f723a205472616e73666572206661696c65642e", "id": 269, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1904:37:11", "typeDescriptions": {"typeIdentifier": "t_stringliteral_783c2b0153f1de5bc91d20a6a00fab231491ffa4eb21c15a6c6746946abb735e", "typeString": "literal_string \"MerkleDistributor: Transfer failed.\""}, "value": "MerkleDistributor: Transfer failed."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_783c2b0153f1de5bc91d20a6a00fab231491ffa4eb21c15a6c6746946abb735e", "typeString": "literal_string \"MerkleDistributor: Transfer failed.\""}], "id": 260, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1818:7:11", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 270, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1818:137:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 271, "nodeType": "ExpressionStatement", "src": "1818:137:11"}]}, "id": 273, "nodeType": "IfStatement", "src": "1480:486:11", "trueBody": {"id": 259, "nodeType": "Block", "src": "1504:294:11", "statements": [{"expression": {"arguments": [{"id": 245, "name": "stakingContract", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 306, "src": "1540:15:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 246, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 188, "src": "1557:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 242, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 302, "src": "1525:5:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 241, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 624, "src": "1518:6:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$624_$", "typeString": "type(contract IERC20)"}}, "id": 243, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1518:13:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$624", "typeString": "contract IERC20"}}, "id": 244, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "approve", "nodeType": "MemberAccess", "referencedDeclaration": 611, "src": "1518:21:11", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) external returns (bool)"}}, "id": 247, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1518:47:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 248, "nodeType": "ExpressionStatement", "src": "1518:47:11"}, {"expression": {"arguments": [{"id": 253, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 188, "src": "1706:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 254, "name": "_stakeDuration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 193, "src": "1731:14:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 255, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1763:3:11", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 256, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1763:10:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [{"id": 250, "name": "stakingContract", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 306, "src": "1666:15:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 249, "name": "IOGVStaking", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 163, "src": "1654:11:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IOGVStaking_$163_$", "typeString": "type(contract IOGVStaking)"}}, "id": 251, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1654:28:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IOGVStaking_$163", "typeString": "contract IOGVStaking"}}, "id": 252, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "stake", "nodeType": "MemberAccess", "referencedDeclaration": 162, "src": "1654:34:11", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$", "typeString": "function (uint256,uint256,address) external"}}, "id": 257, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1654:133:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 258, "nodeType": "ExpressionStatement", "src": "1654:133:11"}]}}, {"eventCall": {"arguments": [{"id": 275, "name": "_index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 186, "src": "1989:6:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 276, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1997:3:11", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 277, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1997:10:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 278, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 188, "src": "2009:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 274, "name": "Claimed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 296, "src": "1981:7:11", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (uint256,address,uint256)"}}, "id": 279, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1981:36:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 280, "nodeType": "EmitStatement", "src": "1976:41:11"}]}, "documentation": {"id": 184, "nodeType": "StructuredDocumentation", "src": "521:290:11", "text": " @dev Execute a claim using a merkle proof with optional stake in the staking contract.\n @param _index Index in the tree\n @param _amount Amount eligiblle to claim\n @param _merkleProof The proof\n @param _stakeDuration Duration of the stake to create"}, "functionSelector": "a4fa47a3", "id": 282, "implemented": true, "kind": "function", "modifiers": [], "name": "claim", "nameLocation": "825:5:11", "nodeType": "FunctionDefinition", "parameters": {"id": 194, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 186, "mutability": "mutable", "name": "_index", "nameLocation": "848:6:11", "nodeType": "VariableDeclaration", "scope": 282, "src": "840:14:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 185, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "840:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 188, "mutability": "mutable", "name": "_amount", "nameLocation": "872:7:11", "nodeType": "VariableDeclaration", "scope": 282, "src": "864:15:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 187, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "864:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 191, "mutability": "mutable", "name": "_merkleProof", "nameLocation": "908:12:11", "nodeType": "VariableDeclaration", "scope": 282, "src": "889:31:11", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[]"}, "typeName": {"baseType": {"id": 189, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "889:7:11", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 190, "nodeType": "ArrayTypeName", "src": "889:9:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr", "typeString": "bytes32[]"}}, "visibility": "internal"}, {"constant": false, "id": 193, "mutability": "mutable", "name": "_stakeDuration", "nameLocation": "938:14:11", "nodeType": "VariableDeclaration", "scope": 282, "src": "930:22:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 192, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "930:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "830:128:11"}, "returnParameters": {"id": 195, "nodeType": "ParameterList", "parameters": [], "src": "968:0:11"}, "scope": 283, "src": "816:1208:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}], "scope": 284, "src": "234:1792:11", "usedErrors": []}], "src": "33:1994:11"}, "compiler": {"version": "0.8.10+commit.fc410830", "evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}}, "contractName": "OptionalLockupDistributor", "deployedBytecode": "608060405234801561001057600080fd5b50600436106100885760003560e01c8063a4fa47a31161005b578063a4fa47a31461011b578063cb26baeb1461012e578063ee99205c14610141578063fc0c546a1461018057600080fd5b8063083c63231461008d5780632eb4a7ab146100c75780638f6f6966146100ee5780639e34070f146100f8575b600080fd5b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6100f66101a7565b005b61010b610106366004610991565b61036b565b60405190151581526020016100be565b6100f66101293660046109f6565b6103ac565b61010b61013c366004610a51565b61080b565b6101687f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100be565b6101687f000000000000000000000000000000000000000000000000000000000000000081565b7f00000000000000000000000000000000000000000000000000000000000000004310156102275760405162461bcd60e51b815260206004820152602260248201527f43616e206e6f7420796574206275726e207468652072656d61696e696e67204f60448201526123ab60f11b60648201526084015b60405180910390fd5b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561028e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b29190610ac7565b604051630852cd8d60e31b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906342966c6890602401600060405180830381600087803b15801561031757600080fd5b505af115801561032b573d6000803e3d6000fd5b505050507f6c503bd76738aacb466b50f0e1e1a98baeb5c216e2f170a86c048cea6bbb16148160405161036091815260200190565b60405180910390a150565b60008061037a61010084610af6565b9050600061038a61010085610b0a565b60009283526020839052604090922054600190921b9182169091149392505050565b6103b58561036b565b156104135760405162461bcd60e51b815260206004820152602860248201527f4d65726b6c654469737472696275746f723a2044726f7020616c72656164792060448201526731b630b4b6b2b21760c11b606482015260840161021e565b7f000000000000000000000000000000000000000000000000000000000000000043106104945760405162461bcd60e51b815260206004820152602960248201527f43616e206e6f206c6f6e67657220636c61696d2e20436c61696d20706572696f6044820152681908195e1c1a5c995960ba1b606482015260840161021e565b60408051602081018790526bffffffffffffffffffffffff193360601b16918101919091526054810185905260009060740160405160208183030381529060405280519060200120905061053e8484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508591506108c99050565b6105945760405162461bcd60e51b815260206004820152602160248201527f4d65726b6c654469737472696275746f723a20496e76616c69642070726f6f666044820152601760f91b606482015260840161021e565b61059d866108df565b81156106e35760405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018790527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af1158015610632573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106569190610b1e565b50604051637628a37d60e01b815260048101869052602481018390523360448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637628a37d90606401600060405180830381600087803b1580156106c657600080fd5b505af11580156106da573d6000803e3d6000fd5b505050506107cc565b60405163a9059cbb60e01b8152336004820152602481018690527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610750573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107749190610b1e565b6107cc5760405162461bcd60e51b815260206004820152602360248201527f4d65726b6c654469737472696275746f723a205472616e73666572206661696c60448201526232b21760e91b606482015260840161021e565b604051858152339087907f4ec90e965519d92681267467f775ada5bd214aa92c0dc93d90a5e880ce9ed0269060200160405180910390a3505050505050565b6000808685876040516020016108469392919092835260609190911b6bffffffffffffffffffffffff19166020830152603482015260540190565b6040516020818303038152906040528051906020012090506108be8484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508591506108c99050565b979650505050505050565b6000826108d6858461091d565b14949350505050565b60006108ed61010083610af6565b905060006108fd61010084610b0a565b6000928352602083905260409092208054600190931b9092179091555050565b600081815b845181101561098957600085828151811061093f5761093f610b47565b602002602001015190508083116109655760008381526020829052604090209250610976565b600081815260208490526040902092505b508061098181610b5d565b915050610922565b509392505050565b6000602082840312156109a357600080fd5b5035919050565b60008083601f8401126109bc57600080fd5b50813567ffffffffffffffff8111156109d457600080fd5b6020830191508360208260051b85010111156109ef57600080fd5b9250929050565b600080600080600060808688031215610a0e57600080fd5b8535945060208601359350604086013567ffffffffffffffff811115610a3357600080fd5b610a3f888289016109aa565b96999598509660600135949350505050565b600080600080600060808688031215610a6957600080fd5b853594506020860135935060408601356001600160a01b0381168114610a8e57600080fd5b9250606086013567ffffffffffffffff811115610aaa57600080fd5b610ab6888289016109aa565b969995985093965092949392505050565b600060208284031215610ad957600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b600082610b0557610b05610ae0565b500490565b600082610b1957610b19610ae0565b500690565b600060208284031215610b3057600080fd5b81518015158114610b4057600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610b7f57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220ef69f3895c171211a42c23630ee4154812d77bfe69f4184118f8cfbed0bfec9a64736f6c634300080a0033", "deployedSourceMap": "234:1792:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;735:33:9;;;;;;;;160:25:12;;;148:2;133:18;735:33:9;;;;;;;;648:35;;;;;2320:278;;;:::i;:::-;;1218:319;;;;;;:::i;:::-;;:::i;:::-;;;728:14:12;;721:22;703:41;;691:2;676:18;1218:319:9;563:187:12;816:1208:11;;;;;;:::i;:::-;;:::i;1889:362:9:-;;;;;;:::i;:::-;;:::i;689:40::-;;;;;;;;-1:-1:-1;;;;;2691:32:12;;;2673:51;;2661:2;2646:18;689:40:9;2527:203:12;612:30:9;;;;;2320:278;2388:8;2372:12;:24;;2364:71;;;;-1:-1:-1;;;2364:71:9;;2937:2:12;2364:71:9;;;2919:21:12;2976:2;2956:18;;;2949:30;3015:34;2995:18;;;2988:62;-1:-1:-1;;;3066:18:12;;;3059:32;3108:19;;2364:71:9;;;;;;;;;2463:38;;-1:-1:-1;;;2463:38:9;;2495:4;2463:38;;;2673:51:12;2442:18:9;;2470:5;-1:-1:-1;;;;;2463:23:9;;;;2646:18:12;;2463:38:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2509:48;;-1:-1:-1;;;2509:48:9;;;;;160:25:12;;;2442:59:9;;-1:-1:-1;2534:5:9;-1:-1:-1;;;;;2509:36:9;;;;133:18:12;;2509:48:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2569:21;2579:10;2569:21;;;;160:25:12;;148:2;133:18;;14:177;2569:21:9;;;;;;;;2357:241;2320:278::o;1218:319::-;1274:4;;1317:12;1326:3;1317:6;:12;:::i;:::-;1290:39;-1:-1:-1;1339:23:9;1365:12;1374:3;1365:6;:12;:::i;:::-;1387:19;1409:31;;;;;;;;;;;;1466:1;:20;;;1504:18;;;:26;;;;1218:319;-1:-1:-1;;;1218:319:9:o;816:1208:11:-;987:17;997:6;987:9;:17::i;:::-;986:18;978:71;;;;-1:-1:-1;;;978:71:11;;3903:2:12;978:71:11;;;3885:21:12;3942:2;3922:18;;;3915:30;3981:34;3961:18;;;3954:62;-1:-1:-1;;;4032:18:12;;;4025:38;4080:19;;978:71:11;3701:404:12;978:71:11;1082:8;1067:12;:23;1059:77;;;;-1:-1:-1;;;1059:77:11;;4312:2:12;1059:77:11;;;4294:21:12;4351:2;4331:18;;;4324:30;4390:34;4370:18;;;4363:62;-1:-1:-1;;;4441:18:12;;;4434:39;4490:19;;1059:77:11;4110:405:12;1059:77:11;1208:45;;;;;;4705:19:12;;;-1:-1:-1;;1233:10:11;4762:2:12;4758:15;4754:53;4740:12;;;4733:75;;;;4824:12;;;4817:28;;;1183:12:11;;4861::12;;1208:45:11;;;;;;;;;;;;1198:56;;;;;;1183:71;;1285:50;1304:12;;1285:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1318:10:11;;-1:-1:-1;1330:4:11;;-1:-1:-1;1285:18:11;;-1:-1:-1;1285:50:11:i;:::-;1264:130;;;;-1:-1:-1;;;1264:130:11;;5086:2:12;1264:130:11;;;5068:21:12;5125:2;5105:18;;;5098:30;5164:34;5144:18;;;5137:62;-1:-1:-1;;;5215:18:12;;;5208:31;5256:19;;1264:130:11;4884:397:12;1264:130:11;1452:18;1463:6;1452:10;:18::i;:::-;1484;;1480:486;;1518:47;;-1:-1:-1;;;1518:47:11;;-1:-1:-1;;;;;1540:15:11;5478:32:12;;1518:47:11;;;5460:51:12;5527:18;;;5520:34;;;1525:5:11;1518:21;;;;5433:18:12;;1518:47:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1654:133:11;;-1:-1:-1;;;1654:133:11;;;;;6049:25:12;;;6090:18;;;6083:34;;;1763:10:11;6133:18:12;;;6126:60;1666:15:11;-1:-1:-1;;;;;1654:34:11;;;;6022:18:12;;1654:133:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1480:486;;;1843:43;;-1:-1:-1;;;1843:43:11;;1866:10;1843:43;;;5460:51:12;5527:18;;;5520:34;;;1850:5:11;-1:-1:-1;;;;;1843:22:11;;;;5433:18:12;;1843:43:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1818:137;;;;-1:-1:-1;;;1818:137:11;;6399:2:12;1818:137:11;;;6381:21:12;6438:2;6418:18;;;6411:30;6477:34;6457:18;;;6450:62;-1:-1:-1;;;6528:18:12;;;6521:33;6571:19;;1818:137:11;6197:399:12;1818:137:11;1981:36;;160:25:12;;;1997:10:11;;1989:6;;1981:36;;148:2:12;133:18;1981:36:11;;;;;;;968:1056;816:1208;;;;;:::o;1889:362:9:-;2056:4;2108:12;2150:6;2158:8;2168:7;2133:43;;;;;;;;;4705:19:12;;;4762:2;4758:15;;;;-1:-1:-1;;4754:53:12;4749:2;4740:12;;4733:75;4833:2;4824:12;;4817:28;4870:2;4861:12;;4520:359;2133:43:9;;;;;;;;;;;;;2123:54;;;;;;2108:69;;2194:50;2213:12;;2194:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2227:10:9;;-1:-1:-1;2239:4:9;;-1:-1:-1;2194:18:9;;-1:-1:-1;2194:50:9:i;:::-;2187:57;1889:362;-1:-1:-1;;;;;;;1889:362:9:o;1154:184:8:-;1275:4;1327;1298:25;1311:5;1318:4;1298:12;:25::i;:::-;:33;;1154:184;-1:-1:-1;;;;1154:184:8:o;1610:273:9:-;1665:24;1692:12;1701:3;1692:6;:12;:::i;:::-;1665:39;-1:-1:-1;1714:23:9;1740:12;1749:3;1740:6;:12;:::i;:::-;1808:13;:31;;;;;;;;;;;;;1855:1;:20;;;1808:68;;;1762:114;;;-1:-1:-1;;1610:273:9:o;1689:662:8:-;1772:7;1814:4;1772:7;1828:488;1852:5;:12;1848:1;:16;1828:488;;;1885:20;1908:5;1914:1;1908:8;;;;;;;;:::i;:::-;;;;;;;1885:31;;1950:12;1934;:28;1930:376;;2425:13;2473:15;;;2508:4;2501:15;;;2554:4;2538:21;;2060:57;;1930:376;;;2425:13;2473:15;;;2508:4;2501:15;;;2554:4;2538:21;;2234:57;;1930:376;-1:-1:-1;1866:3:8;;;;:::i;:::-;;;;1828:488;;;-1:-1:-1;2332:12:8;1689:662;-1:-1:-1;;;1689:662:8:o;378:180:12:-;437:6;490:2;478:9;469:7;465:23;461:32;458:52;;;506:1;503;496:12;458:52;-1:-1:-1;529:23:12;;378:180;-1:-1:-1;378:180:12:o;755:367::-;818:8;828:6;882:3;875:4;867:6;863:17;859:27;849:55;;900:1;897;890:12;849:55;-1:-1:-1;923:20:12;;966:18;955:30;;952:50;;;998:1;995;988:12;952:50;1035:4;1027:6;1023:17;1011:29;;1095:3;1088:4;1078:6;1075:1;1071:14;1063:6;1059:27;1055:38;1052:47;1049:67;;;1112:1;1109;1102:12;1049:67;755:367;;;;;:::o;1127:642::-;1240:6;1248;1256;1264;1272;1325:3;1313:9;1304:7;1300:23;1296:33;1293:53;;;1342:1;1339;1332:12;1293:53;1378:9;1365:23;1355:33;;1435:2;1424:9;1420:18;1407:32;1397:42;;1490:2;1479:9;1475:18;1462:32;1517:18;1509:6;1506:30;1503:50;;;1549:1;1546;1539:12;1503:50;1588:70;1650:7;1641:6;1630:9;1626:22;1588:70;:::i;:::-;1127:642;;;;-1:-1:-1;1677:8:12;1759:2;1744:18;1731:32;;1127:642;-1:-1:-1;;;;1127:642:12:o;1774:748::-;1887:6;1895;1903;1911;1919;1972:3;1960:9;1951:7;1947:23;1943:33;1940:53;;;1989:1;1986;1979:12;1940:53;2012:23;;;-1:-1:-1;2082:2:12;2067:18;;2054:32;;-1:-1:-1;2136:2:12;2121:18;;2108:32;-1:-1:-1;;;;;2169:31:12;;2159:42;;2149:70;;2215:1;2212;2205:12;2149:70;2238:5;-1:-1:-1;2294:2:12;2279:18;;2266:32;2321:18;2310:30;;2307:50;;;2353:1;2350;2343:12;2307:50;2392:70;2454:7;2445:6;2434:9;2430:22;2392:70;:::i;:::-;1774:748;;;;-1:-1:-1;1774:748:12;;-1:-1:-1;2481:8:12;;2366:96;1774:748;-1:-1:-1;;;1774:748:12:o;3138:184::-;3208:6;3261:2;3249:9;3240:7;3236:23;3232:32;3229:52;;;3277:1;3274;3267:12;3229:52;-1:-1:-1;3300:16:12;;3138:184;-1:-1:-1;3138:184:12:o;3327:127::-;3388:10;3383:3;3379:20;3376:1;3369:31;3419:4;3416:1;3409:15;3443:4;3440:1;3433:15;3459:120;3499:1;3525;3515:35;;3530:18;;:::i;:::-;-1:-1:-1;3564:9:12;;3459:120::o;3584:112::-;3616:1;3642;3632:35;;3647:18;;:::i;:::-;-1:-1:-1;3681:9:12;;3584:112::o;5565:277::-;5632:6;5685:2;5673:9;5664:7;5660:23;5656:32;5653:52;;;5701:1;5698;5691:12;5653:52;5733:9;5727:16;5786:5;5779:13;5772:21;5765:5;5762:32;5752:60;;5808:1;5805;5798:12;5752:60;5831:5;5565:277;-1:-1:-1;;;5565:277:12:o;6601:127::-;6662:10;6657:3;6653:20;6650:1;6643:31;6693:4;6690:1;6683:15;6717:4;6714:1;6707:15;6733:232;6772:3;-1:-1:-1;;6793:17:12;;6790:140;;;6852:10;6847:3;6843:20;6840:1;6833:31;6887:4;6884:1;6877:15;6915:4;6912:1;6905:15;6790:140;-1:-1:-1;6957:1:12;6946:13;;6733:232::o", "language": "Solidity", "natspec": {"methods": {"burnRemainingOGV()": {"details": "burn all the remaining OGV balance"}, "claim(uint256,uint256,bytes32[],uint256)": {"details": "Execute a claim using a merkle proof with optional stake in the staking contract.", "params": {"_amount": "Amount eligiblle to claim", "_index": "Index in the tree", "_merkleProof": "The proof", "_stakeDuration": "Duration of the stake to create"}}, "isClaimed(uint256)": {"details": "@param _index Index in the tree"}}, "kind": "dev", "version": 1}, "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA4FA47A3 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA4FA47A3 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0xCB26BAEB EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0xEE99205C EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x83C6323 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x8F6F6966 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x9E34070F EQ PUSH2 0xF8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB4 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB4 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xF6 PUSH2 0x1A7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10B PUSH2 0x106 CALLDATASIZE PUSH1 0x4 PUSH2 0x991 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBE JUMP JUMPDEST PUSH2 0xF6 PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x9F6 JUMP JUMPDEST PUSH2 0x3AC JUMP JUMPDEST PUSH2 0x10B PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0xA51 JUMP JUMPDEST PUSH2 0x80B JUMP JUMPDEST PUSH2 0x168 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBE JUMP JUMPDEST PUSH2 0x168 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 NUMBER LT ISZERO PUSH2 0x227 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206E6F7420796574206275726E207468652072656D61696E696E67204F PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x23AB PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x28E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0xAC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x42966C68 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x32B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x6C503BD76738AACB466B50F0E1E1A98BAEB5C216E2F170A86C048CEA6BBB1614 DUP2 PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x37A PUSH2 0x100 DUP5 PUSH2 0xAF6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x38A PUSH2 0x100 DUP6 PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SLOAD PUSH1 0x1 SWAP1 SWAP3 SHL SWAP2 DUP3 AND SWAP1 SWAP2 EQ SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3B5 DUP6 PUSH2 0x36B JUMP JUMPDEST ISZERO PUSH2 0x413 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726B6C654469737472696275746F723A2044726F7020616C726561647920 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x31B630B4B6B2B217 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x21E JUMP JUMPDEST PUSH32 0x0 NUMBER LT PUSH2 0x494 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206E6F206C6F6E67657220636C61696D2E20436C61696D20706572696F PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1908195E1C1A5C9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x54 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x74 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x53E DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH32 0x0 SWAP3 POP DUP6 SWAP2 POP PUSH2 0x8C9 SWAP1 POP JUMP JUMPDEST PUSH2 0x594 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726B6C654469737472696275746F723A20496E76616C69642070726F6F66 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x21E JUMP JUMPDEST PUSH2 0x59D DUP7 PUSH2 0x8DF JUMP JUMPDEST DUP2 ISZERO PUSH2 0x6E3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x632 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x656 SWAP2 SWAP1 PUSH2 0xB1E JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x7628A37D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE CALLER PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x7628A37D SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x750 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x774 SWAP2 SWAP1 PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x7CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726B6C654469737472696275746F723A205472616E73666572206661696C PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x32B217 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE CALLER SWAP1 DUP8 SWAP1 PUSH32 0x4EC90E965519D92681267467F775ADA5BD214AA92C0DC93D90A5E880CE9ED026 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x846 SWAP4 SWAP3 SWAP2 SWAP1 SWAP3 DUP4 MSTORE PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x54 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x8BE DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH32 0x0 SWAP3 POP DUP6 SWAP2 POP PUSH2 0x8C9 SWAP1 POP JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x8D6 DUP6 DUP5 PUSH2 0x91D JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8ED PUSH2 0x100 DUP4 PUSH2 0xAF6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8FD PUSH2 0x100 DUP5 PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP4 SHL SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x989 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x93F JUMPI PUSH2 0x93F PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x965 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP PUSH2 0x976 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x981 DUP2 PUSH2 0xB5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x922 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x9BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x9EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xA0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA3F DUP9 DUP3 DUP10 ADD PUSH2 0x9AA JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP7 PUSH1 0x60 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xA69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB6 DUP9 DUP3 DUP10 ADD PUSH2 0x9AA JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xB05 JUMPI PUSH2 0xB05 PUSH2 0xAE0 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xB19 JUMPI PUSH2 0xB19 PUSH2 0xAE0 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xB7F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF PUSH10 0xF3895C171211A42C2363 0xE 0xE4 ISZERO BASEFEE SLT 0xD7 PUSH28 0xFE69F4184118F8CFBED0BFEC9A64736F6C634300080A003300000000 ", "sha1": "89dbb017b73c77eb0605c458744022e6b56e8f39", "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\nimport \"./AbstractLockupDistributor.sol\";\n\ninterface IOGVStaking {\n    function stake(\n        uint256 amount,\n        uint256 end,\n        address _account\n    ) external;\n}\n\ncontract OptionalLockupDistributor is AbstractLockupDistributor {\n\n    constructor(\n        address _token,\n        bytes32 _merkleRoot,\n        address _stakingContract,\n        uint256 _endBlock\n    ) AbstractLockupDistributor(_token, _merkleRoot, _stakingContract, _endBlock) {}\n\n    /**\n     * @dev Execute a claim using a merkle proof with optional stake in the staking contract.\n     * @param _index Index in the tree\n     * @param _amount Amount eligiblle to claim\n     * @param _merkleProof The proof\n     * @param _stakeDuration Duration of the stake to create\n     */\n    function claim(\n        uint256 _index,\n        uint256 _amount,\n        bytes32[] calldata _merkleProof,\n        uint256 _stakeDuration\n    ) external {\n        require(!isClaimed(_index), \"MerkleDistributor: Drop already claimed.\");\n        require(block.number < endBlock, \"Can no longer claim. Claim period expired\");\n\n        // Verify the merkle proof.\n        bytes32 node = keccak256(abi.encodePacked(_index, msg.sender, _amount));\n        require(\n            MerkleProof.verify(_merkleProof, merkleRoot, node),\n            \"MerkleDistributor: Invalid proof.\"\n        );\n\n        // Mark it claimed and send the token.\n        setClaimed(_index);\n        if (_stakeDuration > 0) {\n            IERC20(token).approve(stakingContract, _amount);\n            // stakingContract.stake(_amount, _stakeDuration, msg.sender),\n            IOGVStaking(stakingContract).stake(\n                _amount,\n                _stakeDuration,\n                msg.sender\n            );\n        } else {\n            require(\n                IERC20(token).transfer(msg.sender, _amount),\n                \"MerkleDistributor: Transfer failed.\"\n            );\n        }\n\n        emit Claimed(_index, msg.sender, _amount);\n    }\n}\n", "sourceMap": "234:1792:11:-:0;;;305:210;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1016:14:9;;;;;1040:24;;;;;1074:34;;;;;1118:20;;234:1792:11;;14:177:12;93:13;;-1:-1:-1;;;;;135:31:12;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:416::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;490:2;479:9;475:18;469:25;459:35;;513:49;558:2;547:9;543:18;513:49;:::i;:::-;602:2;587:18;;;;581:25;196:416;;;;-1:-1:-1;;;196:416:12:o;:::-;234:1792:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/OptionalLockupDistributor.sol", "deployment": {"address": "0x4a83Ce24e7a1a010e91329975e9d5a31B34E994c", "chainid": "4", "blockHeight": 10990927}}