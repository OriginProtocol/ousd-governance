{"abi": [{"inputs": [{"internalType": "address", "name": "ogv_", "type": "address"}, {"internalType": "uint256", "name": "epoch_", "type": "uint256"}, {"internalType": "address", "name": "rewardsSource_", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"inputs": [{"internalType": "uint256", "name": "x", "type": "uint256"}], "name": "PRBMathUD60x18__Exp2InputTooBig", "type": "error"}, {"inputs": [{"internalType": "uint256", "name": "x", "type": "uint256"}], "name": "PRBMathUD60x18__LogInputTooSmall", "type": "error"}, {"inputs": [{"internalType": "uint256", "name": "prod1", "type": "uint256"}], "name": "PRBMath__MulDivFixedPointOverflow", "type": "error"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "spender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Approval", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "delegator", "type": "address"}, {"indexed": true, "internalType": "address", "name": "fromDelegate", "type": "address"}, {"indexed": true, "internalType": "address", "name": "toDelegate", "type": "address"}], "name": "DelegateChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "delegate", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "previousBalance", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "newBalance", "type": "uint256"}], "name": "DelegateVotesChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "user", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "Reward", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "user", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "lockupId", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "end", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "points", "type": "uint256"}], "name": "Stake", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "from", "type": "address"}, {"indexed": true, "internalType": "address", "name": "to", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Transfer", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "user", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "lockupId", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "end", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "points", "type": "uint256"}], "name": "Unstake", "type": "event"}, {"inputs": [], "name": "DOMAIN_SEPARATOR", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "accRewardPerShare", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}], "name": "allowance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "approve", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "balanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}, {"internalType": "uint32", "name": "pos", "type": "uint32"}], "name": "checkpoints", "outputs": [{"components": [{"internalType": "uint32", "name": "fromBlock", "type": "uint32"}, {"internalType": "uint224", "name": "votes", "type": "uint224"}], "internalType": "struct ERC20Votes.Checkpoint", "name": "", "type": "tuple"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "collectRewards", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "decimals", "outputs": [{"internalType": "uint8", "name": "", "type": "uint8"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "subtractedValue", "type": "uint256"}], "name": "decreaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "delegatee", "type": "address"}], "name": "delegate", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "delegatee", "type": "address"}, {"internalType": "uint256", "name": "nonce", "type": "uint256"}, {"internalType": "uint256", "name": "expiry", "type": "uint256"}, {"internalType": "uint8", "name": "v", "type": "uint8"}, {"internalType": "bytes32", "name": "r", "type": "bytes32"}, {"internalType": "bytes32", "name": "s", "type": "bytes32"}], "name": "delegateBySig", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "delegates", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "epoch", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "lockupId", "type": "uint256"}, {"internalType": "uint256", "name": "duration", "type": "uint256"}], "name": "extend", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "blockNumber", "type": "uint256"}], "name": "getPastTotalSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}, {"internalType": "uint256", "name": "blockNumber", "type": "uint256"}], "name": "getPastVotes", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "getVotes", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "addedValue", "type": "uint256"}], "name": "increaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}, {"internalType": "uint256", "name": "", "type": "uint256"}], "name": "lockups", "outputs": [{"internalType": "uint128", "name": "amount", "type": "uint128"}, {"internalType": "uint128", "name": "end", "type": "uint128"}, {"internalType": "uint256", "name": "points", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "name", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "pure", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}], "name": "nonces", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "numCheckpoints", "outputs": [{"internalType": "uint32", "name": "", "type": "uint32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "ogv", "outputs": [{"internalType": "contract ERC20", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "value", "type": "uint256"}, {"internalType": "uint256", "name": "deadline", "type": "uint256"}, {"internalType": "uint8", "name": "v", "type": "uint8"}, {"internalType": "bytes32", "name": "r", "type": "bytes32"}, {"internalType": "bytes32", "name": "s", "type": "bytes32"}], "name": "permit", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "uint256", "name": "duration", "type": "uint256"}], "name": "previewPoints", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}, {"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "user", "type": "address"}], "name": "previewRewards", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}], "name": "rewardDebtPerShare", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "rewardsSource", "outputs": [{"internalType": "contract RewardsSource", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "uint256", "name": "duration", "type": "uint256"}, {"internalType": "address", "name": "to", "type": "address"}], "name": "stake", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "uint256", "name": "duration", "type": "uint256"}], "name": "stake", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "symbol", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "pure", "type": "function"}, {"inputs": [], "name": "totalSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}, {"internalType": "uint256", "name": "", "type": "uint256"}], "name": "transfer", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}, {"internalType": "address", "name": "", "type": "address"}, {"internalType": "uint256", "name": "", "type": "uint256"}], "name": "transferFrom", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "lockupId", "type": "uint256"}], "name": "unstake", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"0": "/Users/tom/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/governance/utils/IVotes.sol", "1": "/Users/tom/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/ERC20.sol", "12": "/Users/tom/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/cryptography/draft-EIP712.sol", "15": "/Users/tom/.brownie/packages/paulrberg/prb-math@2.5.0/contracts/PRBMath.sol", "16": "/Users/tom/.brownie/packages/paulrberg/prb-math@2.5.0/contracts/PRBMathUD60x18.sol", "18": "contracts/OgvStaking.sol", "19": "contracts/RewardsSource.sol", "2": "/Users/tom/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/IERC20.sol", "3": "/Users/tom/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/extensions/ERC20Votes.sol", "4": "/Users/tom/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/extensions/IERC20Metadata.sol", "5": "/Users/tom/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/extensions/draft-ERC20Permit.sol", "6": "/Users/tom/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/extensions/draft-IERC20Permit.sol", "8": "/Users/tom/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/Context.sol"}, "ast": {"absolutePath": "contracts/OgvStaking.sol", "exportedSymbols": {"ERC20": [1781], "ERC20Permit": [2590], "ERC20Votes": [2418], "OgvStaking": [727], "PRBMathUD60x18": [3200], "RewardsSource": [1181]}, "id": 728, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "0.8", ".10"], "nodeType": "PragmaDirective", "src": "32:23:18"}, {"absolutePath": "/Users/tom/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/extensions/ERC20Votes.sol", "file": "OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/extensions/ERC20Votes.sol", "id": 3, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 728, "sourceUnit": 2419, "src": "56:117:18", "symbolAliases": [{"foreign": {"id": 2, "name": "ERC20Votes", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "64:10:18", "typeDescriptions": {}}, "nameLocation": "-1:-1:-1"}], "unitAlias": ""}, {"absolutePath": "/Users/tom/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/extensions/draft-ERC20Permit.sol", "file": "OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/extensions/draft-ERC20Permit.sol", "id": 5, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 728, "sourceUnit": 2591, "src": "174:125:18", "symbolAliases": [{"foreign": {"id": 4, "name": "ERC20Permit", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "182:11:18", "typeDescriptions": {}}, "nameLocation": "-1:-1:-1"}], "unitAlias": ""}, {"absolutePath": "/Users/tom/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/ERC20.sol", "file": "OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/ERC20.sol", "id": 7, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 728, "sourceUnit": 1782, "src": "300:96:18", "symbolAliases": [{"foreign": {"id": 6, "name": "ERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "308:5:18", "typeDescriptions": {}}, "nameLocation": "-1:-1:-1"}], "unitAlias": ""}, {"absolutePath": "/Users/tom/.brownie/packages/paulrberg/prb-math@2.5.0/contracts/PRBMathUD60x18.sol", "file": "paulrberg/prb-math@2.5.0/contracts/PRBMathUD60x18.sol", "id": 9, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 728, "sourceUnit": 3201, "src": "397:85:18", "symbolAliases": [{"foreign": {"id": 8, "name": "PRBMathUD60x18", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "405:14:18", "typeDescriptions": {}}, "nameLocation": "-1:-1:-1"}], "unitAlias": ""}, {"absolutePath": "contracts/RewardsSource.sol", "file": "./RewardsSource.sol", "id": 11, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 728, "sourceUnit": 1182, "src": "483:50:18", "symbolAliases": [{"foreign": {"id": 10, "name": "RewardsSource", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "491:13:18", "typeDescriptions": {}}, "nameLocation": "-1:-1:-1"}], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 13, "name": "ERC20Votes", "nodeType": "IdentifierPath", "referencedDeclaration": 2418, "src": "860:10:18"}, "id": 14, "nodeType": "InheritanceSpecifier", "src": "860:10:18"}], "canonicalName": "OgvStaking", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 12, "nodeType": "StructuredDocumentation", "src": "535:302:18", "text": "@title OGV Staking\n @author Daniel Von Fange\n @notice Provides staking, vote power history, vote delegation, and rewards\n distribution.\n The balance received for staking (and thus the voting power and rewards\n distribution) goes up exponentially by the end of the staked period."}, "fullyImplemented": true, "id": 727, "linearizedBaseContracts": [727, 2418, 2590, 4995, 4767, 1781, 3743, 3718, 3765, 3843], "name": "OgvStaking", "nameLocation": "846:10:18", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "functionSelector": "900cf0cf", "id": 16, "mutability": "immutable", "name": "epoch", "nameLocation": "925:5:18", "nodeType": "VariableDeclaration", "scope": 727, "src": "900:30:18", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 15, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "900:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": true, "id": 19, "mutability": "constant", "name": "YEAR_BASE", "nameLocation": "991:9:18", "nodeType": "VariableDeclaration", "scope": 727, "src": "974:34:18", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "974:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "3138653137", "id": 18, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1003:5:18", "typeDescriptions": {"typeIdentifier": "t_rational_1800000000000000000_by_1", "typeString": "int_const 1800000000000000000"}, "value": "18e17"}, "visibility": "internal"}, {"canonicalName": "OgvStaking.Lockup", "id": 26, "members": [{"constant": false, "id": 21, "mutability": "mutable", "name": "amount", "nameLocation": "1046:6:18", "nodeType": "VariableDeclaration", "scope": 26, "src": "1038:14:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}, "typeName": {"id": 20, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "1038:7:18", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "visibility": "internal"}, {"constant": false, "id": 23, "mutability": "mutable", "name": "end", "nameLocation": "1070:3:18", "nodeType": "VariableDeclaration", "scope": 26, "src": "1062:11:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}, "typeName": {"id": 22, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "1062:7:18", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "visibility": "internal"}, {"constant": false, "id": 25, "mutability": "mutable", "name": "points", "nameLocation": "1091:6:18", "nodeType": "VariableDeclaration", "scope": 26, "src": "1083:14:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 24, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1083:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "name": "Lockup", "nameLocation": "1021:6:18", "nodeType": "StructDefinition", "scope": 727, "src": "1014:90:18", "visibility": "public"}, {"constant": false, "functionSelector": "c93d0b1e", "id": 32, "mutability": "mutable", "name": "lockups", "nameLocation": "1145:7:18", "nodeType": "VariableDeclaration", "scope": 727, "src": "1109:43:18", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Lockup_$26_storage_$dyn_storage_$", "typeString": "mapping(address => struct OgvStaking.Lockup[])"}, "typeName": {"id": 31, "keyType": {"id": 27, "name": "address", "nodeType": "ElementaryTypeName", "src": "1117:7:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1109:28:18", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Lockup_$26_storage_$dyn_storage_$", "typeString": "mapping(address => struct OgvStaking.Lockup[])"}, "valueType": {"baseType": {"id": 29, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 28, "name": "Lockup", "nodeType": "IdentifierPath", "referencedDeclaration": 26, "src": "1128:6:18"}, "referencedDeclaration": 26, "src": "1128:6:18", "typeDescriptions": {"typeIdentifier": "t_struct$_Lockup_$26_storage_ptr", "typeString": "struct OgvStaking.Lockup"}}, "id": 30, "nodeType": "ArrayTypeName", "src": "1128:8:18", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Lockup_$26_storage_$dyn_storage_ptr", "typeString": "struct OgvStaking.Lockup[]"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "142561cf", "id": 35, "mutability": "immutable", "name": "ogv", "nameLocation": "1207:3:18", "nodeType": "VariableDeclaration", "scope": 727, "src": "1184:26:18", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1781", "typeString": "contract ERC20"}, "typeName": {"id": 34, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 33, "name": "ERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 1781, "src": "1184:5:18"}, "referencedDeclaration": 1781, "src": "1184:5:18", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1781", "typeString": "contract ERC20"}}, "visibility": "public"}, {"constant": false, "functionSelector": "f7240d2f", "id": 38, "mutability": "immutable", "name": "rewardsSource", "nameLocation": "1276:13:18", "nodeType": "VariableDeclaration", "scope": 727, "src": "1245:44:18", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_RewardsSource_$1181", "typeString": "contract RewardsSource"}, "typeName": {"id": 37, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 36, "name": "RewardsSource", "nodeType": "IdentifierPath", "referencedDeclaration": 1181, "src": "1245:13:18"}, "referencedDeclaration": 1181, "src": "1245:13:18", "typeDescriptions": {"typeIdentifier": "t_contract$_RewardsSource_$1181", "typeString": "contract RewardsSource"}}, "visibility": "public"}, {"constant": false, "functionSelector": "4423bf57", "id": 42, "mutability": "mutable", "name": "rewardDebtPerShare", "nameLocation": "1330:18:18", "nodeType": "VariableDeclaration", "scope": 727, "src": "1295:53:18", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "typeName": {"id": 41, "keyType": {"id": 39, "name": "address", "nodeType": "ElementaryTypeName", "src": "1303:7:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1295:27:18", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 40, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1314:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "939d6237", "id": 44, "mutability": "mutable", "name": "accRewardPerShare", "nameLocation": "1369:17:18", "nodeType": "VariableDeclaration", "scope": 727, "src": "1354:32:18", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 43, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1354:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"anonymous": false, "id": 56, "name": "Stake", "nameLocation": "1445:5:18", "nodeType": "EventDefinition", "parameters": {"id": 55, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 46, "indexed": true, "mutability": "mutable", "name": "user", "nameLocation": "1476:4:18", "nodeType": "VariableDeclaration", "scope": 56, "src": "1460:20:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 45, "name": "address", "nodeType": "ElementaryTypeName", "src": "1460:7:18", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 48, "indexed": false, "mutability": "mutable", "name": "lockupId", "nameLocation": "1498:8:18", "nodeType": "VariableDeclaration", "scope": 56, "src": "1490:16:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 47, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1490:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 50, "indexed": false, "mutability": "mutable", "name": "amount", "nameLocation": "1524:6:18", "nodeType": "VariableDeclaration", "scope": 56, "src": "1516:14:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 49, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1516:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 52, "indexed": false, "mutability": "mutable", "name": "end", "nameLocation": "1548:3:18", "nodeType": "VariableDeclaration", "scope": 56, "src": "1540:11:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 51, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1540:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 54, "indexed": false, "mutability": "mutable", "name": "points", "nameLocation": "1569:6:18", "nodeType": "VariableDeclaration", "scope": 56, "src": "1561:14:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 53, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1561:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1450:131:18"}, "src": "1439:143:18"}, {"anonymous": false, "id": 68, "name": "Unstake", "nameLocation": "1593:7:18", "nodeType": "EventDefinition", "parameters": {"id": 67, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 58, "indexed": true, "mutability": "mutable", "name": "user", "nameLocation": "1626:4:18", "nodeType": "VariableDeclaration", "scope": 68, "src": "1610:20:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 57, "name": "address", "nodeType": "ElementaryTypeName", "src": "1610:7:18", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 60, "indexed": false, "mutability": "mutable", "name": "lockupId", "nameLocation": "1648:8:18", "nodeType": "VariableDeclaration", "scope": 68, "src": "1640:16:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 59, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1640:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 62, "indexed": false, "mutability": "mutable", "name": "amount", "nameLocation": "1674:6:18", "nodeType": "VariableDeclaration", "scope": 68, "src": "1666:14:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 61, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1666:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 64, "indexed": false, "mutability": "mutable", "name": "end", "nameLocation": "1698:3:18", "nodeType": "VariableDeclaration", "scope": 68, "src": "1690:11:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 63, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1690:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 66, "indexed": false, "mutability": "mutable", "name": "points", "nameLocation": "1719:6:18", "nodeType": "VariableDeclaration", "scope": 68, "src": "1711:14:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 65, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1711:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1600:131:18"}, "src": "1587:145:18"}, {"anonymous": false, "id": 74, "name": "Reward", "nameLocation": "1743:6:18", "nodeType": "EventDefinition", "parameters": {"id": 73, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 70, "indexed": true, "mutability": "mutable", "name": "user", "nameLocation": "1766:4:18", "nodeType": "VariableDeclaration", "scope": 74, "src": "1750:20:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 69, "name": "address", "nodeType": "ElementaryTypeName", "src": "1750:7:18", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 72, "indexed": false, "mutability": "mutable", "name": "amount", "nameLocation": "1780:6:18", "nodeType": "VariableDeclaration", "scope": 74, "src": "1772:14:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 71, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1772:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1749:38:18"}, "src": "1737:51:18"}, {"body": {"id": 106, "nodeType": "Block", "src": "1951:113:18", "statements": [{"expression": {"id": 94, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 90, "name": "ogv", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35, "src": "1961:3:18", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1781", "typeString": "contract ERC20"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 92, "name": "ogv_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 76, "src": "1973:4:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 91, "name": "ERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1781, "src": "1967:5:18", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ERC20_$1781_$", "typeString": "type(contract ERC20)"}}, "id": 93, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1967:11:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1781", "typeString": "contract ERC20"}}, "src": "1961:17:18", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1781", "typeString": "contract ERC20"}}, "id": 95, "nodeType": "ExpressionStatement", "src": "1961:17:18"}, {"expression": {"id": 98, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 96, "name": "epoch", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16, "src": "1988:5:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 97, "name": "epoch_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 78, "src": "1996:6:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1988:14:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 99, "nodeType": "ExpressionStatement", "src": "1988:14:18"}, {"expression": {"id": 104, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 100, "name": "rewardsSource", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38, "src": "2012:13:18", "typeDescriptions": {"typeIdentifier": "t_contract$_RewardsSource_$1181", "typeString": "contract RewardsSource"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 102, "name": "rewardsSource_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 80, "src": "2042:14:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 101, "name": "RewardsSource", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1181, "src": "2028:13:18", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_RewardsSource_$1181_$", "typeString": "type(contract RewardsSource)"}}, "id": 103, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2028:29:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_RewardsSource_$1181", "typeString": "contract RewardsSource"}}, "src": "2012:45:18", "typeDescriptions": {"typeIdentifier": "t_contract$_RewardsSource_$1181", "typeString": "contract RewardsSource"}}, "id": 105, "nodeType": "ExpressionStatement", "src": "2012:45:18"}]}, "id": 107, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"hexValue": "", "id": 83, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1922:2:18", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}, {"hexValue": "", "id": 84, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1926:2:18", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "id": 85, "kind": "baseConstructorSpecifier", "modifierName": {"id": 82, "name": "ERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 1781, "src": "1916:5:18"}, "nodeType": "ModifierInvocation", "src": "1916:13:18"}, {"arguments": [{"hexValue": "76654f4756", "id": 87, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1942:7:18", "typeDescriptions": {"typeIdentifier": "t_stringliteral_4b159c4a905f2022b9e1f6b831656ce74997c155de726499d27a28637823c6fe", "typeString": "literal_string \"veOGV\""}, "value": "veOGV"}], "id": 88, "kind": "baseConstructorSpecifier", "modifierName": {"id": 86, "name": "ERC20Permit", "nodeType": "IdentifierPath", "referencedDeclaration": 2590, "src": "1930:11:18"}, "nodeType": "ModifierInvocation", "src": "1930:20:18"}], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 81, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 76, "mutability": "mutable", "name": "ogv_", "nameLocation": "1849:4:18", "nodeType": "VariableDeclaration", "scope": 107, "src": "1841:12:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 75, "name": "address", "nodeType": "ElementaryTypeName", "src": "1841:7:18", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 78, "mutability": "mutable", "name": "epoch_", "nameLocation": "1871:6:18", "nodeType": "VariableDeclaration", "scope": 107, "src": "1863:14:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 77, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1863:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 80, "mutability": "mutable", "name": "rewardsSource_", "nameLocation": "1895:14:18", "nodeType": "VariableDeclaration", "scope": 107, "src": "1887:22:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 79, "name": "address", "nodeType": "ElementaryTypeName", "src": "1887:7:18", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1831:84:18"}, "returnParameters": {"id": 89, "nodeType": "ParameterList", "parameters": [], "src": "1951:0:18"}, "scope": 727, "src": "1820:244:18", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [1250], "body": {"id": 115, "nodeType": "Block", "src": "2131:31:18", "statements": [{"expression": {"hexValue": "76654f4756", "id": 113, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2148:7:18", "typeDescriptions": {"typeIdentifier": "t_stringliteral_4b159c4a905f2022b9e1f6b831656ce74997c155de726499d27a28637823c6fe", "typeString": "literal_string \"veOGV\""}, "value": "veOGV"}, "functionReturnParameters": 112, "id": 114, "nodeType": "Return", "src": "2141:14:18"}]}, "functionSelector": "06fdde03", "id": 116, "implemented": true, "kind": "function", "modifiers": [], "name": "name", "nameLocation": "2079:4:18", "nodeType": "FunctionDefinition", "overrides": {"id": 109, "nodeType": "OverrideSpecifier", "overrides": [], "src": "2098:8:18"}, "parameters": {"id": 108, "nodeType": "ParameterList", "parameters": [], "src": "2083:2:18"}, "returnParameters": {"id": 112, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 111, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 116, "src": "2116:13:18", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 110, "name": "string", "nodeType": "ElementaryTypeName", "src": "2116:6:18", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "2115:15:18"}, "scope": 727, "src": "2070:92:18", "stateMutability": "pure", "virtual": false, "visibility": "public"}, {"baseFunctions": [1260], "body": {"id": 124, "nodeType": "Block", "src": "2231:31:18", "statements": [{"expression": {"hexValue": "76654f4756", "id": 122, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2248:7:18", "typeDescriptions": {"typeIdentifier": "t_stringliteral_4b159c4a905f2022b9e1f6b831656ce74997c155de726499d27a28637823c6fe", "typeString": "literal_string \"veOGV\""}, "value": "veOGV"}, "functionReturnParameters": 121, "id": 123, "nodeType": "Return", "src": "2241:14:18"}]}, "functionSelector": "95d89b41", "id": 125, "implemented": true, "kind": "function", "modifiers": [], "name": "symbol", "nameLocation": "2177:6:18", "nodeType": "FunctionDefinition", "overrides": {"id": 118, "nodeType": "OverrideSpecifier", "overrides": [], "src": "2198:8:18"}, "parameters": {"id": 117, "nodeType": "ParameterList", "parameters": [], "src": "2183:2:18"}, "returnParameters": {"id": 121, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 120, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 125, "src": "2216:13:18", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 119, "name": "string", "nodeType": "ElementaryTypeName", "src": "2216:6:18", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "2215:15:18"}, "scope": 727, "src": "2168:94:18", "stateMutability": "pure", "virtual": false, "visibility": "public"}, {"baseFunctions": [1319], "body": {"id": 139, "nodeType": "Block", "src": "2335:54:18", "statements": [{"expression": {"arguments": [{"hexValue": "5374616b696e673a205472616e73666572732064697361626c6564", "id": 136, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2352:29:18", "typeDescriptions": {"typeIdentifier": "t_stringliteral_273700fd328f15da228f1d74942920aea785e0b73aa9dee61942ef8c96ed037f", "typeString": "literal_string \"Staking: Transfers disabled\""}, "value": "Staking: Transfers disabled"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_273700fd328f15da228f1d74942920aea785e0b73aa9dee61942ef8c96ed037f", "typeString": "literal_string \"Staking: Transfers disabled\""}], "id": 135, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "2345:6:18", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 137, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2345:37:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 138, "nodeType": "ExpressionStatement", "src": "2345:37:18"}]}, "functionSelector": "a9059cbb", "id": 140, "implemented": true, "kind": "function", "modifiers": [], "name": "transfer", "nameLocation": "2277:8:18", "nodeType": "FunctionDefinition", "overrides": {"id": 131, "nodeType": "OverrideSpecifier", "overrides": [], "src": "2311:8:18"}, "parameters": {"id": 130, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 127, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 140, "src": "2286:7:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 126, "name": "address", "nodeType": "ElementaryTypeName", "src": "2286:7:18", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 129, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 140, "src": "2295:7:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 128, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2295:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2285:18:18"}, "returnParameters": {"id": 134, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 133, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 140, "src": "2329:4:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 132, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2329:4:18", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2328:6:18"}, "scope": 727, "src": "2268:121:18", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [1395], "body": {"id": 156, "nodeType": "Block", "src": "2505:54:18", "statements": [{"expression": {"arguments": [{"hexValue": "5374616b696e673a205472616e73666572732064697361626c6564", "id": 153, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2522:29:18", "typeDescriptions": {"typeIdentifier": "t_stringliteral_273700fd328f15da228f1d74942920aea785e0b73aa9dee61942ef8c96ed037f", "typeString": "literal_string \"Staking: Transfers disabled\""}, "value": "Staking: Transfers disabled"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_273700fd328f15da228f1d74942920aea785e0b73aa9dee61942ef8c96ed037f", "typeString": "literal_string \"Staking: Transfers disabled\""}], "id": 152, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "2515:6:18", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 154, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2515:37:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 155, "nodeType": "ExpressionStatement", "src": "2515:37:18"}]}, "functionSelector": "23b872dd", "id": 157, "implemented": true, "kind": "function", "modifiers": [], "name": "transferFrom", "nameLocation": "2404:12:18", "nodeType": "FunctionDefinition", "overrides": {"id": 148, "nodeType": "OverrideSpecifier", "overrides": [], "src": "2481:8:18"}, "parameters": {"id": 147, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 142, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 157, "src": "2426:7:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 141, "name": "address", "nodeType": "ElementaryTypeName", "src": "2426:7:18", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 144, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 157, "src": "2443:7:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 143, "name": "address", "nodeType": "ElementaryTypeName", "src": "2443:7:18", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 146, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 157, "src": "2460:7:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 145, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2460:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2416:57:18"}, "returnParameters": {"id": 151, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 150, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 157, "src": "2499:4:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 149, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2499:4:18", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2498:6:18"}, "scope": 727, "src": "2395:164:18", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 173, "nodeType": "Block", "src": "3275:45:18", "statements": [{"expression": {"arguments": [{"id": 168, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 160, "src": "3292:6:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 169, "name": "duration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 162, "src": "3300:8:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 170, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 164, "src": "3310:2:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 167, "name": "_stake", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 303, "src": "3285:6:18", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$", "typeString": "function (uint256,uint256,address)"}}, "id": 171, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3285:28:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 172, "nodeType": "ExpressionStatement", "src": "3285:28:18"}]}, "documentation": {"id": 158, "nodeType": "StructuredDocumentation", "src": "2605:565:18", "text": "@notice Stake OGV to an address that may not be the same as the\n sender of the funds. This can be used to give staked funds to someone\n else.\n If staking before the start of staking (epoch), then the lockup start\n and end dates are shifted forward so that the lockup starts at the\n epoch.\n Any rewards previously earned will be paid out.\n @param amount OGV to lockup in the stake\n @param duration in seconds for the stake\n @param to address to receive ownership of the stake"}, "functionSelector": "7628a37d", "id": 174, "implemented": true, "kind": "function", "modifiers": [], "name": "stake", "nameLocation": "3184:5:18", "nodeType": "FunctionDefinition", "parameters": {"id": 165, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 160, "mutability": "mutable", "name": "amount", "nameLocation": "3207:6:18", "nodeType": "VariableDeclaration", "scope": 174, "src": "3199:14:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 159, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3199:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 162, "mutability": "mutable", "name": "duration", "nameLocation": "3231:8:18", "nodeType": "VariableDeclaration", "scope": 174, "src": "3223:16:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 161, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3223:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 164, "mutability": "mutable", "name": "to", "nameLocation": "3257:2:18", "nodeType": "VariableDeclaration", "scope": 174, "src": "3249:10:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 163, "name": "address", "nodeType": "ElementaryTypeName", "src": "3249:7:18", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "3189:76:18"}, "returnParameters": {"id": 166, "nodeType": "ParameterList", "parameters": [], "src": "3275:0:18"}, "scope": 727, "src": "3175:145:18", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 189, "nodeType": "Block", "src": "3794:53:18", "statements": [{"expression": {"arguments": [{"id": 183, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 177, "src": "3811:6:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 184, "name": "duration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 179, "src": "3819:8:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 185, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3829:3:18", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 186, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "3829:10:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 182, "name": "_stake", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 303, "src": "3804:6:18", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$", "typeString": "function (uint256,uint256,address)"}}, "id": 187, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3804:36:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 188, "nodeType": "ExpressionStatement", "src": "3804:36:18"}]}, "documentation": {"id": 175, "nodeType": "StructuredDocumentation", "src": "3326:405:18", "text": "@notice Stake OGV\n If staking before the start of staking (epoch), then the lockup start\n and end dates are shifted forward so that the lockup starts at the\n epoch.\n Any rewards previously earned will be paid out.\n @notice Stake OGV for myself.\n @param amount OGV to lockup in the stake\n @param duration in seconds for the stake"}, "functionSelector": "7b0472f0", "id": 190, "implemented": true, "kind": "function", "modifiers": [], "name": "stake", "nameLocation": "3745:5:18", "nodeType": "FunctionDefinition", "parameters": {"id": 180, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 177, "mutability": "mutable", "name": "amount", "nameLocation": "3759:6:18", "nodeType": "VariableDeclaration", "scope": 190, "src": "3751:14:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 176, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3751:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 179, "mutability": "mutable", "name": "duration", "nameLocation": "3775:8:18", "nodeType": "VariableDeclaration", "scope": 190, "src": "3767:16:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 178, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3767:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3750:34:18"}, "returnParameters": {"id": 181, "nodeType": "ParameterList", "parameters": [], "src": "3794:0:18"}, "scope": 727, "src": "3736:111:18", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 302, "nodeType": "Block", "src": "4165:871:18", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 206, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 201, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 197, "src": "4183:2:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 204, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4197:1:18", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 203, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4189:7:18", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 202, "name": "address", "nodeType": "ElementaryTypeName", "src": "4189:7:18", "typeDescriptions": {}}}, "id": 205, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4189:10:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "4183:16:18", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5374616b696e673a20546f20746865207a65726f2061646472657373", "id": 207, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4201:30:18", "typeDescriptions": {"typeIdentifier": "t_stringliteral_3722f569c9d712bdfa9855535a99e24879d58f8c46ac4bec4b08f4dafde64f70", "typeString": "literal_string \"Staking: To the zero address\""}, "value": "Staking: To the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_3722f569c9d712bdfa9855535a99e24879d58f8c46ac4bec4b08f4dafde64f70", "typeString": "literal_string \"Staking: To the zero address\""}], "id": 200, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4175:7:18", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 208, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4175:57:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 209, "nodeType": "ExpressionStatement", "src": "4175:57:18"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 217, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 211, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 193, "src": "4250:6:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"expression": {"arguments": [{"id": 214, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4265:7:18", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint128_$", "typeString": "type(uint128)"}, "typeName": {"id": 213, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "4265:7:18", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint128_$", "typeString": "type(uint128)"}], "id": 212, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "4260:4:18", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 215, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4260:13:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint128", "typeString": "type(uint128)"}}, "id": 216, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "4260:17:18", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "src": "4250:27:18", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5374616b696e673a20546f6f206d756368", "id": 218, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4279:19:18", "typeDescriptions": {"typeIdentifier": "t_stringliteral_fd107e9166f5f2d80f8937d89e1acb9b493c8f956a7362bf3c829b67a4332250", "typeString": "literal_string \"Staking: Too much\""}, "value": "Staking: Too much"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_fd107e9166f5f2d80f8937d89e1acb9b493c8f956a7362bf3c829b67a4332250", "typeString": "literal_string \"Staking: Too much\""}], "id": 210, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4242:7:18", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 219, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4242:57:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 220, "nodeType": "ExpressionStatement", "src": "4242:57:18"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 224, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 222, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 193, "src": "4317:6:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 223, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4326:1:18", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "4317:10:18", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5374616b696e673a204e6f7420656e6f756768", "id": 225, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4329:21:18", "typeDescriptions": {"typeIdentifier": "t_stringliteral_08892562ded77aa8ef18a86a8de0fa9e3c2f47710d6852b40351db2eb3ecffa8", "typeString": "literal_string \"Staking: Not enough\""}, "value": "Staking: Not enough"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_08892562ded77aa8ef18a86a8de0fa9e3c2f47710d6852b40351db2eb3ecffa8", "typeString": "literal_string \"Staking: Not enough\""}], "id": 221, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4309:7:18", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 226, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4309:42:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 227, "nodeType": "ExpressionStatement", "src": "4309:42:18"}, {"assignments": [229, 231], "declarations": [{"constant": false, "id": 229, "mutability": "mutable", "name": "points", "nameLocation": "4419:6:18", "nodeType": "VariableDeclaration", "scope": 302, "src": "4411:14:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 228, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4411:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 231, "mutability": "mutable", "name": "end", "nameLocation": "4435:3:18", "nodeType": "VariableDeclaration", "scope": 302, "src": "4427:11:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 230, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4427:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 236, "initialValue": {"arguments": [{"id": 233, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 193, "src": "4456:6:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 234, "name": "duration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 195, "src": "4464:8:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 232, "name": "previewPoints", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 564, "src": "4442:13:18", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256) view returns (uint256,uint256)"}}, "id": 235, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4442:31:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "4410:63:18"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 247, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 241, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 238, "name": "points", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 229, "src": "4504:6:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 239, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1280, "src": "4513:11:18", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 240, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4513:13:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4504:22:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"expression": {"arguments": [{"id": 244, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4535:7:18", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint192_$", "typeString": "type(uint192)"}, "typeName": {"id": 243, "name": "uint192", "nodeType": "ElementaryTypeName", "src": "4535:7:18", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint192_$", "typeString": "type(uint192)"}], "id": 242, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "4530:4:18", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 245, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4530:13:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint192", "typeString": "type(uint192)"}}, "id": 246, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "4530:17:18", "typeDescriptions": {"typeIdentifier": "t_uint192", "typeString": "uint192"}}, "src": "4504:43:18", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5374616b696e673a204d617820706f696e7473206578636565646564", "id": 248, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4561:30:18", "typeDescriptions": {"typeIdentifier": "t_stringliteral_e194468b410d451dc6103feb88d157bdf439ade8f710d2ec12445d5007de7928", "typeString": "literal_string \"Staking: Max points exceeded\""}, "value": "Staking: Max points exceeded"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_e194468b410d451dc6103feb88d157bdf439ade8f710d2ec12445d5007de7928", "typeString": "literal_string \"Staking: Max points exceeded\""}], "id": 237, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4483:7:18", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 249, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4483:118:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 250, "nodeType": "ExpressionStatement", "src": "4483:118:18"}, {"expression": {"arguments": [{"id": 252, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 197, "src": "4627:2:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 251, "name": "_collectRewards", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 726, "src": "4611:15:18", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 253, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4611:19:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 254, "nodeType": "ExpressionStatement", "src": "4611:19:18"}, {"expression": {"arguments": [{"arguments": [{"arguments": [{"id": 262, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 193, "src": "4711:6:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 261, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4703:7:18", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint128_$", "typeString": "type(uint128)"}, "typeName": {"id": 260, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "4703:7:18", "typeDescriptions": {}}}, "id": 263, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4703:15:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, {"arguments": [{"id": 266, "name": "end", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 231, "src": "4781:3:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 265, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4773:7:18", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint128_$", "typeString": "type(uint128)"}, "typeName": {"id": 264, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "4773:7:18", "typeDescriptions": {}}}, "id": 267, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4773:12:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, {"id": 268, "name": "points", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 229, "src": "4811:6:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint128", "typeString": "uint128"}, {"typeIdentifier": "t_uint128", "typeString": "uint128"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 259, "name": "Lockup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 26, "src": "4670:6:18", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_Lockup_$26_storage_ptr_$", "typeString": "type(struct OgvStaking.Lockup storage pointer)"}}, "id": 269, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "names": ["amount", "end", "points"], "nodeType": "FunctionCall", "src": "4670:162:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_Lockup_$26_memory_ptr", "typeString": "struct OgvStaking.Lockup memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Lockup_$26_memory_ptr", "typeString": "struct OgvStaking.Lockup memory"}], "expression": {"baseExpression": {"id": 255, "name": "lockups", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 32, "src": "4640:7:18", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Lockup_$26_storage_$dyn_storage_$", "typeString": "mapping(address => struct OgvStaking.Lockup storage ref[] storage ref)"}}, "id": 257, "indexExpression": {"id": 256, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 197, "src": "4648:2:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4640:11:18", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Lockup_$26_storage_$dyn_storage", "typeString": "struct OgvStaking.Lockup storage ref[] storage ref"}}, "id": 258, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "push", "nodeType": "MemberAccess", "src": "4640:16:18", "typeDescriptions": {"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Lockup_$26_storage_$dyn_storage_ptr_$_t_struct$_Lockup_$26_storage_$returns$__$bound_to$_t_array$_t_struct$_Lockup_$26_storage_$dyn_storage_ptr_$", "typeString": "function (struct OgvStaking.Lockup storage ref[] storage pointer,struct OgvStaking.Lockup storage ref)"}}, "id": 270, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4640:202:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 271, "nodeType": "ExpressionStatement", "src": "4640:202:18"}, {"expression": {"arguments": [{"id": 273, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 197, "src": "4858:2:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 274, "name": "points", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 229, "src": "4862:6:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 272, "name": "_mint", "nodeType": "Identifier", "overloadedDeclarations": [2132], "referencedDeclaration": 2132, "src": "4852:5:18", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 275, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4852:17:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 276, "nodeType": "ExpressionStatement", "src": "4852:17:18"}, {"expression": {"arguments": [{"expression": {"id": 280, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "4896:3:18", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 281, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "4896:10:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 284, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "4916:4:18", "typeDescriptions": {"typeIdentifier": "t_contract$_OgvStaking_$727", "typeString": "contract OgvStaking"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_OgvStaking_$727", "typeString": "contract OgvStaking"}], "id": 283, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4908:7:18", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 282, "name": "address", "nodeType": "ElementaryTypeName", "src": "4908:7:18", "typeDescriptions": {}}}, "id": 285, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4908:13:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 286, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 193, "src": "4923:6:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 277, "name": "ogv", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35, "src": "4879:3:18", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1781", "typeString": "contract ERC20"}}, "id": 279, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 1395, "src": "4879:16:18", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,address,uint256) external returns (bool)"}}, "id": 287, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4879:51:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 288, "nodeType": "ExpressionStatement", "src": "4879:51:18"}, {"eventCall": {"arguments": [{"id": 290, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 197, "src": "4981:2:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 296, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 291, "name": "lockups", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 32, "src": "4985:7:18", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Lockup_$26_storage_$dyn_storage_$", "typeString": "mapping(address => struct OgvStaking.Lockup storage ref[] storage ref)"}}, "id": 293, "indexExpression": {"id": 292, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 197, "src": "4993:2:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4985:11:18", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Lockup_$26_storage_$dyn_storage", "typeString": "struct OgvStaking.Lockup storage ref[] storage ref"}}, "id": 294, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "4985:18:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"hexValue": "31", "id": 295, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5006:1:18", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "4985:22:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 297, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 193, "src": "5009:6:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 298, "name": "end", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 231, "src": "5017:3:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 299, "name": "points", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 229, "src": "5022:6:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 289, "name": "Stake", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 56, "src": "4975:5:18", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (address,uint256,uint256,uint256,uint256)"}}, "id": 300, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4975:54:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 301, "nodeType": "EmitStatement", "src": "4970:59:18"}]}, "documentation": {"id": 191, "nodeType": "StructuredDocumentation", "src": "3853:206:18", "text": "@dev Internal method used for public staking\n @param amount OGV to lockup in the stake\n @param duration in seconds for the stake\n @param to address to receive ownership of the stake"}, "id": 303, "implemented": true, "kind": "function", "modifiers": [], "name": "_stake", "nameLocation": "4073:6:18", "nodeType": "FunctionDefinition", "parameters": {"id": 198, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 193, "mutability": "mutable", "name": "amount", "nameLocation": "4097:6:18", "nodeType": "VariableDeclaration", "scope": 303, "src": "4089:14:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 192, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4089:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 195, "mutability": "mutable", "name": "duration", "nameLocation": "4121:8:18", "nodeType": "VariableDeclaration", "scope": 303, "src": "4113:16:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 194, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4113:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 197, "mutability": "mutable", "name": "to", "nameLocation": "4147:2:18", "nodeType": "VariableDeclaration", "scope": 303, "src": "4139:10:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 196, "name": "address", "nodeType": "ElementaryTypeName", "src": "4139:7:18", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "4079:76:18"}, "returnParameters": {"id": 199, "nodeType": "ParameterList", "parameters": [], "src": "4165:0:18"}, "scope": 727, "src": "4064:972:18", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 385, "nodeType": "Block", "src": "5214:602:18", "statements": [{"assignments": [311], "declarations": [{"constant": false, "id": 311, "mutability": "mutable", "name": "lockup", "nameLocation": "5238:6:18", "nodeType": "VariableDeclaration", "scope": 385, "src": "5224:20:18", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Lockup_$26_memory_ptr", "typeString": "struct OgvStaking.Lockup"}, "typeName": {"id": 310, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 309, "name": "Lockup", "nodeType": "IdentifierPath", "referencedDeclaration": 26, "src": "5224:6:18"}, "referencedDeclaration": 26, "src": "5224:6:18", "typeDescriptions": {"typeIdentifier": "t_struct$_Lockup_$26_storage_ptr", "typeString": "struct OgvStaking.Lockup"}}, "visibility": "internal"}], "id": 318, "initialValue": {"baseExpression": {"baseExpression": {"id": 312, "name": "lockups", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 32, "src": "5247:7:18", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Lockup_$26_storage_$dyn_storage_$", "typeString": "mapping(address => struct OgvStaking.Lockup storage ref[] storage ref)"}}, "id": 315, "indexExpression": {"expression": {"id": 313, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5255:3:18", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 314, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5255:10:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5247:19:18", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Lockup_$26_storage_$dyn_storage", "typeString": "struct OgvStaking.Lockup storage ref[] storage ref"}}, "id": 317, "indexExpression": {"id": 316, "name": "lockupId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 306, "src": "5267:8:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5247:29:18", "typeDescriptions": {"typeIdentifier": "t_struct$_Lockup_$26_storage", "typeString": "struct OgvStaking.Lockup storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "5224:52:18"}, {"assignments": [320], "declarations": [{"constant": false, "id": 320, "mutability": "mutable", "name": "amount", "nameLocation": "5294:6:18", "nodeType": "VariableDeclaration", "scope": 385, "src": "5286:14:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 319, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5286:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 323, "initialValue": {"expression": {"id": 321, "name": "lockup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 311, "src": "5303:6:18", "typeDescriptions": {"typeIdentifier": "t_struct$_Lockup_$26_memory_ptr", "typeString": "struct OgvStaking.Lockup memory"}}, "id": 322, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 21, "src": "5303:13:18", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "VariableDeclarationStatement", "src": "5286:30:18"}, {"assignments": [325], "declarations": [{"constant": false, "id": 325, "mutability": "mutable", "name": "end", "nameLocation": "5334:3:18", "nodeType": "VariableDeclaration", "scope": 385, "src": "5326:11:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 324, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5326:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 328, "initialValue": {"expression": {"id": 326, "name": "lockup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 311, "src": "5340:6:18", "typeDescriptions": {"typeIdentifier": "t_struct$_Lockup_$26_memory_ptr", "typeString": "struct OgvStaking.Lockup memory"}}, "id": 327, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "end", "nodeType": "MemberAccess", "referencedDeclaration": 23, "src": "5340:10:18", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "VariableDeclarationStatement", "src": "5326:24:18"}, {"assignments": [330], "declarations": [{"constant": false, "id": 330, "mutability": "mutable", "name": "points", "nameLocation": "5368:6:18", "nodeType": "VariableDeclaration", "scope": 385, "src": "5360:14:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 329, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5360:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 333, "initialValue": {"expression": {"id": 331, "name": "lockup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 311, "src": "5377:6:18", "typeDescriptions": {"typeIdentifier": "t_struct$_Lockup_$26_memory_ptr", "typeString": "struct OgvStaking.Lockup memory"}}, "id": 332, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "points", "nodeType": "MemberAccess", "referencedDeclaration": 25, "src": "5377:13:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5360:30:18"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 338, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 335, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "5408:5:18", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 336, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "5408:15:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 337, "name": "end", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 325, "src": "5427:3:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5408:22:18", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5374616b696e673a20456e64206f66206c6f636b7570206e6f742072656163686564", "id": 339, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5432:36:18", "typeDescriptions": {"typeIdentifier": "t_stringliteral_0d3769af651e026174c0d257a3236a0a34f7f86e6f859f0cb2560d42d70963a5", "typeString": "literal_string \"Staking: End of lockup not reached\""}, "value": "Staking: End of lockup not reached"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_0d3769af651e026174c0d257a3236a0a34f7f86e6f859f0cb2560d42d70963a5", "typeString": "literal_string \"Staking: End of lockup not reached\""}], "id": 334, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5400:7:18", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 340, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5400:69:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 341, "nodeType": "ExpressionStatement", "src": "5400:69:18"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 345, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 343, "name": "end", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 325, "src": "5487:3:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 344, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5494:1:18", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "5487:8:18", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5374616b696e673a20416c726561647920756e7374616b65642074686973206c6f636b7570", "id": 346, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5497:39:18", "typeDescriptions": {"typeIdentifier": "t_stringliteral_7b6a7597b3901c8ecbc7ed06f0b2e89e96023c5d0ae17a3d605a26de7cb7a8a9", "typeString": "literal_string \"Staking: Already unstaked this lockup\""}, "value": "Staking: Already unstaked this lockup"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_7b6a7597b3901c8ecbc7ed06f0b2e89e96023c5d0ae17a3d605a26de7cb7a8a9", "typeString": "literal_string \"Staking: Already unstaked this lockup\""}], "id": 342, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5479:7:18", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 347, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5479:58:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 348, "nodeType": "ExpressionStatement", "src": "5479:58:18"}, {"expression": {"arguments": [{"expression": {"id": 350, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5563:3:18", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 351, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5563:10:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 349, "name": "_collectRewards", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 726, "src": "5547:15:18", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 352, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5547:27:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 353, "nodeType": "ExpressionStatement", "src": "5547:27:18"}, {"expression": {"id": 360, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "delete", "prefix": true, "src": "5584:36:18", "subExpression": {"baseExpression": {"baseExpression": {"id": 354, "name": "lockups", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 32, "src": "5591:7:18", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Lockup_$26_storage_$dyn_storage_$", "typeString": "mapping(address => struct OgvStaking.Lockup storage ref[] storage ref)"}}, "id": 357, "indexExpression": {"expression": {"id": 355, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5599:3:18", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 356, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5599:10:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5591:19:18", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Lockup_$26_storage_$dyn_storage", "typeString": "struct OgvStaking.Lockup storage ref[] storage ref"}}, "id": 359, "indexExpression": {"id": 358, "name": "lockupId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 306, "src": "5611:8:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5591:29:18", "typeDescriptions": {"typeIdentifier": "t_struct$_Lockup_$26_storage", "typeString": "struct OgvStaking.Lockup storage ref"}}, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 361, "nodeType": "ExpressionStatement", "src": "5584:36:18"}, {"expression": {"arguments": [{"expression": {"id": 363, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5683:3:18", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 364, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5683:10:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 365, "name": "points", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 330, "src": "5695:6:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 362, "name": "_burn", "nodeType": "Identifier", "overloadedDeclarations": [2155], "referencedDeclaration": 2155, "src": "5677:5:18", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 366, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5677:25:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 367, "nodeType": "ExpressionStatement", "src": "5677:25:18"}, {"expression": {"arguments": [{"expression": {"id": 371, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5725:3:18", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 372, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5725:10:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 373, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 320, "src": "5737:6:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 368, "name": "ogv", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35, "src": "5712:3:18", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1781", "typeString": "contract ERC20"}}, "id": 370, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transfer", "nodeType": "MemberAccess", "referencedDeclaration": 1319, "src": "5712:12:18", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) external returns (bool)"}}, "id": 374, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5712:32:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 375, "nodeType": "ExpressionStatement", "src": "5712:32:18"}, {"eventCall": {"arguments": [{"expression": {"id": 377, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5767:3:18", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 378, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5767:10:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 379, "name": "lockupId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 306, "src": "5779:8:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 380, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 320, "src": "5789:6:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 381, "name": "end", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 325, "src": "5797:3:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 382, "name": "points", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 330, "src": "5802:6:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 376, "name": "Unstake", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 68, "src": "5759:7:18", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (address,uint256,uint256,uint256,uint256)"}}, "id": 383, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5759:50:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 384, "nodeType": "EmitStatement", "src": "5754:55:18"}]}, "documentation": {"id": 304, "nodeType": "StructuredDocumentation", "src": "5042:123:18", "text": "@notice Collect staked OGV for a lockup and any earned rewards.\n @param lockupId the id of the lockup to unstake"}, "functionSelector": "2e17de78", "id": 386, "implemented": true, "kind": "function", "modifiers": [], "name": "unstake", "nameLocation": "5179:7:18", "nodeType": "FunctionDefinition", "parameters": {"id": 307, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 306, "mutability": "mutable", "name": "lockupId", "nameLocation": "5195:8:18", "nodeType": "VariableDeclaration", "scope": 386, "src": "5187:16:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 305, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5187:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5186:18:18"}, "returnParameters": {"id": 308, "nodeType": "ParameterList", "parameters": [], "src": "5214:0:18"}, "scope": 727, "src": "5170:646:18", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 490, "nodeType": "Block", "src": "6529:783:18", "statements": [{"expression": {"arguments": [{"expression": {"id": 395, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6604:3:18", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 396, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6604:10:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 394, "name": "_collectRewards", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 726, "src": "6588:15:18", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 397, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6588:27:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 398, "nodeType": "ExpressionStatement", "src": "6588:27:18"}, {"assignments": [401], "declarations": [{"constant": false, "id": 401, "mutability": "mutable", "name": "lockup", "nameLocation": "6639:6:18", "nodeType": "VariableDeclaration", "scope": 490, "src": "6625:20:18", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Lockup_$26_memory_ptr", "typeString": "struct OgvStaking.Lockup"}, "typeName": {"id": 400, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 399, "name": "Lockup", "nodeType": "IdentifierPath", "referencedDeclaration": 26, "src": "6625:6:18"}, "referencedDeclaration": 26, "src": "6625:6:18", "typeDescriptions": {"typeIdentifier": "t_struct$_Lockup_$26_storage_ptr", "typeString": "struct OgvStaking.Lockup"}}, "visibility": "internal"}], "id": 408, "initialValue": {"baseExpression": {"baseExpression": {"id": 402, "name": "lockups", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 32, "src": "6648:7:18", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Lockup_$26_storage_$dyn_storage_$", "typeString": "mapping(address => struct OgvStaking.Lockup storage ref[] storage ref)"}}, "id": 405, "indexExpression": {"expression": {"id": 403, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6656:3:18", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 404, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6656:10:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6648:19:18", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Lockup_$26_storage_$dyn_storage", "typeString": "struct OgvStaking.Lockup storage ref[] storage ref"}}, "id": 407, "indexExpression": {"id": 406, "name": "lockupId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 389, "src": "6668:8:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6648:29:18", "typeDescriptions": {"typeIdentifier": "t_struct$_Lockup_$26_storage", "typeString": "struct OgvStaking.Lockup storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "6625:52:18"}, {"assignments": [410], "declarations": [{"constant": false, "id": 410, "mutability": "mutable", "name": "oldAmount", "nameLocation": "6695:9:18", "nodeType": "VariableDeclaration", "scope": 490, "src": "6687:17:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 409, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6687:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 413, "initialValue": {"expression": {"id": 411, "name": "lockup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 401, "src": "6707:6:18", "typeDescriptions": {"typeIdentifier": "t_struct$_Lockup_$26_memory_ptr", "typeString": "struct OgvStaking.Lockup memory"}}, "id": 412, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 21, "src": "6707:13:18", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "VariableDeclarationStatement", "src": "6687:33:18"}, {"assignments": [415], "declarations": [{"constant": false, "id": 415, "mutability": "mutable", "name": "oldEnd", "nameLocation": "6738:6:18", "nodeType": "VariableDeclaration", "scope": 490, "src": "6730:14:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 414, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6730:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 418, "initialValue": {"expression": {"id": 416, "name": "lockup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 401, "src": "6747:6:18", "typeDescriptions": {"typeIdentifier": "t_struct$_Lockup_$26_memory_ptr", "typeString": "struct OgvStaking.Lockup memory"}}, "id": 417, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "end", "nodeType": "MemberAccess", "referencedDeclaration": 23, "src": "6747:10:18", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "VariableDeclarationStatement", "src": "6730:27:18"}, {"assignments": [420], "declarations": [{"constant": false, "id": 420, "mutability": "mutable", "name": "oldPoints", "nameLocation": "6775:9:18", "nodeType": "VariableDeclaration", "scope": 490, "src": "6767:17:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 419, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6767:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 423, "initialValue": {"expression": {"id": 421, "name": "lockup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 401, "src": "6787:6:18", "typeDescriptions": {"typeIdentifier": "t_struct$_Lockup_$26_memory_ptr", "typeString": "struct OgvStaking.Lockup memory"}}, "id": 422, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "points", "nodeType": "MemberAccess", "referencedDeclaration": 25, "src": "6787:13:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6767:33:18"}, {"assignments": [425, 427], "declarations": [{"constant": false, "id": 425, "mutability": "mutable", "name": "newPoints", "nameLocation": "6819:9:18", "nodeType": "VariableDeclaration", "scope": 490, "src": "6811:17:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 424, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6811:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 427, "mutability": "mutable", "name": "newEnd", "nameLocation": "6838:6:18", "nodeType": "VariableDeclaration", "scope": 490, "src": "6830:14:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 426, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6830:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 432, "initialValue": {"arguments": [{"id": 429, "name": "oldAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 410, "src": "6875:9:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 430, "name": "duration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 391, "src": "6898:8:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 428, "name": "previewPoints", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 564, "src": "6848:13:18", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$", "typeString": "function (uint256,uint256) view returns (uint256,uint256)"}}, "id": 431, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6848:68:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "6810:106:18"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 436, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 434, "name": "newEnd", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 427, "src": "6934:6:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 435, "name": "oldEnd", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 415, "src": "6943:6:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6934:15:18", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5374616b696e673a204e6577206c6f636b7570206d757374206265206c6f6e676572", "id": 437, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6951:36:18", "typeDescriptions": {"typeIdentifier": "t_stringliteral_70c051efd901941ca607823cb4b1c13317dff0c9ec5cf600ecce8566fa99a2ac", "typeString": "literal_string \"Staking: New lockup must be longer\""}, "value": "Staking: New lockup must be longer"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_70c051efd901941ca607823cb4b1c13317dff0c9ec5cf600ecce8566fa99a2ac", "typeString": "literal_string \"Staking: New lockup must be longer\""}], "id": 433, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6926:7:18", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 438, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6926:62:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 439, "nodeType": "ExpressionStatement", "src": "6926:62:18"}, {"expression": {"id": 447, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 440, "name": "lockup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 401, "src": "6998:6:18", "typeDescriptions": {"typeIdentifier": "t_struct$_Lockup_$26_memory_ptr", "typeString": "struct OgvStaking.Lockup memory"}}, "id": 442, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "end", "nodeType": "MemberAccess", "referencedDeclaration": 23, "src": "6998:10:18", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 445, "name": "newEnd", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 427, "src": "7019:6:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 444, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7011:7:18", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint128_$", "typeString": "type(uint128)"}, "typeName": {"id": 443, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "7011:7:18", "typeDescriptions": {}}}, "id": 446, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7011:15:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "src": "6998:28:18", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "id": 448, "nodeType": "ExpressionStatement", "src": "6998:28:18"}, {"expression": {"id": 453, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 449, "name": "lockup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 401, "src": "7036:6:18", "typeDescriptions": {"typeIdentifier": "t_struct$_Lockup_$26_memory_ptr", "typeString": "struct OgvStaking.Lockup memory"}}, "id": 451, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "points", "nodeType": "MemberAccess", "referencedDeclaration": 25, "src": "7036:13:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 452, "name": "newPoints", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 425, "src": "7052:9:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7036:25:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 454, "nodeType": "ExpressionStatement", "src": "7036:25:18"}, {"expression": {"id": 462, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"baseExpression": {"id": 455, "name": "lockups", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 32, "src": "7071:7:18", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Lockup_$26_storage_$dyn_storage_$", "typeString": "mapping(address => struct OgvStaking.Lockup storage ref[] storage ref)"}}, "id": 459, "indexExpression": {"expression": {"id": 456, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7079:3:18", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 457, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "7079:10:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7071:19:18", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_Lockup_$26_storage_$dyn_storage", "typeString": "struct OgvStaking.Lockup storage ref[] storage ref"}}, "id": 460, "indexExpression": {"id": 458, "name": "lockupId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 389, "src": "7091:8:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "7071:29:18", "typeDescriptions": {"typeIdentifier": "t_struct$_Lockup_$26_storage", "typeString": "struct OgvStaking.Lockup storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 461, "name": "lockup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 401, "src": "7103:6:18", "typeDescriptions": {"typeIdentifier": "t_struct$_Lockup_$26_memory_ptr", "typeString": "struct OgvStaking.Lockup memory"}}, "src": "7071:38:18", "typeDescriptions": {"typeIdentifier": "t_struct$_Lockup_$26_storage", "typeString": "struct OgvStaking.Lockup storage ref"}}, "id": 463, "nodeType": "ExpressionStatement", "src": "7071:38:18"}, {"expression": {"arguments": [{"expression": {"id": 465, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7125:3:18", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 466, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "7125:10:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 469, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 467, "name": "newPoints", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 425, "src": "7137:9:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 468, "name": "oldPoints", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 420, "src": "7149:9:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7137:21:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 464, "name": "_mint", "nodeType": "Identifier", "overloadedDeclarations": [2132], "referencedDeclaration": 2132, "src": "7119:5:18", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 470, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7119:40:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 471, "nodeType": "ExpressionStatement", "src": "7119:40:18"}, {"eventCall": {"arguments": [{"expression": {"id": 473, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7182:3:18", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 474, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "7182:10:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 475, "name": "lockupId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 389, "src": "7194:8:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 476, "name": "oldAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 410, "src": "7204:9:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 477, "name": "oldEnd", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 415, "src": "7215:6:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 478, "name": "oldPoints", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 420, "src": "7223:9:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 472, "name": "Unstake", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 68, "src": "7174:7:18", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (address,uint256,uint256,uint256,uint256)"}}, "id": 479, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7174:59:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 480, "nodeType": "EmitStatement", "src": "7169:64:18"}, {"eventCall": {"arguments": [{"expression": {"id": 482, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7254:3:18", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 483, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "7254:10:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 484, "name": "lockupId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 389, "src": "7266:8:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 485, "name": "oldAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 410, "src": "7276:9:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 486, "name": "newEnd", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 427, "src": "7287:6:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 487, "name": "newPoints", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 425, "src": "7295:9:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 481, "name": "Stake", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 56, "src": "7248:5:18", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (address,uint256,uint256,uint256,uint256)"}}, "id": 488, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7248:57:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 489, "nodeType": "EmitStatement", "src": "7243:62:18"}]}, "documentation": {"id": 387, "nodeType": "StructuredDocumentation", "src": "5822:641:18", "text": "@notice Extend a stake lockup for additional points.\n The stake end time is computed from the current time + duration, just\n like it is for new stakes. So a new stake for seven days duration and\n an old stake extended with a seven days duration would have the same\n end.\n If an extend is made before the start of staking, the start time for\n the new stake is shifted forwards to the start of staking, which also\n shifts forward the end date.\n @param lockupId the id of the old lockup to extend\n @param duration number of seconds from now to stake for"}, "functionSelector": "c89258db", "id": 491, "implemented": true, "kind": "function", "modifiers": [], "name": "extend", "nameLocation": "6477:6:18", "nodeType": "FunctionDefinition", "parameters": {"id": 392, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 389, "mutability": "mutable", "name": "lockupId", "nameLocation": "6492:8:18", "nodeType": "VariableDeclaration", "scope": 491, "src": "6484:16:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 388, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6484:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 391, "mutability": "mutable", "name": "duration", "nameLocation": "6510:8:18", "nodeType": "VariableDeclaration", "scope": 491, "src": "6502:16:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 390, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6502:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6483:36:18"}, "returnParameters": {"id": 393, "nodeType": "ParameterList", "parameters": [], "src": "6529:0:18"}, "scope": 727, "src": "6468:844:18", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 563, "nodeType": "Block", "src": "7760:430:18", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 506, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 504, "name": "duration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 496, "src": "7778:8:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"hexValue": "37", "id": 505, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7790:6:18", "subdenomination": "days", "typeDescriptions": {"typeIdentifier": "t_rational_604800_by_1", "typeString": "int_const 604800"}, "value": "7"}, "src": "7778:18:18", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5374616b696e673a20546f6f2073686f7274", "id": 507, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7798:20:18", "typeDescriptions": {"typeIdentifier": "t_stringliteral_38e1c554f41a064a892f10b1178a72e1abb4177a0010e35038e96ebec4ad94aa", "typeString": "literal_string \"Staking: Too short\""}, "value": "Staking: Too short"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_38e1c554f41a064a892f10b1178a72e1abb4177a0010e35038e96ebec4ad94aa", "typeString": "literal_string \"Staking: Too short\""}], "id": 503, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7770:7:18", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 508, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7770:49:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 509, "nodeType": "ExpressionStatement", "src": "7770:49:18"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 513, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 511, "name": "duration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 496, "src": "7837:8:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"hexValue": "31343631", "id": 512, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7849:9:18", "subdenomination": "days", "typeDescriptions": {"typeIdentifier": "t_rational_126230400_by_1", "typeString": "int_const 126230400"}, "value": "1461"}, "src": "7837:21:18", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5374616b696e673a20546f6f206c6f6e67", "id": 514, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7860:19:18", "typeDescriptions": {"typeIdentifier": "t_stringliteral_ed7b53d9950697bcde3253b7494f5c32f212ed9ae4b86a74f2c4e5078aa9541d", "typeString": "literal_string \"Staking: Too long\""}, "value": "Staking: Too long"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_ed7b53d9950697bcde3253b7494f5c32f212ed9ae4b86a74f2c4e5078aa9541d", "typeString": "literal_string \"Staking: Too long\""}], "id": 510, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7829:7:18", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 515, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7829:51:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 516, "nodeType": "ExpressionStatement", "src": "7829:51:18"}, {"assignments": [518], "declarations": [{"constant": false, "id": 518, "mutability": "mutable", "name": "start", "nameLocation": "7898:5:18", "nodeType": "VariableDeclaration", "scope": 563, "src": "7890:13:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 517, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7890:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 527, "initialValue": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 522, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 519, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "7906:5:18", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 520, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "7906:15:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 521, "name": "epoch", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16, "src": "7924:5:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7906:23:18", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 525, "name": "epoch", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16, "src": "7950:5:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 526, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "7906:49:18", "trueExpression": {"expression": {"id": 523, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "7932:5:18", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 524, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "7932:15:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7890:65:18"}, {"assignments": [529], "declarations": [{"constant": false, "id": 529, "mutability": "mutable", "name": "end", "nameLocation": "7973:3:18", "nodeType": "VariableDeclaration", "scope": 563, "src": "7965:11:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 528, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7965:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 533, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 532, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 530, "name": "start", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 518, "src": "7979:5:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 531, "name": "duration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 496, "src": "7987:8:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7979:16:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7965:30:18"}, {"assignments": [535], "declarations": [{"constant": false, "id": 535, "mutability": "mutable", "name": "endYearpoc", "nameLocation": "8013:10:18", "nodeType": "VariableDeclaration", "scope": 563, "src": "8005:18:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 534, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8005:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 545, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 544, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 541, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 538, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 536, "name": "end", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 529, "src": "8028:3:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 537, "name": "epoch", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16, "src": "8034:5:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8028:11:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 539, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "8027:13:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "31653138", "id": 540, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8043:4:18", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "value": "1e18"}, "src": "8027:20:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 542, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "8026:22:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "333635", "id": 543, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8051:8:18", "subdenomination": "days", "typeDescriptions": {"typeIdentifier": "t_rational_31536000_by_1", "typeString": "int_const 31536000"}, "value": "365"}, "src": "8026:33:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "8005:54:18"}, {"assignments": [547], "declarations": [{"constant": false, "id": 547, "mutability": "mutable", "name": "multiplier", "nameLocation": "8077:10:18", "nodeType": "VariableDeclaration", "scope": 563, "src": "8069:18:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 546, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8069:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 553, "initialValue": {"arguments": [{"id": 550, "name": "YEAR_BASE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19, "src": "8109:9:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 551, "name": "endYearpoc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 535, "src": "8120:10:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 548, "name": "PRBMathUD60x18", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3200, "src": "8090:14:18", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_PRBMathUD60x18_$3200_$", "typeString": "type(library PRBMathUD60x18)"}}, "id": 549, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "pow", "nodeType": "MemberAccess", "referencedDeclaration": 3084, "src": "8090:18:18", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 552, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8090:41:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "8069:62:18"}, {"expression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 559, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 556, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 554, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 494, "src": "8150:6:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 555, "name": "multiplier", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 547, "src": "8159:10:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8150:19:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 557, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "8149:21:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "31653138", "id": 558, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8173:4:18", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "value": "1e18"}, "src": "8149:28:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 560, "name": "end", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 529, "src": "8179:3:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 561, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "8148:35:18", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$", "typeString": "tuple(uint256,uint256)"}}, "functionReturnParameters": 502, "id": 562, "nodeType": "Return", "src": "8141:42:18"}]}, "documentation": {"id": 492, "nodeType": "StructuredDocumentation", "src": "7318:313:18", "text": "@notice Preview the number of points that would be returned for the\n given amount and duration.\n @param amount OGV to be staked\n @param duration number of seconds to stake for\n @return points staking points that would be returned\n @return end staking period end date"}, "functionSelector": "4fd0e648", "id": 564, "implemented": true, "kind": "function", "modifiers": [], "name": "previewPoints", "nameLocation": "7645:13:18", "nodeType": "FunctionDefinition", "parameters": {"id": 497, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 494, "mutability": "mutable", "name": "amount", "nameLocation": "7667:6:18", "nodeType": "VariableDeclaration", "scope": 564, "src": "7659:14:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 493, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7659:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 496, "mutability": "mutable", "name": "duration", "nameLocation": "7683:8:18", "nodeType": "VariableDeclaration", "scope": 564, "src": "7675:16:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 495, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7675:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7658:34:18"}, "returnParameters": {"id": 502, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 499, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 564, "src": "7738:7:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 498, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7738:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 501, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 564, "src": "7747:7:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 500, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7747:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7737:18:18"}, "scope": 727, "src": "7636:554:18", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 573, "nodeType": "Block", "src": "8307:44:18", "statements": [{"expression": {"arguments": [{"expression": {"id": 569, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "8333:3:18", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 570, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "8333:10:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 568, "name": "_collectRewards", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 726, "src": "8317:15:18", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 571, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8317:27:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 572, "nodeType": "ExpressionStatement", "src": "8317:27:18"}]}, "documentation": {"id": 565, "nodeType": "StructuredDocumentation", "src": "8224:43:18", "text": "@notice Collect all earned OGV rewards."}, "functionSelector": "70bb45b3", "id": 574, "implemented": true, "kind": "function", "modifiers": [], "name": "collectRewards", "nameLocation": "8281:14:18", "nodeType": "FunctionDefinition", "parameters": {"id": 566, "nodeType": "ParameterList", "parameters": [], "src": "8295:2:18"}, "returnParameters": {"id": 567, "nodeType": "ParameterList", "parameters": [], "src": "8307:0:18"}, "scope": 727, "src": "8272:79:18", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 626, "nodeType": "Block", "src": "8622:445:18", "statements": [{"assignments": [583], "declarations": [{"constant": false, "id": 583, "mutability": "mutable", "name": "supply", "nameLocation": "8640:6:18", "nodeType": "VariableDeclaration", "scope": 626, "src": "8632:14:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 582, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8632:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 586, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 584, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1280, "src": "8649:11:18", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 585, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8649:13:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "8632:30:18"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 589, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 587, "name": "supply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 583, "src": "8676:6:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 588, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8686:1:18", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "8676:11:18", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 593, "nodeType": "IfStatement", "src": "8672:95:18", "trueBody": {"id": 592, "nodeType": "Block", "src": "8689:78:18", "statements": [{"expression": {"hexValue": "30", "id": 590, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8710:1:18", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "functionReturnParameters": 581, "id": 591, "nodeType": "Return", "src": "8703:8:18"}]}}, {"assignments": [595], "declarations": [{"constant": false, "id": 595, "mutability": "mutable", "name": "_accRewardPerShare", "nameLocation": "8784:18:18", "nodeType": "VariableDeclaration", "scope": 626, "src": "8776:26:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 594, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8776:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 597, "initialValue": {"id": 596, "name": "accRewardPerShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 44, "src": "8805:17:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "8776:46:18"}, {"expression": {"id": 607, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 598, "name": "_accRewardPerShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 595, "src": "8832:18:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 606, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 603, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 599, "name": "rewardsSource", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38, "src": "8855:13:18", "typeDescriptions": {"typeIdentifier": "t_contract$_RewardsSource_$1181", "typeString": "contract RewardsSource"}}, "id": 600, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "previewRewards", "nodeType": "MemberAccess", "referencedDeclaration": 876, "src": "8855:28:18", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 601, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8855:30:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "31653132", "id": 602, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8888:4:18", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000_by_1", "typeString": "int_const 1000000000000"}, "value": "1e12"}, "src": "8855:37:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 604, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "8854:39:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"id": 605, "name": "supply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 583, "src": "8896:6:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8854:48:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8832:70:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 608, "nodeType": "ExpressionStatement", "src": "8832:70:18"}, {"assignments": [610], "declarations": [{"constant": false, "id": 610, "mutability": "mutable", "name": "netRewardsPerShare", "nameLocation": "8920:18:18", "nodeType": "VariableDeclaration", "scope": 626, "src": "8912:26:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 609, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8912:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 616, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 615, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 611, "name": "_accRewardPerShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 595, "src": "8941:18:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"baseExpression": {"id": 612, "name": "rewardDebtPerShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 42, "src": "8974:18:18", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 614, "indexExpression": {"id": 613, "name": "user", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 577, "src": "8993:4:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8974:24:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8941:57:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "8912:86:18"}, {"expression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 624, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 621, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 618, "name": "user", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 577, "src": "9026:4:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 617, "name": "balanceOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1294, "src": "9016:9:18", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view returns (uint256)"}}, "id": 619, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9016:15:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 620, "name": "netRewardsPerShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 610, "src": "9034:18:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9016:36:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 622, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "9015:38:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "31653132", "id": 623, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9056:4:18", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000_by_1", "typeString": "int_const 1000000000000"}, "value": "1e12"}, "src": "9015:45:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 581, "id": 625, "nodeType": "Return", "src": "9008:52:18"}]}, "documentation": {"id": 575, "nodeType": "StructuredDocumentation", "src": "8357:190:18", "text": "@notice Shows the amount of OGV a user would receive if they collected\n rewards at this time.\n @param user to preview rewards for\n @return OGV rewards amount"}, "functionSelector": "f166e920", "id": 627, "implemented": true, "kind": "function", "modifiers": [], "name": "previewRewards", "nameLocation": "8561:14:18", "nodeType": "FunctionDefinition", "parameters": {"id": 578, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 577, "mutability": "mutable", "name": "user", "nameLocation": "8584:4:18", "nodeType": "VariableDeclaration", "scope": 627, "src": "8576:12:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 576, "name": "address", "nodeType": "ElementaryTypeName", "src": "8576:7:18", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "8575:14:18"}, "returnParameters": {"id": 581, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 580, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 627, "src": "8613:7:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 579, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8613:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8612:9:18"}, "scope": 727, "src": "8552:515:18", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 725, "nodeType": "Block", "src": "9607:796:18", "statements": [{"assignments": [634], "declarations": [{"constant": false, "id": 634, "mutability": "mutable", "name": "supply", "nameLocation": "9625:6:18", "nodeType": "VariableDeclaration", "scope": 725, "src": "9617:14:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 633, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9617:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 637, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 635, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1280, "src": "9634:11:18", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 636, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9634:13:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9617:30:18"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 640, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 638, "name": "supply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 634, "src": "9661:6:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 639, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9670:1:18", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "9661:10:18", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 681, "nodeType": "IfStatement", "src": "9657:375:18", "trueBody": {"id": 680, "nodeType": "Block", "src": "9673:359:18", "statements": [{"assignments": [642], "declarations": [{"constant": false, "id": 642, "mutability": "mutable", "name": "preBalance", "nameLocation": "9695:10:18", "nodeType": "VariableDeclaration", "scope": 680, "src": "9687:18:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 641, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9687:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 650, "initialValue": {"arguments": [{"arguments": [{"id": 647, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "9730:4:18", "typeDescriptions": {"typeIdentifier": "t_contract$_OgvStaking_$727", "typeString": "contract OgvStaking"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_OgvStaking_$727", "typeString": "contract OgvStaking"}], "id": 646, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9722:7:18", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 645, "name": "address", "nodeType": "ElementaryTypeName", "src": "9722:7:18", "typeDescriptions": {}}}, "id": 648, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9722:13:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 643, "name": "ogv", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35, "src": "9708:3:18", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1781", "typeString": "contract ERC20"}}, "id": 644, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 1294, "src": "9708:13:18", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 649, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9708:28:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9687:49:18"}, {"clauses": [{"block": {"id": 654, "nodeType": "Block", "src": "9785:2:18", "statements": []}, "errorName": "", "id": 655, "nodeType": "TryCatchClause", "src": "9785:2:18"}, {"block": {"id": 656, "nodeType": "Block", "src": "9794:91:18", "statements": []}, "errorName": "", "id": 657, "nodeType": "TryCatchClause", "src": "9788:97:18"}], "externalCall": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 651, "name": "rewardsSource", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38, "src": "9754:13:18", "typeDescriptions": {"typeIdentifier": "t_contract$_RewardsSource_$1181", "typeString": "contract RewardsSource"}}, "id": 652, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "collectRewards", "nodeType": "MemberAccess", "referencedDeclaration": 862, "src": "9754:28:18", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$", "typeString": "function () external returns (uint256)"}}, "id": 653, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9754:30:18", "tryCall": true, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 658, "nodeType": "TryStatement", "src": "9750:135:18"}, {"assignments": [660], "declarations": [{"constant": false, "id": 660, "mutability": "mutable", "name": "collected", "nameLocation": "9906:9:18", "nodeType": "VariableDeclaration", "scope": 680, "src": "9898:17:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 659, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9898:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 670, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 669, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"arguments": [{"id": 665, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "9940:4:18", "typeDescriptions": {"typeIdentifier": "t_contract$_OgvStaking_$727", "typeString": "contract OgvStaking"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_OgvStaking_$727", "typeString": "contract OgvStaking"}], "id": 664, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9932:7:18", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 663, "name": "address", "nodeType": "ElementaryTypeName", "src": "9932:7:18", "typeDescriptions": {}}}, "id": 666, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9932:13:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 661, "name": "ogv", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35, "src": "9918:3:18", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1781", "typeString": "contract ERC20"}}, "id": 662, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 1294, "src": "9918:13:18", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 667, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9918:28:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 668, "name": "preBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 642, "src": "9949:10:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9918:41:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9898:61:18"}, {"expression": {"id": 678, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 671, "name": "accRewardPerShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 44, "src": "9973:17:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 677, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 674, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 672, "name": "collected", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 660, "src": "9995:9:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "31653132", "id": 673, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10007:4:18", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000_by_1", "typeString": "int_const 1000000000000"}, "value": "1e12"}, "src": "9995:16:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 675, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "9994:18:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"id": 676, "name": "supply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 634, "src": "10015:6:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9994:27:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9973:48:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 679, "nodeType": "ExpressionStatement", "src": "9973:48:18"}]}}, {"assignments": [683], "declarations": [{"constant": false, "id": 683, "mutability": "mutable", "name": "netRewardsPerShare", "nameLocation": "10049:18:18", "nodeType": "VariableDeclaration", "scope": 725, "src": "10041:26:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 682, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10041:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 689, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 688, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 684, "name": "accRewardPerShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 44, "src": "10070:17:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"baseExpression": {"id": 685, "name": "rewardDebtPerShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 42, "src": "10102:18:18", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 687, "indexExpression": {"id": 686, "name": "user", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 630, "src": "10121:4:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10102:24:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10070:56:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "10041:85:18"}, {"assignments": [691], "declarations": [{"constant": false, "id": 691, "mutability": "mutable", "name": "netRewards", "nameLocation": "10144:10:18", "nodeType": "VariableDeclaration", "scope": 725, "src": "10136:18:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 690, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10136:7:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 700, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 699, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 696, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 693, "name": "user", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 630, "src": "10168:4:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 692, "name": "balanceOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1294, "src": "10158:9:18", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view returns (uint256)"}}, "id": 694, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10158:15:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 695, "name": "netRewardsPerShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 683, "src": "10176:18:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10158:36:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 697, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "10157:38:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "31653132", "id": 698, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10198:4:18", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000_by_1", "typeString": "int_const 1000000000000"}, "value": "1e12"}, "src": "10157:45:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "10136:66:18"}, {"expression": {"id": 705, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 701, "name": "rewardDebtPerShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 42, "src": "10212:18:18", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 703, "indexExpression": {"id": 702, "name": "user", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 630, "src": "10231:4:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "10212:24:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 704, "name": "accRewardPerShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 44, "src": "10239:17:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10212:44:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 706, "nodeType": "ExpressionStatement", "src": "10212:44:18"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 709, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 707, "name": "netRewards", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 691, "src": "10270:10:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 708, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10284:1:18", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "10270:15:18", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 712, "nodeType": "IfStatement", "src": "10266:52:18", "trueBody": {"id": 711, "nodeType": "Block", "src": "10287:31:18", "statements": [{"functionReturnParameters": 632, "id": 710, "nodeType": "Return", "src": "10301:7:18"}]}}, {"expression": {"arguments": [{"id": 716, "name": "user", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 630, "src": "10340:4:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 717, "name": "netRewards", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 691, "src": "10346:10:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 713, "name": "ogv", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35, "src": "10327:3:18", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1781", "typeString": "contract ERC20"}}, "id": 715, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transfer", "nodeType": "MemberAccess", "referencedDeclaration": 1319, "src": "10327:12:18", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) external returns (bool)"}}, "id": 718, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10327:30:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 719, "nodeType": "ExpressionStatement", "src": "10327:30:18"}, {"eventCall": {"arguments": [{"id": 721, "name": "user", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 630, "src": "10379:4:18", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 722, "name": "netRewards", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 691, "src": "10385:10:18", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 720, "name": "Reward", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 74, "src": "10372:6:18", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 723, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10372:24:18", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 724, "nodeType": "EmitStatement", "src": "10367:29:18"}]}, "documentation": {"id": 628, "nodeType": "StructuredDocumentation", "src": "9073:481:18", "text": "@dev Internal function to handle rewards accounting.\n 1. Collect new rewards for everyone\n 2. Calculate this user's rewards and accounting\n 3. Distribute this user's rewards\n This function *must* be called before any user balance changes.\n This will always update the user's rewardDebtPerShare to match\n accRewardPerShare, which is essential to the accounting.\n @param user to collect rewards for"}, "id": 726, "implemented": true, "kind": "function", "modifiers": [], "name": "_collectRewards", "nameLocation": "9568:15:18", "nodeType": "FunctionDefinition", "parameters": {"id": 631, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 630, "mutability": "mutable", "name": "user", "nameLocation": "9592:4:18", "nodeType": "VariableDeclaration", "scope": 726, "src": "9584:12:18", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 629, "name": "address", "nodeType": "ElementaryTypeName", "src": "9584:7:18", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "9583:14:18"}, "returnParameters": {"id": 632, "nodeType": "ParameterList", "parameters": [], "src": "9607:0:18"}, "scope": 727, "src": "9559:844:18", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}], "scope": 728, "src": "837:9568:18", "usedErrors": [5002, 5122, 5139]}], "src": "32:10374:18"}, "bytecode": "", "bytecodeSha1": "36e11fe16032d6133b049d27ac1408392c452544", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.10+commit.fc410830"}, "contractName": "OgvStaking", "coverageMap": {"branches": {"0": {}, "1": {"ERC20._approve": {"219": [10250, 10269, true], "220": [10328, 10349, true]}, "ERC20._burn": {"221": [9203, 9224, true], "222": [9394, 9418, true]}, "ERC20._mint": {"223": [8494, 8515, true]}, "ERC20.decreaseAllowance": {"218": [6811, 6846, true]}}, "12": {"EIP712._domainSeparatorV4": {"216": [3219, 3248, false], "217": [3252, 3285, false]}}, "15": {"PRBMath.exp2": {"251": [5351, 5377, false], "252": [5474, 5500, false], "253": [5597, 5623, false], "254": [5720, 5746, false], "255": [5843, 5868, false], "256": [5965, 5990, false], "257": [6087, 6112, false], "258": [6209, 6234, false], "259": [6331, 6355, false], "260": [6452, 6476, false], "261": [6573, 6597, false], "262": [6694, 6718, false], "263": [6815, 6838, false], "264": [6935, 6958, false], "265": [7055, 7078, false], "266": [7175, 7198, false], "267": [7295, 7317, false], "268": [7414, 7436, false], "269": [7533, 7555, false], "270": [7652, 7674, false], "271": [7771, 7792, false], "272": [7889, 7910, false], "273": [8007, 8028, false], "274": [8125, 8146, false], "275": [8243, 8263, false], "276": [8360, 8380, false], "277": [8477, 8497, false], "278": [8594, 8614, false], "279": [8711, 8730, false], "280": [8827, 8846, false], "281": [8943, 8962, false], "282": [9059, 9078, false], "283": [9175, 9193, false], "284": [9290, 9308, false], "285": [9405, 9423, false], "286": [9520, 9538, false], "287": [9635, 9652, false], "288": [9749, 9766, false], "289": [9863, 9880, false], "290": [9977, 9994, false], "291": [10091, 10107, false], "292": [10204, 10220, false], "293": [10317, 10333, false], "294": [10430, 10446, false], "295": [10543, 10558, false], "296": [10655, 10670, false], "297": [10767, 10782, false], "298": [10879, 10894, false], "299": [10991, 11005, false], "300": [11102, 11116, false], "301": [11213, 11227, false], "302": [11324, 11338, false], "303": [11435, 11448, false], "304": [11545, 11558, false], "305": [11655, 11668, false], "306": [11765, 11778, false], "307": [11875, 11887, false], "308": [11984, 11996, false], "309": [12093, 12105, false], "310": [12202, 12214, false], "311": [12311, 12322, false], "312": [12419, 12430, false], "313": [12527, 12538, false], "314": [12635, 12646, false]}, "PRBMath.mostSignificantBit": {"241": [13836, 13847, false], "242": [13920, 13930, false], "243": [14001, 14011, false], "244": [14082, 14092, false], "245": [14163, 14172, false], "246": [14241, 14250, false], "247": [14319, 14328, false], "248": [14397, 14406, false]}, "PRBMath.mulDivFixedPoint": {"249": [20498, 20512, false], "250": [20792, 20802, false]}}, "16": {"PRBMathUD60x18.exp2": {"320": [5744, 5755, false]}, "PRBMathUD60x18.log2": {"317": [19466, 19475, false], "318": [20112, 20122, false], "319": [20534, 20548, false]}, "PRBMathUD60x18.pow": {"315": [22253, 22259, false], "316": [22284, 22290, true]}}, "18": {"OgvStaking._collectRewards": {"210": [9661, 9671, false], "211": [10270, 10285, false]}, "OgvStaking._stake": {"212": [4183, 4199, true], "213": [4250, 4277, true], "214": [4317, 4327, true], "215": [4504, 4547, true]}, "OgvStaking.extend": {"208": [6934, 6949, true]}, "OgvStaking.previewPoints": {"205": [7778, 7796, true], "206": [7837, 7858, true], "207": [7906, 7929, true]}, "OgvStaking.previewRewards": {"209": [8676, 8687, false]}, "OgvStaking.unstake": {"203": [5408, 5430, true], "204": [5487, 5495, true]}}, "19": {}, "2": {}, "3": {"ERC20Votes._checkpointsLookup": {"231": [4965, 4999, false], "232": [5123, 5132, true]}, "ERC20Votes._mint": {"233": [6435, 6464, true]}, "ERC20Votes._moveVotingPower": {"237": [7919, 7929, false], "238": [7933, 7943, false], "239": [7963, 7980, false], "240": [8198, 8215, false]}, "ERC20Votes._writeCheckpoint": {"234": [8698, 8706, true], "235": [8790, 8797, false], "236": [8801, 8841, false]}, "ERC20Votes.delegateBySig": {"229": [5637, 5662, true], "230": [5910, 5936, true]}, "ERC20Votes.getPastTotalSupply": {"227": [3483, 3509, true]}, "ERC20Votes.getPastVotes": {"226": [2950, 2976, true]}, "ERC20Votes.getVotes": {"228": [2574, 2582, true]}}, "4": {}, "5": {"ERC20Permit.permit": {"224": [2164, 2191, true], "225": [2475, 2490, true]}}, "6": {}, "8": {}}, "statements": {"0": {}, "1": {"ERC20._approve": {"54": [10242, 10310], "55": [10320, 10388], "56": [10399, 10435], "57": [10445, 10482]}, "ERC20._burn": {"89": [9195, 9262], "90": [9386, 9457], "91": [9491, 9535], "92": [9555, 9577], "93": [9588, 9630], "94": [9641, 9689]}, "ERC20._mint": {"112": [8486, 8551], "113": [8622, 8644], "114": [8654, 8682], "115": [8692, 8734], "116": [8745, 8793]}, "ERC20.allowance": {"49": [4084, 4118]}, "ERC20.approve": {"6": [4570, 4602], "7": [4612, 4623]}, "ERC20.balanceOf": {"4": [3501, 3526]}, "ERC20.decimals": {"2": [3168, 3177]}, "ERC20.decreaseAllowance": {"32": [6803, 6888], "33": [6922, 6982], "34": [7003, 7014]}, "ERC20.increaseAllowance": {"17": [6015, 6079]}, "ERC20.totalSupply": {"1": [3324, 3343]}}, "12": {"EIP712._buildDomainSeparator": {"66": [3616, 3707]}, "EIP712._domainSeparatorV4": {"65": [3301, 3332], "67": [3363, 3434]}, "EIP712._hashTypedDataV4": {"85": [4435, 4497]}}, "15": {"PRBMath.exp2": {"137": [5397, 5442], "138": [5520, 5565], "139": [5643, 5688], "140": [5766, 5811], "141": [5888, 5933], "142": [6010, 6055], "143": [6132, 6177], "144": [6254, 6299], "145": [6375, 6420], "146": [6496, 6541], "147": [6617, 6662], "148": [6738, 6783], "149": [6858, 6903], "150": [6978, 7023], "151": [7098, 7143], "152": [7218, 7263], "153": [7337, 7382], "154": [7456, 7501], "155": [7575, 7620], "156": [7694, 7739], "157": [7812, 7857], "158": [7930, 7975], "159": [8048, 8093], "160": [8166, 8211], "161": [8283, 8328], "162": [8400, 8445], "163": [8517, 8562], "164": [8634, 8679], "165": [8750, 8795], "166": [8866, 8911], "167": [8982, 9027], "168": [9098, 9143], "169": [9213, 9258], "170": [9328, 9373], "171": [9443, 9488], "172": [9558, 9603], "173": [9672, 9717], "174": [9786, 9831], "175": [9900, 9945], "176": [10014, 10059], "177": [10127, 10172], "178": [10240, 10285], "179": [10353, 10398], "180": [10466, 10511], "181": [10578, 10623], "182": [10690, 10735], "183": [10802, 10847], "184": [10914, 10959], "185": [11025, 11070], "186": [11136, 11181], "187": [11247, 11292], "188": [11358, 11403], "189": [11468, 11513], "190": [11578, 11623], "191": [11688, 11733], "192": [11798, 11843], "193": [11907, 11952], "194": [12016, 12061], "195": [12125, 12170], "196": [12234, 12279], "197": [12342, 12387], "198": [12450, 12495], "199": [12558, 12603], "200": [12666, 12711], "201": [13286, 13301], "202": [13315, 13343]}, "PRBMath.mostSignificantBit": {"119": [13863, 13872], "120": [13886, 13896], "121": [13946, 13954], "122": [13968, 13977], "123": [14027, 14035], "124": [14049, 14058], "125": [14108, 14116], "126": [14130, 14139], "127": [14188, 14195], "128": [14209, 14217], "129": [14266, 14273], "130": [14287, 14295], "131": [14344, 14351], "132": [14365, 14373], "133": [14466, 14474]}, "PRBMath.mulDivFixedPoint": {"134": [20494, 20586], "135": [20846, 20884], "136": [20902, 20915]}}, "16": {"PRBMathUD60x18.exp2": {"108": [5740, 5823], "109": [6083, 6113]}, "PRBMathUD60x18.log2": {"100": [19462, 19544], "101": [19949, 19967], "102": [20142, 20155], "103": [20435, 20454], "104": [20635, 20650], "105": [20729, 20736], "106": [20404, 20415]}, "PRBMathUD60x18.mul": {"107": [21354, 21393]}, "PRBMathUD60x18.pow": {"71": [22275, 22311], "72": [22342, 22372]}}, "18": {"OgvStaking._collectRewards": {"58": [9973, 10021], "59": [10212, 10256], "60": [10301, 10308], "61": [10327, 10357], "62": [10367, 10396]}, "OgvStaking._stake": {"76": [4175, 4232], "77": [4242, 4299], "78": [4309, 4351], "79": [4483, 4601], "80": [4611, 4630], "81": [4640, 4842], "82": [4852, 4869], "83": [4879, 4930], "84": [4970, 5029]}, "OgvStaking.collectRewards": {"25": [8317, 8344]}, "OgvStaking.extend": {"38": [6588, 6615], "39": [6926, 6988], "40": [6998, 7026], "41": [7036, 7061], "42": [7071, 7109], "43": [7119, 7159], "44": [7169, 7233], "45": [7243, 7305]}, "OgvStaking.name": {"0": [2141, 2155]}, "OgvStaking.previewPoints": {"20": [7770, 7819], "21": [7829, 7880], "22": [8141, 8183]}, "OgvStaking.previewRewards": {"51": [8703, 8711], "52": [8832, 8902], "53": [9008, 9060]}, "OgvStaking.stake": {"26": [3285, 3313], "27": [3804, 3840]}, "OgvStaking.transferFrom": {"8": [2515, 2552]}, "OgvStaking.unstake": {"9": [5400, 5469], "10": [5479, 5537], "11": [5547, 5574], "12": [5584, 5620], "13": [5677, 5702], "14": [5712, 5744], "15": [5754, 5809]}}, "19": {}, "2": {}, "3": {"ERC20Votes._add": {"117": [9146, 9158]}, "ERC20Votes._afterTokenTransfer": {"118": [7193, 7249]}, "ERC20Votes._burn": {"63": [6763, 6791], "64": [6802, 6862]}, "ERC20Votes._checkpointsLookup": {"68": [5019, 5029], "69": [5068, 5081], "70": [5116, 5160]}, "ERC20Votes._delegate": {"73": [7610, 7643], "74": [7654, 7713], "75": [7724, 7786]}, "ERC20Votes._mint": {"86": [6389, 6417], "87": [6427, 6517], "88": [6528, 6583]}, "ERC20Votes._moveVotingPower": {"110": [8113, 8165], "111": [8343, 8395]}, "ERC20Votes._subtract": {"95": [9253, 9265]}, "ERC20Votes._writeCheckpoint": {"96": [8686, 8733], "97": [8743, 8775], "98": [8857, 8909], "99": [8940, 9046]}, "ERC20Votes.checkpoints": {"50": [1866, 1899]}, "ERC20Votes.delegate": {"23": [5319, 5353]}, "ERC20Votes.delegateBySig": {"35": [5629, 5696], "36": [5902, 5966], "37": [5976, 6004]}, "ERC20Votes.delegates": {"3": [2311, 2337]}, "ERC20Votes.getPastTotalSupply": {"29": [3475, 3545], "30": [3555, 3618]}, "ERC20Votes.getPastVotes": {"18": [2942, 3012], "19": [3022, 3083]}, "ERC20Votes.getVotes": {"31": [2567, 2625]}, "ERC20Votes.numCheckpoints": {"24": [2069, 2123]}}, "4": {}, "5": {"ERC20Permit.DOMAIN_SEPARATOR": {"16": [2964, 2991]}, "ERC20Permit.nonces": {"28": [2723, 2754]}, "ERC20Permit.permit": {"46": [2156, 2225], "47": [2467, 2525], "48": [2536, 2567]}}, "6": {}, "8": {"Context._msgSender": {"5": [712, 729]}}}}, "dependencies": ["OpenZeppelin/openzeppelin-contracts@4.6.0/Context", "OpenZeppelin/openzeppelin-contracts@4.6.0/EIP712", "OpenZeppelin/openzeppelin-contracts@4.6.0/ERC20", "OpenZeppelin/openzeppelin-contracts@4.6.0/ERC20Permit", "OpenZeppelin/openzeppelin-contracts@4.6.0/ERC20Votes", "OpenZeppelin/openzeppelin-contracts@4.6.0/IERC20", "OpenZeppelin/openzeppelin-contracts@4.6.0/IERC20Metadata", "OpenZeppelin/openzeppelin-contracts@4.6.0/IERC20Permit", "OpenZeppelin/openzeppelin-contracts@4.6.0/IVotes", "Mintable", "paulrberg/prb-math@2.5.0/PRBMath", "paulrberg/prb-math@2.5.0/PRBMathUD60x18", "RewardsSource"], "deployedBytecode": "608060405234801561001057600080fd5b50600436106102115760003560e01c80637628a37d11610125578063a9059cbb116100ad578063d505accf1161007c578063d505accf1461050e578063dd62ed3e14610521578063f1127ed814610534578063f166e92014610571578063f7240d2f1461058457600080fd5b8063a9059cbb146104a1578063c3cda520146104af578063c89258db146104c2578063c93d0b1e146104d557600080fd5b8063900cf0cf116100f4578063900cf0cf1461044b578063939d62371461047257806395d89b41146102165780639ab24eb01461047b578063a457c2d71461048e57600080fd5b80637628a37d146103ff5780637b0472f0146104125780637ecebe00146104255780638e539e8c1461043857600080fd5b806339509351116101a8578063587cde1e11610177578063587cde1e146103675780635c19a95c146103935780636fcfff45146103a657806370a08231146103ce57806370bb45b3146103f757600080fd5b806339509351146102f95780633a46b1a81461030c5780634423bf571461031f5780634fd0e6481461033f57600080fd5b806323b872dd116101e457806323b872dd146102ba5780632e17de78146102cd578063313ce567146102e25780633644e515146102f157600080fd5b806306fdde0314610216578063095ea7b314610246578063142561cf1461026957806318160ddd146102a8575b600080fd5b60408051808201825260058152643b32a7a3ab60d91b6020820152905161023d9190613117565b60405180910390f35b610259610254366004613183565b6105ab565b604051901515815260200161023d565b6102907f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161023d565b6002545b60405190815260200161023d565b6102596102c83660046131ad565b6105c5565b6102e06102db3660046131e9565b610615565b005b6040516012815260200161023d565b6102ac610868565b610259610307366004613183565b610877565b6102ac61031a366004613183565b610899565b6102ac61032d366004613202565b600b6020526000908152604090205481565b61035261034d36600461321d565b610913565b6040805192835260208301919091520161023d565b610290610375366004613202565b6001600160a01b039081166000908152600760205260409020541690565b6102e06103a1366004613202565b610a97565b6103b96103b4366004613202565b610aa4565b60405163ffffffff909116815260200161023d565b6102ac6103dc366004613202565b6001600160a01b031660009081526020819052604090205490565b6102e0610ac6565b6102e061040d36600461323f565b610ad1565b6102e061042036600461321d565b610ae1565b6102ac610433366004613202565b610af0565b6102ac6104463660046131e9565b610b0e565b6102ac7f000000000000000000000000000000000000000000000000000000000000000081565b6102ac600c5481565b6102ac610489366004613202565b610b6a565b61025961049c366004613183565b610bf0565b6102596102c8366004613183565b6102e06104bd366004613285565b610c76565b6102e06104d036600461321d565b610dca565b6104e86104e3366004613183565b610fd9565b604080516001600160801b0394851681529390921660208401529082015260600161023d565b6102e061051c3660046132dd565b61102a565b6102ac61052f366004613347565b6111ac565b61054761054236600461337a565b6111d7565b60408051825163ffffffff1681526020928301516001600160e01b0316928101929092520161023d565b6102ac61057f366004613202565b61125a565b6102907f000000000000000000000000000000000000000000000000000000000000000081565b6000336105b981858561138f565b60019150505b92915050565b60405162461bcd60e51b815260206004820152601b60248201527f5374616b696e673a205472616e73666572732064697361626c6564000000000060448201526000906064015b60405180910390fd5b336000908152600a60205260408120805483908110610636576106366133ba565b600091825260209182902060408051606081018252600290930290910180546001600160801b03808216808652600160801b90920416948401859052600190910154918301829052919350909190428211156106df5760405162461bcd60e51b815260206004820152602260248201527f5374616b696e673a20456e64206f66206c6f636b7570206e6f74207265616368604482015261195960f21b606482015260840161060c565b8161073a5760405162461bcd60e51b815260206004820152602560248201527f5374616b696e673a20416c726561647920756e7374616b65642074686973206c60448201526406f636b75760dc1b606482015260840161060c565b610743336114b3565b336000908152600a60205260409020805486908110610764576107646133ba565b600091825260208220600290910201818155600101556107843382611810565b60405163a9059cbb60e01b8152336004820152602481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156107f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081591906133d0565b5060408051868152602081018590529081018390526060810182905233907f05b744e3e9358bc00ba3cc0c6606a4d6536134dba00b2d2ee4b5de169acd6427906080015b60405180910390a25050505050565b600061087261182e565b905090565b6000336105b981858561088a83836111ac565b6108949190613408565b61138f565b60004382106108ea5760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604482015260640161060c565b6001600160a01b038316600090815260086020526040902061090c9083611955565b9392505050565b60008062093a8083101561095e5760405162461bcd60e51b815260206004820152601260248201527114dd185ada5b99ce88151bdbc81cda1bdc9d60721b604482015260640161060c565b6307861f808311156109a65760405162461bcd60e51b81526020600482015260116024820152705374616b696e673a20546f6f206c6f6e6760781b604482015260640161060c565b60007f000000000000000000000000000000000000000000000000000000000000000042116109f5577f00000000000000000000000000000000000000000000000000000000000000006109f7565b425b90506000610a058583613408565b905060006301e13380610a387f000000000000000000000000000000000000000000000000000000000000000084613420565b610a4a90670de0b6b3a7640000613437565b610a549190613456565b90506000610a6a6718fae27693b4000083611a11565b9050670de0b6b3a7640000610a7f828a613437565b610a899190613456565b989297509195505050505050565b610aa13382611a50565b50565b6001600160a01b0381166000908152600860205260408120546105bf90611ac9565b610acf336114b3565b565b610adc838383611b32565b505050565b610aec828233611b32565b5050565b6001600160a01b0381166000908152600560205260408120546105bf565b6000438210610b5f5760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604482015260640161060c565b6105bf600983611955565b6001600160a01b0381166000908152600860205260408120548015610bdd576001600160a01b0383166000908152600860205260409020610bac600183613420565b81548110610bbc57610bbc6133ba565b600091825260209091200154600160201b90046001600160e01b0316610be0565b60005b6001600160e01b03169392505050565b60003381610bfe82866111ac565b905083811015610c5e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161060c565b610c6b828686840361138f565b506001949350505050565b83421115610cc65760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e61747572652065787069726564000000604482015260640161060c565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610d4090610d389060a00160405160208183030381529060405280519060200120611e19565b858585611e67565b9050610d69816001600160a01b0316600090815260056020526040902080546001810190915590565b8614610db75760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e636500000000000000604482015260640161060c565b610dc18188611a50565b50505050505050565b610dd3336114b3565b336000908152600a60205260408120805484908110610df457610df46133ba565b6000918252602080832060408051606081018252600290940290910180546001600160801b03808216808752600160801b90920416938501849052600190910154918401829052929450919290919080610e4e8588610913565b91509150838111610eac5760405162461bcd60e51b815260206004820152602260248201527f5374616b696e673a204e6577206c6f636b7570206d757374206265206c6f6e6760448201526132b960f11b606482015260840161060c565b6001600160801b0381166020808801919091526040808801849052336000908152600a909252902080548791908a908110610ee957610ee96133ba565b60009182526020918290208351928401516001600160801b03908116600160801b029316929092176002909102909101908155604090910151600190910155610f3b33610f368585613420565b611e8f565b60408051898152602081018790529081018590526060810184905233907f05b744e3e9358bc00ba3cc0c6606a4d6536134dba00b2d2ee4b5de169acd64279060800160405180910390a260408051898152602081018790529081018290526060810183905233907f2720efa4b2dd4f3f8a347da3cbd290a522e9432da9072c5b8e6300496fdde2829060800160405180910390a25050505050505050565b600a6020528160005260406000208181548110610ff557600080fd5b6000918252602090912060029091020180546001909101546001600160801b038083169450600160801b909204909116915083565b8342111561107a5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161060c565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886110c78c6001600160a01b0316600090815260056020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061112282611e19565b9050600061113282878787611e67565b9050896001600160a01b0316816001600160a01b0316146111955760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161060c565b6111a08a8a8a61138f565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b0383166000908152600860205260409020805463ffffffff841690811061121b5761121b6133ba565b60009182526020918290206040805180820190915291015463ffffffff81168252600160201b90046001600160e01b0316918101919091529392505050565b60008061126660025490565b9050806112765750600092915050565b6000600c549050817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e0d801dd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113009190613478565b61130f9064e8d4a51000613437565b6113199190613456565b6113239082613408565b6001600160a01b0385166000908152600b60205260408120549192509061134a9083613420565b905064e8d4a5100081611372876001600160a01b031660009081526020819052604090205490565b61137c9190613437565b6113869190613456565b95945050505050565b6001600160a01b0383166113f15760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161060c565b6001600160a01b0382166114525760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161060c565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006114be60025490565b905080156116a6576040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561152d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115519190613478565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370bb45b36040518163ffffffff1660e01b81526004016020604051808303816000875af19250505080156115cf575060408051601f3d908101601f191682019092526115cc91810190613478565b60015b6115d8576115da565b505b6040516370a0823160e01b815230600482015260009082906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015611643573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116679190613478565b6116719190613420565b9050826116838264e8d4a51000613437565b61168d9190613456565b600c600082825461169e9190613408565b909155505050505b6001600160a01b0382166000908152600b6020526040812054600c546116cc9190613420565b9050600064e8d4a51000826116f6866001600160a01b031660009081526020819052604090205490565b6117009190613437565b61170a9190613456565b600c546001600160a01b0386166000908152600b60205260409020559050806117335750505050565b60405163a9059cbb60e01b81526001600160a01b038581166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af11580156117a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c691906133d0565b50836001600160a01b03167f619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc98260405161180291815260200190565b60405180910390a250505050565b61181a8282611f19565b611828600961206e8361207a565b50505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561188757507f000000000000000000000000000000000000000000000000000000000000000046145b156118b157507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b8154600090815b818110156119b957600061197082846121f1565b905084868281548110611985576119856133ba565b60009182526020909120015463ffffffff1611156119a5578092506119b3565b6119b0816001613408565b91505b5061195c565b81156119fc57846119cb600184613420565b815481106119db576119db6133ba565b600091825260209091200154600160201b90046001600160e01b03166119ff565b60005b6001600160e01b031695945050505050565b600082611a36578115611a25576000611a2f565b670de0b6b3a76400005b90506105bf565b61090c611a4b611a458561220c565b846122bc565b6122c8565b6001600160a01b038281166000818152600760208181526040808420805485845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461182882848361230e565b600063ffffffff821115611b2e5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b606482015260840161060c565b5090565b6001600160a01b038116611b885760405162461bcd60e51b815260206004820152601c60248201527f5374616b696e673a20546f20746865207a65726f206164647265737300000000604482015260640161060c565b6001600160801b03831115611bd35760405162461bcd60e51b81526020600482015260116024820152700a6e8c2d6d2dcce7440a8dede40daeac6d607b1b604482015260640161060c565b60008311611c195760405162461bcd60e51b81526020600482015260136024820152720a6e8c2d6d2dcce74409cdee840cadcdeeaced606b1b604482015260640161060c565b600080611c268585610913565b90925090506001600160c01b03611c3c60025490565b611c469084613408565b1115611c945760405162461bcd60e51b815260206004820152601c60248201527f5374616b696e673a204d617820706f696e747320657863656564656400000000604482015260640161060c565b611c9d836114b3565b6001600160a01b0383166000908152600a6020908152604080832081516060810183526001600160801b03808b16825286811682860190815293820188815283546001818101865594885295909620915193518116600160801b0293169290921760029093029091019182559151910155611d188383611e8f565b6040516323b872dd60e01b8152336004820152306024820152604481018690527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015611d8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611daf91906133d0565b506001600160a01b0383166000818152600a60205260409020547f2720efa4b2dd4f3f8a347da3cbd290a522e9432da9072c5b8e6300496fdde28290611df790600190613420565b6040805191825260208201899052810184905260608101859052608001610859565b60006105bf611e2661182e565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000611e788787878761243c565b91509150611e8581612529565b5095945050505050565b611e9982826126e4565b6002546001600160e01b031015611f0b5760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b606482015260840161060c565b61182860096127cb8361207a565b6001600160a01b038216611f795760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161060c565b6001600160a01b03821660009081526020819052604090205481811015611fed5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161060c565b6001600160a01b038316600090815260208190526040812083830390556002805484929061201c908490613420565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3610adc836000846127d7565b600061090c8284613420565b8254600090819080156120c45785612093600183613420565b815481106120a3576120a36133ba565b600091825260209091200154600160201b90046001600160e01b03166120c7565b60005b6001600160e01b031692506120e083858763ffffffff16565b915060008111801561211e575043866120fa600184613420565b8154811061210a5761210a6133ba565b60009182526020909120015463ffffffff16145b1561217e5761212c82612809565b86612138600184613420565b81548110612148576121486133ba565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b031602179055506121e8565b85604051806040016040528061219343611ac9565b63ffffffff1681526020016121a785612809565b6001600160e01b039081169091528254600181018455600093845260209384902083519490930151909116600160201b0263ffffffff909316929092179101555b50935093915050565b60006122006002848418613456565b61090c90848416613408565b6000670de0b6b3a764000082101561223a57604051633621413760e21b81526004810183905260240161060c565b600061224f670de0b6b3a76400008404612872565b670de0b6b3a7640000808202935090915083821c90811415612272575050919050565b6706f05b59d3b200005b80156122b457670de0b6b3a7640000828002049150671bc16d674ec8000082106122ac579283019260019190911c905b60011c61227c565b505050919050565b600061090c838361295a565b6000680a688906bd8b00000082106122f657604051634a4f26f160e01b81526004810183905260240161060c565b670de0b6b3a7640000604083901b0461090c81612a1c565b816001600160a01b0316836001600160a01b0316141580156123305750600081115b15610adc576001600160a01b038316156123be576001600160a01b0383166000908152600860205260408120819061236b9061206e8561207a565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516123b3929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610adc576001600160a01b038216600090815260086020526040812081906123f4906127cb8561207a565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051610859929190918252602082015260400190565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156124735750600090506003612520565b8460ff16601b1415801561248b57508460ff16601c14155b1561249c5750600090506004612520565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156124f0573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661251957600060019250925050612520565b9150600090505b94509492505050565b600081600481111561253d5761253d613491565b14156125465750565b600181600481111561255a5761255a613491565b14156125a85760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161060c565b60028160048111156125bc576125bc613491565b141561260a5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161060c565b600381600481111561261e5761261e613491565b14156126775760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161060c565b600481600481111561268b5761268b613491565b1415610aa15760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161060c565b6001600160a01b03821661273a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161060c565b806002600082825461274c9190613408565b90915550506001600160a01b03821660009081526020819052604081208054839290612779908490613408565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3610aec600083836127d7565b600061090c8284613408565b6001600160a01b03838116600090815260076020526040808220548584168352912054610adc9291821691168361230e565b60006001600160e01b03821115611b2e5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b606482015260840161060c565b6000600160801b821061289257608091821c9161288f9082613408565b90505b6801000000000000000082106128b557604091821c916128b29082613408565b90505b600160201b82106128d357602091821c916128d09082613408565b90505b6201000082106128f057601091821c916128ed9082613408565b90505b610100821061290c57600891821c916129099082613408565b90505b6010821061292757600491821c916129249082613408565b90505b6004821061294257600291821c9161293f9082613408565b90505b60028210612955576105bf600182613408565b919050565b60008080600019848609848602925082811083820303915050670de0b6b3a7640000811061299e5760405163698d9a0160e11b81526004810182905260240161060c565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff8111826129d85780670de0b6b3a76400008504019450505050506105bf565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b678000000000000000821615612a405768016a09e667f3bcc9090260401c5b674000000000000000821615612a5f576801306fe0a31b7152df0260401c5b672000000000000000821615612a7e576801172b83c7d517adce0260401c5b671000000000000000821615612a9d5768010b5586cf9890f62a0260401c5b670800000000000000821615612abc576801059b0d31585743ae0260401c5b670400000000000000821615612adb57680102c9a3e778060ee70260401c5b670200000000000000821615612afa5768010163da9fb33356d80260401c5b670100000000000000821615612b1957680100b1afa5abcbed610260401c5b6680000000000000821615612b375768010058c86da1c09ea20260401c5b6640000000000000821615612b55576801002c605e2e8cec500260401c5b6620000000000000821615612b7357680100162f3904051fa10260401c5b6610000000000000821615612b91576801000b175effdc76ba0260401c5b6608000000000000821615612baf57680100058ba01fb9f96d0260401c5b6604000000000000821615612bcd5768010002c5cc37da94920260401c5b6602000000000000821615612beb576801000162e525ee05470260401c5b6601000000000000821615612c095768010000b17255775c040260401c5b65800000000000821615612c26576801000058b91b5bc9ae0260401c5b65400000000000821615612c4357680100002c5c89d5ec6d0260401c5b65200000000000821615612c605768010000162e43f4f8310260401c5b65100000000000821615612c7d57680100000b1721bcfc9a0260401c5b65080000000000821615612c9a5768010000058b90cf1e6e0260401c5b65040000000000821615612cb7576801000002c5c863b73f0260401c5b65020000000000821615612cd457680100000162e430e5a20260401c5b65010000000000821615612cf1576801000000b1721835510260401c5b648000000000821615612d0d57680100000058b90c0b490260401c5b644000000000821615612d295768010000002c5c8601cc0260401c5b642000000000821615612d45576801000000162e42fff00260401c5b641000000000821615612d615768010000000b17217fbb0260401c5b640800000000821615612d7d576801000000058b90bfce0260401c5b640400000000821615612d9957680100000002c5c85fe30260401c5b640200000000821615612db55768010000000162e42ff10260401c5b600160201b821615612dd057680100000000b17217f80260401c5b6380000000821615612deb5768010000000058b90bfc0260401c5b6340000000821615612e06576801000000002c5c85fe0260401c5b6320000000821615612e2157680100000000162e42ff0260401c5b6310000000821615612e3c576801000000000b17217f0260401c5b6308000000821615612e5757680100000000058b90c00260401c5b6304000000821615612e725768010000000002c5c8600260401c5b6302000000821615612e8d576801000000000162e4300260401c5b6301000000821615612ea85768010000000000b172180260401c5b62800000821615612ec2576801000000000058b90c0260401c5b62400000821615612edc57680100000000002c5c860260401c5b62200000821615612ef65768010000000000162e430260401c5b62100000821615612f1057680100000000000b17210260401c5b62080000821615612f2a5768010000000000058b910260401c5b62040000821615612f44576801000000000002c5c80260401c5b62020000821615612f5e57680100000000000162e40260401c5b62010000821615612f78576801000000000000b1720260401c5b618000821615612f9157680100000000000058b90260401c5b614000821615612faa5768010000000000002c5d0260401c5b612000821615612fc3576801000000000000162e0260401c5b611000821615612fdc5768010000000000000b170260401c5b610800821615612ff5576801000000000000058c0260401c5b61040082161561300e57680100000000000002c60260401c5b61020082161561302757680100000000000001630260401c5b61010082161561304057680100000000000000b10260401c5b608082161561305857680100000000000000590260401c5b6040821615613070576801000000000000002c0260401c5b602082161561308857680100000000000000160260401c5b60108216156130a0576801000000000000000b0260401c5b60088216156130b857680100000000000000060260401c5b60048216156130d057680100000000000000030260401c5b60028216156130e857680100000000000000010260401c5b600182161561310057680100000000000000010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b600060208083528351808285015260005b8181101561314457858101830151858201604001528201613128565b81811115613156576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461295557600080fd5b6000806040838503121561319657600080fd5b61319f8361316c565b946020939093013593505050565b6000806000606084860312156131c257600080fd5b6131cb8461316c565b92506131d96020850161316c565b9150604084013590509250925092565b6000602082840312156131fb57600080fd5b5035919050565b60006020828403121561321457600080fd5b61090c8261316c565b6000806040838503121561323057600080fd5b50508035926020909101359150565b60008060006060848603121561325457600080fd5b833592506020840135915061326b6040850161316c565b90509250925092565b803560ff8116811461295557600080fd5b60008060008060008060c0878903121561329e57600080fd5b6132a78761316c565b955060208701359450604087013593506132c360608801613274565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a0312156132f857600080fd5b6133018861316c565b965061330f6020890161316c565b9550604088013594506060880135935061332b60808901613274565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561335a57600080fd5b6133638361316c565b91506133716020840161316c565b90509250929050565b6000806040838503121561338d57600080fd5b6133968361316c565b9150602083013563ffffffff811681146133af57600080fd5b809150509250929050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156133e257600080fd5b8151801515811461090c57600080fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561341b5761341b6133f2565b500190565b600082821015613432576134326133f2565b500390565b6000816000190483118215151615613451576134516133f2565b500290565b60008261347357634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561348a57600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fdfea264697066735822122075d6e82d4e8cca42a179c5734c7298eb98af18be81e5580c95b4262e8173835f64736f6c634300080a0033", "deployedSourceMap": "837:9568:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2070:92;2141:14;;;;;;;;;;;-1:-1:-1;;;2141:14:18;;;;2070:92;;;;2141:14;2070:92;:::i;:::-;;;;;;;;4433:197:1;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:23;;1211:22;1193:41;;1181:2;1166:18;4433:197:1;1053:187:23;1184:26:18;;;;;;;;-1:-1:-1;;;;;1423:32:23;;;1405:51;;1393:2;1378:18;1184:26:18;1245:217:23;3244:106:1;3331:12;;3244:106;;;1613:25:23;;;1601:2;1586:18;3244:106:1;1467:177:23;2395:164:18;;;;;;:::i;:::-;;:::i;5170:646::-;;;;;;:::i;:::-;;:::i;:::-;;3093:91:1;;;3175:2;2309:36:23;;2297:2;2282:18;3093:91:1;2167:184:23;2885:113:5;;;:::i;5873:234:1:-;;;;;;:::i;:::-;;:::i;2825:265:3:-;;;;;;:::i;:::-;;:::i;1295:53:18:-;;;;;;:::i;:::-;;;;;;;;;;;;;;7636:554;;;;;;:::i;:::-;;:::i;:::-;;;;3156:25:23;;;3212:2;3197:18;;3190:34;;;;3129:18;7636:554:18;2982:248:23;2218:126:3;;;;;;:::i;:::-;-1:-1:-1;;;;;2318:19:3;;;2292:7;2318:19;;;:10;:19;;;;;;;;2218:126;5248:112;;;;;;:::i;:::-;;:::i;1981:149::-;;;;;;:::i;:::-;;:::i;:::-;;;3617:10:23;3605:23;;;3587:42;;3575:2;3560:18;1981:149:3;3443:192:23;3408:125:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:1;3482:7;3508:18;;;;;;;;;;;;3408:125;8272:79:18;;;:::i;3175:145::-;;;;;;:::i;:::-;;:::i;3736:111::-;;;;;;:::i;:::-;;:::i;2635:126:5:-;;;;;;:::i;:::-;;:::i;3369:256:3:-;;;;;;:::i;:::-;;:::i;900:30:18:-;;;;;1354:32;;;;;;2423:209:3;;;;;;:::i;:::-;;:::i;6594:427:1:-;;;;;;:::i;:::-;;:::i;2268:121:18:-;;;;;;:::i;5437:574:3:-;;;;;;:::i;:::-;;:::i;6468:844:18:-;;;;;;:::i;:::-;;:::i;1109:43::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;4937:15:23;;;4919:34;;4989:15;;;;4984:2;4969:18;;4962:43;5021:18;;;5014:34;4854:2;4839:18;1109:43:18;4664:390:23;1948:626:5;;;;;;:::i;:::-;;:::i;3976:149:1:-;;;;;;:::i;:::-;;:::i;1758:148:3:-;;;;;;:::i;:::-;;:::i;:::-;;;;6514:13:23;;6529:10;6510:30;6492:49;;6601:4;6589:17;;;6583:24;-1:-1:-1;;;;;6579:50:23;6557:20;;;6550:80;;;;6465:18;1758:148:3;6290:346:23;8552:515:18;;;;;;:::i;:::-;;:::i;1245:44::-;;;;;4433:197:1;4516:4;719:10:8;4570:32:1;719:10:8;4586:7:1;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;;:::o;2395:164:18:-;2515:37;;-1:-1:-1;;;2515:37:18;;7073:2:23;2515:37:18;;;7055:21:23;7112:2;7092:18;;;7085:30;7151:29;7131:18;;;7124:57;2499:4:18;;7198:18:23;;2515:37:18;;;;;;;;5170:646;5255:10;5224:20;5247:19;;;:7;:19;;;;;:29;;5267:8;;5247:29;;;;;;:::i;:::-;;;;;;;;;;5224:52;;;;;;;;5247:29;;;;;;;5224:52;;-1:-1:-1;;;;;5224:52:18;;;;;;-1:-1:-1;;;5224:52:18;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5224:52:18;;;5408:15;:22;-1:-1:-1;5408:22:18;5400:69;;;;-1:-1:-1;;;5400:69:18;;7561:2:23;5400:69:18;;;7543:21:23;7600:2;7580:18;;;7573:30;7639:34;7619:18;;;7612:62;-1:-1:-1;;;7690:18:23;;;7683:32;7732:19;;5400:69:18;7359:398:23;5400:69:18;5487:8;5479:58;;;;-1:-1:-1;;;5479:58:18;;7964:2:23;5479:58:18;;;7946:21:23;8003:2;7983:18;;;7976:30;8042:34;8022:18;;;8015:62;-1:-1:-1;;;8093:18:23;;;8086:35;8138:19;;5479:58:18;7762:401:23;5479:58:18;5547:27;5563:10;5547:15;:27::i;:::-;5599:10;5591:19;;;;:7;:19;;;;;:29;;5611:8;;5591:29;;;;;;:::i;:::-;;;;;;;;;;;;;5584:36;;;;;;5677:25;5683:10;5695:6;5677:5;:25::i;:::-;5712:32;;-1:-1:-1;;;5712:32:18;;5725:10;5712:32;;;8342:51:23;8409:18;;;8402:34;;;5712:3:18;-1:-1:-1;;;;;5712:12:18;;;;8315:18:23;;5712:32:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5759:50:18;;;8960:25:23;;;9016:2;9001:18;;8994:34;;;9044:18;;;9037:34;;;9102:2;9087:18;;9080:34;;;5767:10:18;;5759:50;;8947:3:23;8932:19;5759:50:18;;;;;;;;5214:602;;;;5170:646;:::o;2885:113:5:-;2945:7;2971:20;:18;:20::i;:::-;2964:27;;2885:113;:::o;5873:234:1:-;5961:4;719:10:8;6015:64:1;719:10:8;6031:7:1;6068:10;6040:25;719:10:8;6031:7:1;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;2825:265:3:-;2923:7;2964:12;2950:11;:26;2942:70;;;;-1:-1:-1;;;2942:70:3;;9592:2:23;2942:70:3;;;9574:21:23;9631:2;9611:18;;;9604:30;9670:33;9650:18;;;9643:61;9721:18;;2942:70:3;9390:355:23;2942:70:3;-1:-1:-1;;;;;3048:21:3;;;;;;:12;:21;;;;;3029:54;;3071:11;3029:18;:54::i;:::-;3022:61;2825:265;-1:-1:-1;;;2825:265:3:o;7636:554:18:-;7738:7;7747;7790:6;7778:8;:18;;7770:49;;;;-1:-1:-1;;;7770:49:18;;9952:2:23;7770:49:18;;;9934:21:23;9991:2;9971:18;;;9964:30;-1:-1:-1;;;10010:18:23;;;10003:48;10068:18;;7770:49:18;9750:342:23;7770:49:18;7849:9;7837:8;:21;;7829:51;;;;-1:-1:-1;;;7829:51:18;;10299:2:23;7829:51:18;;;10281:21:23;10338:2;10318:18;;;10311:30;-1:-1:-1;;;10357:18:23;;;10350:47;10414:18;;7829:51:18;10097:341:23;7829:51:18;7890:13;7924:5;7906:15;:23;:49;;7950:5;7906:49;;;7932:15;7906:49;7890:65;-1:-1:-1;7965:11:18;7979:16;7987:8;7890:65;7979:16;:::i;:::-;7965:30;-1:-1:-1;8005:18:18;8051:8;8028:11;8034:5;7965:30;8028:11;:::i;:::-;8027:20;;8043:4;8027:20;:::i;:::-;8026:33;;;;:::i;:::-;8005:54;;8069:18;8090:41;1003:5;8120:10;8090:18;:41::i;:::-;8069:62;-1:-1:-1;8173:4:18;8150:19;8069:62;8150:6;:19;:::i;:::-;8149:28;;;;:::i;:::-;8141:42;8179:3;;-1:-1:-1;7636:554:18;;-1:-1:-1;;;;;;7636:554:18:o;5248:112:3:-;5319:34;719:10:8;5343:9:3;5319;:34::i;:::-;5248:112;:::o;1981:149::-;-1:-1:-1;;;;;2094:21:3;;2051:6;2094:21;;;:12;:21;;;;;:28;2076:47;;:17;:47::i;8272:79:18:-;8317:27;8333:10;8317:15;:27::i;:::-;8272:79::o;3175:145::-;3285:28;3292:6;3300:8;3310:2;3285:6;:28::i;:::-;3175:145;;;:::o;3736:111::-;3804:36;3811:6;3819:8;3829:10;3804:6;:36::i;:::-;3736:111;;:::o;2635:126:5:-;-1:-1:-1;;;;;2730:14:5;;2704:7;2730:14;;;:7;:14;;;;;918::9;2730:24:5;827:112:9;3369:256:3;3456:7;3497:12;3483:11;:26;3475:70;;;;-1:-1:-1;;;3475:70:3;;9592:2:23;3475:70:3;;;9574:21:23;9631:2;9611:18;;;9604:30;9670:33;9650:18;;;9643:61;9721:18;;3475:70:3;9390:355:23;3475:70:3;3562:56;3581:23;3606:11;3562:18;:56::i;2423:209::-;-1:-1:-1;;;;;2529:21:3;;2496:7;2529:21;;;:12;:21;;;;;:28;2574:8;;:51;;-1:-1:-1;;;;;2589:21:3;;;;;;:12;:21;;;;;2611:7;2617:1;2611:3;:7;:::i;:::-;2589:30;;;;;;;;:::i;:::-;;;;;;;;;;:36;-1:-1:-1;;;2589:36:3;;-1:-1:-1;;;;;2589:36:3;2574:51;;;2585:1;2574:51;-1:-1:-1;;;;;2567:58:3;;2423:209;-1:-1:-1;;;2423:209:3:o;6594:427:1:-;6687:4;719:10:8;6687:4:1;6768:25;719:10:8;6785:7:1;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:1;;11302:2:23;6803:85:1;;;11284:21:23;11341:2;11321:18;;;11314:30;11380:34;11360:18;;;11353:62;-1:-1:-1;;;11431:18:23;;;11424:35;11476:19;;6803:85:1;11100:401:23;6803:85:1;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;:::-;-1:-1:-1;7010:4:1;;6594:427;-1:-1:-1;;;;6594:427:1:o;5437:574:3:-;5656:6;5637:15;:25;;5629:67;;;;-1:-1:-1;;;5629:67:3;;11708:2:23;5629:67:3;;;11690:21:23;11747:2;11727:18;;;11720:30;11786:31;11766:18;;;11759:59;11835:18;;5629:67:3;11506:353:23;5629:67:3;5777:58;;;1447:71;5777:58;;;12095:25:23;-1:-1:-1;;;;;12156:32:23;;12136:18;;;12129:60;;;;12205:18;;;12198:34;;;12248:18;;;12241:34;;;5706:14:3;;5723:169;;5750:87;;12067:19:23;;5777:58:3;;;;;;;;;;;;5767:69;;;;;;5750:16;:87::i;:::-;5851:1;5866;5881;5723:13;:169::i;:::-;5706:186;;5919:17;5929:6;-1:-1:-1;;;;;3249:14:5;3189:15;3249:14;;;:7;:14;;;;;918::9;;1050:1;1032:19;;;;;918:14;3129:203:5;5919:17:3;5910:5;:26;5902:64;;;;-1:-1:-1;;;5902:64:3;;12488:2:23;5902:64:3;;;12470:21:23;12527:2;12507:18;;;12500:30;12566:27;12546:18;;;12539:55;12611:18;;5902:64:3;12286:349:23;5902:64:3;5976:28;5986:6;5994:9;5976;:28::i;:::-;5619:392;5437:574;;;;;;:::o;6468:844:18:-;6588:27;6604:10;6588:15;:27::i;:::-;6656:10;6625:20;6648:19;;;:7;:19;;;;;:29;;6668:8;;6648:29;;;;;;:::i;:::-;;;;;;;;;6625:52;;;;;;;;6648:29;;;;;;;6625:52;;-1:-1:-1;;;;;6625:52:18;;;;;;-1:-1:-1;;;6625:52:18;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6625:52:18;;;;;6648:29;6848:68;6625:52;6898:8;6848:13;:68::i;:::-;6810:106;;;;6943:6;6934;:15;6926:62;;;;-1:-1:-1;;;6926:62:18;;12842:2:23;6926:62:18;;;12824:21:23;12881:2;12861:18;;;12854:30;12920:34;12900:18;;;12893:62;-1:-1:-1;;;12971:18:23;;;12964:32;13013:19;;6926:62:18;12640:398:23;6926:62:18;-1:-1:-1;;;;;6998:28:18;;:10;;;;:28;;;;7036:13;;;;:25;;;7079:10;-1:-1:-1;7071:19:18;;;:7;:19;;;;;:29;;6998:6;;7071:19;7091:8;;7071:29;;;;;;:::i;:::-;;;;;;;;;;:38;;;;;;-1:-1:-1;;;;;7071:38:18;;;-1:-1:-1;;;7071:38:18;;;;;;;:29;;;;;;;:38;;;;;;;;;;;;;7119:40;7125:10;7137:21;7149:9;7137;:21;:::i;:::-;7119:5;:40::i;:::-;7174:59;;;8960:25:23;;;9016:2;9001:18;;8994:34;;;9044:18;;;9037:34;;;9102:2;9087:18;;9080:34;;;7182:10:18;;7174:59;;8947:3:23;8932:19;7174:59:18;;;;;;;7248:57;;;8960:25:23;;;9016:2;9001:18;;8994:34;;;9044:18;;;9037:34;;;9102:2;9087:18;;9080:34;;;7254:10:18;;7248:57;;8947:3:23;8932:19;7248:57:18;;;;;;;6529:783;;;;;;6468:844;;:::o;1109:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1109:43:18;;;;-1:-1:-1;;;;1109:43:18;;;;;;;-1:-1:-1;1109:43:18;:::o;1948:626:5:-;2183:8;2164:15;:27;;2156:69;;;;-1:-1:-1;;;2156:69:5;;13245:2:23;2156:69:5;;;13227:21:23;13284:2;13264:18;;;13257:30;13323:31;13303:18;;;13296:59;13372:18;;2156:69:5;13043:353:23;2156:69:5;2236:18;1143:95;2296:5;2303:7;2312:5;2319:16;2329:5;-1:-1:-1;;;;;3249:14:5;3189:15;3249:14;;;:7;:14;;;;;918::9;;1050:1;1032:19;;;;;918:14;3129:203:5;2319:16;2267:79;;;;;;13688:25:23;;;;-1:-1:-1;;;;;13787:15:23;;;13767:18;;;13760:43;13839:15;;;;13819:18;;;13812:43;13871:18;;;13864:34;13914:19;;;13907:35;13958:19;;;13951:35;;;13660:19;;2267:79:5;;;;;;;;;;;;2257:90;;;;;;2236:111;;2358:12;2373:28;2390:10;2373:16;:28::i;:::-;2358:43;;2412:14;2429:28;2443:4;2449:1;2452;2455;2429:13;:28::i;:::-;2412:45;;2485:5;-1:-1:-1;;;;;2475:15:5;:6;-1:-1:-1;;;;;2475:15:5;;2467:58;;;;-1:-1:-1;;;2467:58:5;;14199:2:23;2467:58:5;;;14181:21:23;14238:2;14218:18;;;14211:30;14277:32;14257:18;;;14250:60;14327:18;;2467:58:5;13997:354:23;2467:58:5;2536:31;2545:5;2552:7;2561:5;2536:8;:31::i;:::-;2146:428;;;1948:626;;;;;;;:::o;3976:149:1:-;-1:-1:-1;;;;;4091:18:1;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;1758:148:3:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;1873:21:3;;;;;;:12;:21;;;;;:26;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1866:33;;;;;;;;;1873:26;;1866:33;;;;;;-1:-1:-1;;;1866:33:3;;-1:-1:-1;;;;;1866:33:3;;;;;;;;;1758:148;-1:-1:-1;;;1758:148:3:o;8552:515:18:-;8613:7;8632:14;8649:13;3331:12:1;;;3244:106;8649:13:18;8632:30;-1:-1:-1;8676:11:18;8672:95;;-1:-1:-1;8710:1:18;;8552:515;-1:-1:-1;;8552:515:18:o;8672:95::-;8776:26;8805:17;;8776:46;;8896:6;8855:13;-1:-1:-1;;;;;8855:28:18;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;8888:4;8855:37;:::i;:::-;8854:48;;;;:::i;:::-;8832:70;;;;:::i;:::-;-1:-1:-1;;;;;8974:24:18;;8912:26;8974:24;;;:18;:24;;;;;;8832:70;;-1:-1:-1;8912:26:18;8941:57;;8832:70;8941:57;:::i;:::-;8912:86;;9056:4;9034:18;9016:15;9026:4;-1:-1:-1;;;;;3508:18:1;3482:7;3508:18;;;;;;;;;;;;3408:125;9016:15:18;:36;;;;:::i;:::-;9015:45;;;;:::i;:::-;9008:52;8552:515;-1:-1:-1;;;;;8552:515:18:o;10119:370:1:-;-1:-1:-1;;;;;10250:19:1;;10242:68;;;;-1:-1:-1;;;10242:68:1;;14747:2:23;10242:68:1;;;14729:21:23;14786:2;14766:18;;;14759:30;14825:34;14805:18;;;14798:62;-1:-1:-1;;;14876:18:23;;;14869:34;14920:19;;10242:68:1;14545:400:23;10242:68:1;-1:-1:-1;;;;;10328:21:1;;10320:68;;;;-1:-1:-1;;;10320:68:1;;15152:2:23;10320:68:1;;;15134:21:23;15191:2;15171:18;;;15164:30;15230:34;15210:18;;;15203:62;-1:-1:-1;;;15281:18:23;;;15274:32;15323:19;;10320:68:1;14950:398:23;10320:68:1;-1:-1:-1;;;;;10399:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10450:32;;1613:25:23;;;10450:32:1;;1586:18:23;10450:32:1;;;;;;;10119:370;;;:::o;9559:844:18:-;9617:14;9634:13;3331:12:1;;;3244:106;9634:13:18;9617:30;-1:-1:-1;9661:10:18;;9657:375;;9708:28;;-1:-1:-1;;;9708:28:18;;9730:4;9708:28;;;1405:51:23;9687:18:18;;9708:3;-1:-1:-1;;;;;9708:13:18;;;;1378:18:23;;9708:28:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9687:49;;9754:13;-1:-1:-1;;;;;9754:28:18;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9754:30:18;;;;;;;;-1:-1:-1;;9754:30:18;;;;;;;;;;;;:::i;:::-;;;9750:135;;;;;;;9918:28;;-1:-1:-1;;;9918:28:18;;9940:4;9918:28;;;1405:51:23;9898:17:18;;9949:10;;-1:-1:-1;;;;;9918:3:18;:13;;;;1378:18:23;;9918:28:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;;;:::i;:::-;9898:61;-1:-1:-1;10015:6:18;9995:16;9898:61;10007:4;9995:16;:::i;:::-;9994:27;;;;:::i;:::-;9973:17;;:48;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;9657:375:18;-1:-1:-1;;;;;10102:24:18;;10041:26;10102:24;;;:18;:24;;;;;;10070:17;;:56;;10102:24;10070:56;:::i;:::-;10041:85;;10136:18;10198:4;10176:18;10158:15;10168:4;-1:-1:-1;;;;;3508:18:1;3482:7;3508:18;;;;;;;;;;;;3408:125;10158:15:18;:36;;;;:::i;:::-;10157:45;;;;:::i;:::-;10239:17;;-1:-1:-1;;;;;10212:24:18;;;;;;:18;:24;;;;;:44;10136:66;-1:-1:-1;10270:15:18;10266:52;;10301:7;;;9559:844;:::o;10266:52::-;10327:30;;-1:-1:-1;;;10327:30:18;;-1:-1:-1;;;;;8360:32:23;;;10327:30:18;;;8342:51:23;8409:18;;;8402:34;;;10327:3:18;:12;;;;8315:18:23;;10327:30:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10379:4;-1:-1:-1;;;;;10372:24:18;;10385:10;10372:24;;;;1613:25:23;;1601:2;1586:18;;1467:177;10372:24:18;;;;;;;;9607:796;;;9559:844;:::o;6679:190:3:-;6763:28;6775:7;6784:6;6763:11;:28::i;:::-;6802:60;6819:23;6844:9;6855:6;6802:16;:60::i;:::-;;;6679:190;;:::o;3143:308:12:-;3196:7;3227:4;-1:-1:-1;;;;;3236:12:12;3219:29;;:66;;;;;3269:16;3252:13;:33;3219:66;3215:230;;;-1:-1:-1;3308:24:12;;3143:308::o;3215:230::-;-1:-1:-1;3633:73:12;;;3392:10;3633:73;;;;19029:25:23;;;;3404:12:12;19070:18:23;;;19063:34;3418:15:12;19113:18:23;;;19106:34;3677:13:12;19156:18:23;;;19149:34;3700:4:12;19199:19:23;;;;19192:61;;;;3633:73:12;;;;;;;;;;19001:19:23;;;;3633:73:12;;;3623:84;;;;;;2885:113:5:o;3709:1458:3:-;4830:12;;3808:7;;;4877:229;4890:4;4884:3;:10;4877:229;;;4910:11;4924:23;4937:3;4942:4;4924:12;:23::i;:::-;4910:37;;4988:11;4965:5;4971:3;4965:10;;;;;;;;:::i;:::-;;;;;;;;;;:20;;;:34;4961:135;;;5026:3;5019:10;;4961:135;;;5074:7;:3;5080:1;5074:7;:::i;:::-;5068:13;;4961:135;4896:210;4877:229;;;5123:9;;:37;;5139:5;5145:8;5152:1;5145:4;:8;:::i;:::-;5139:15;;;;;;;;:::i;:::-;;;;;;;;;;:21;-1:-1:-1;;;5139:21:3;;-1:-1:-1;;;;;5139:21:3;5123:37;;;5135:1;5123:37;-1:-1:-1;;;;;5116:44:3;;3709:1458;-1:-1:-1;;;;;3709:1458:3:o;22165:224:16:-;22223:14;22253:6;22249:134;;22284:6;;:27;;22309:1;22284:27;;;1359:4;22284:27;22275:36;;22249:134;;;22351:21;22356:15;22360:7;22365:1;22360:4;:7::i;:::-;22369:1;22356:3;:15::i;:::-;22351:4;:21::i;7413:380:3:-;-1:-1:-1;;;;;2318:19:3;;;7497:23;2318:19;;;:10;:19;;;;;;;;;;3508:18:1;;;;;;;7610:21:3;;;;:33;;;-1:-1:-1;;;;;;7610:33:3;;;;;;;7659:54;;2318:19;;;;;3508:18:1;;7610:33:3;;2318:19;;;7659:54;;7497:23;7659:54;7724:62;7741:15;7758:9;7769:16;7724;:62::i;3045:187:14:-;3101:6;3136:16;3127:25;;;3119:76;;;;-1:-1:-1;;;3119:76:14;;15555:2:23;3119:76:14;;;15537:21:23;15594:2;15574:18;;;15567:30;15633:34;15613:18;;;15606:62;-1:-1:-1;;;15684:18:23;;;15677:36;15730:19;;3119:76:14;15353:402:23;3119:76:14;-1:-1:-1;3219:5:14;3045:187::o;4064:972:18:-;-1:-1:-1;;;;;4183:16:18;;4175:57;;;;-1:-1:-1;;;4175:57:18;;15962:2:23;4175:57:18;;;15944:21:23;16001:2;15981:18;;;15974:30;16040;16020:18;;;16013:58;16088:18;;4175:57:18;15760:352:23;4175:57:18;-1:-1:-1;;;;;4250:27:18;;;4242:57;;;;-1:-1:-1;;;4242:57:18;;16319:2:23;4242:57:18;;;16301:21:23;16358:2;16338:18;;;16331:30;-1:-1:-1;;;16377:18:23;;;16370:47;16434:18;;4242:57:18;16117:341:23;4242:57:18;4326:1;4317:6;:10;4309:42;;;;-1:-1:-1;;;4309:42:18;;16665:2:23;4309:42:18;;;16647:21:23;16704:2;16684:18;;;16677:30;-1:-1:-1;;;16723:18:23;;;16716:49;16782:18;;4309:42:18;16463:343:23;4309:42:18;4411:14;4427:11;4442:31;4456:6;4464:8;4442:13;:31::i;:::-;4410:63;;-1:-1:-1;4410:63:18;-1:-1:-1;;;;;;4513:13:18;3331:12:1;;;3244:106;4513:13:18;4504:22;;:6;:22;:::i;:::-;:43;;4483:118;;;;-1:-1:-1;;;4483:118:18;;17013:2:23;4483:118:18;;;16995:21:23;17052:2;17032:18;;;17025:30;17091;17071:18;;;17064:58;17139:18;;4483:118:18;16811:352:23;4483:118:18;4611:19;4627:2;4611:15;:19::i;:::-;-1:-1:-1;;;;;4640:11:18;;;;;;:7;:11;;;;;;;;4670:162;;;;;;;-1:-1:-1;;;;;4670:162:18;;;;;;;;;;;;;;;;;;;;4640:202;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4640:202:18;;;;;;;;;;;;;;;;;;;;;;4852:17;4648:2;4811:6;4852:5;:17::i;:::-;4879:51;;-1:-1:-1;;;4879:51:18;;4896:10;4879:51;;;17408:34:23;4916:4:18;17458:18:23;;;17451:43;17510:18;;;17503:34;;;4879:3:18;-1:-1:-1;;;;;4879:16:18;;;;17343:18:23;;4879:51:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;4975:54:18;;4985:11;;;;:7;:11;;;;;:18;4975:54;;4985:22;;5006:1;;4985:22;:::i;:::-;4975:54;;;8960:25:23;;;9016:2;9001:18;;8994:34;;;9044:18;;9037:34;;;9102:2;9087:18;;9080:34;;;8947:3;8932:19;4975:54:18;8729:391:23;4339:165:12;4416:7;4442:55;4464:20;:18;:20::i;:::-;4486:10;9226:57:11;;-1:-1:-1;;;9226:57:11;;;19522:27:23;19565:11;;;19558:27;;;19601:12;;;19594:28;;;9190:7:11;;19638:12:23;;9226:57:11;;;;;;;;;;;;9216:68;;;;;;9209:75;;9097:194;;;;;7452:270;7575:7;7595:17;7614:18;7636:25;7647:4;7653:1;7656;7659;7636:10;:25::i;:::-;7594:67;;;;7671:18;7683:5;7671:11;:18::i;:::-;-1:-1:-1;7706:9:11;7452:270;-1:-1:-1;;;;;7452:270:11:o;6305:285:3:-;6389:28;6401:7;6410:6;6389:11;:28::i;:::-;3331:12:1;;-1:-1:-1;;;;;;6435:29:3;6427:90;;;;-1:-1:-1;;;6427:90:3;;17750:2:23;6427:90:3;;;17732:21:23;17789:2;17769:18;;;17762:30;17828:34;17808:18;;;17801:62;-1:-1:-1;;;17879:18:23;;;17872:46;17935:19;;6427:90:3;17548:412:23;6427:90:3;6528:55;6545:23;6570:4;6576:6;6528:16;:55::i;9120:576:1:-;-1:-1:-1;;;;;9203:21:1;;9195:67;;;;-1:-1:-1;;;9195:67:1;;18167:2:23;9195:67:1;;;18149:21:23;18206:2;18186:18;;;18179:30;18245:34;18225:18;;;18218:62;-1:-1:-1;;;18296:18:23;;;18289:31;18337:19;;9195:67:1;17965:397:23;9195:67:1;-1:-1:-1;;;;;9358:18:1;;9333:22;9358:18;;;;;;;;;;;9394:24;;;;9386:71;;;;-1:-1:-1;;;9386:71:1;;18569:2:23;9386:71:1;;;18551:21:23;18608:2;18588:18;;;18581:30;18647:34;18627:18;;;18620:62;-1:-1:-1;;;18698:18:23;;;18691:32;18740:19;;9386:71:1;18367:398:23;9386:71:1;-1:-1:-1;;;;;9491:18:1;;:9;:18;;;;;;;;;;9512:23;;;9491:44;;9555:12;:22;;9529:6;;9491:9;9555:22;;9529:6;;9555:22;:::i;:::-;;;;-1:-1:-1;;9593:37:1;;1613:25:23;;;9619:1:1;;-1:-1:-1;;;;;9593:37:1;;;;;1601:2:23;1586:18;9593:37:1;;;;;;;9641:48;9661:7;9678:1;9682:6;9641:19;:48::i;9171:101:3:-;9234:7;9260:5;9264:1;9260;:5;:::i;8432:631::-;8664:12;;8602:17;;;;8698:8;;:35;;8713:5;8719:7;8725:1;8719:3;:7;:::i;:::-;8713:14;;;;;;;;:::i;:::-;;;;;;;;;;:20;-1:-1:-1;;;8713:20:3;;-1:-1:-1;;;;;8713:20:3;8698:35;;;8709:1;8698:35;-1:-1:-1;;;;;8686:47:3;;;8755:20;8758:9;8769:5;8755:2;:20;;:::i;:::-;8743:32;;8796:1;8790:3;:7;:51;;;;-1:-1:-1;8829:12:3;8801:5;8807:7;8813:1;8807:3;:7;:::i;:::-;8801:14;;;;;;;;:::i;:::-;;;;;;;;;;:24;;;:40;8790:51;8786:271;;;8880:29;8899:9;8880:18;:29::i;:::-;8857:5;8863:7;8869:1;8863:3;:7;:::i;:::-;8857:14;;;;;;;;:::i;:::-;;;;;;;;:20;;;:52;;;;;-1:-1:-1;;;;;8857:52:3;;;;;-1:-1:-1;;;;;8857:52:3;;;;;;8786:271;;;8940:5;8951:94;;;;;;;;8974:31;8992:12;8974:17;:31::i;:::-;8951:94;;;;;;9014:29;9033:9;9014:18;:29::i;:::-;-1:-1:-1;;;;;8951:94:3;;;;;;8940:106;;;;;;;-1:-1:-1;8940:106:3;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8940:106:3;;;;;;;;;;;;8786:271;8640:423;8432:631;;;;;;:::o;678:153:13:-;740:7;813:11;823:1;814:5;;;813:11;:::i;:::-;803:21;;804:5;;;803:21;:::i;19388:1397:16:-;19436:14;1359:4;19466:1;:9;19462:82;;;19498:35;;-1:-1:-1;;;19498:35:16;;;;;1613:25:23;;;1586:18;;19498:35:16;1467:177:23;19462:82:16;19699:9;19711:37;1359:4;19738:1;:9;19711:26;:37::i;:::-;1359:4;19958:9;;;;-1:-1:-1;19699:49:16;;-1:-1:-1;20033:6:16;;;;20112:10;;20108:62;;;20142:13;;19388:1397;;;:::o;20108:62::-;670:4;20360:409;20393:9;;20360:409;;1359:4;20440:5;;;20439:15;;-1:-1:-1;20539:9:16;20534:14;;20530:225;;20635:15;;;;20735:1;20729:7;;;;;20530:225;20414:1;20404:11;20360:409;;;;19553:1226;;19388:1397;;;:::o;21270:130::-;21328:14;21363:30;21388:1;21391;21363:24;:30::i;5574:556::-;5622:14;5749:6;5744:1;:11;5740:83;;5778:34;;-1:-1:-1;;;5778:34:16;;;;;1613:25:23;;;1586:18;;5778:34:16;1467:177:23;5740:83:16;1359:4;5944:2;5939:7;;;5938:17;6092:21;5938:17;6092:12;:21::i;7799:627:3:-;7926:3;-1:-1:-1;;;;;7919:10:3;:3;-1:-1:-1;;;;;7919:10:3;;;:24;;;;;7942:1;7933:6;:10;7919:24;7915:505;;;-1:-1:-1;;;;;7963:17:3;;;7959:221;;-1:-1:-1;;;;;8058:17:3;;8001;8058;;;:12;:17;;;;;8001;;8041:54;;8077:9;8088:6;8041:16;:54::i;:::-;8000:95;;;;8139:3;-1:-1:-1;;;;;8118:47:3;;8144:9;8155;8118:47;;;;;;3156:25:23;;;3212:2;3197:18;;3190:34;3144:2;3129:18;;2982:248;8118:47:3;;;;;;;;7982:198;;7959:221;-1:-1:-1;;;;;8198:17:3;;;8194:216;;-1:-1:-1;;;;;8293:17:3;;8236;8293;;;:12;:17;;;;;8236;;8276:49;;8312:4;8318:6;8276:16;:49::i;:::-;8235:90;;;;8369:3;-1:-1:-1;;;;;8348:47:3;;8374:9;8385;8348:47;;;;;;3156:25:23;;;3212:2;3197:18;;3190:34;3144:2;3129:18;;2982:248;5716:1603:11;5842:7;;6766:66;6753:79;;6749:161;;;-1:-1:-1;6864:1:11;;-1:-1:-1;6868:30:11;6848:51;;6749:161;6923:1;:7;;6928:2;6923:7;;:18;;;;;6934:1;:7;;6939:2;6934:7;;6923:18;6919:100;;;-1:-1:-1;6973:1:11;;-1:-1:-1;6977:30:11;6957:51;;6919:100;7130:24;;;7113:14;7130:24;;;;;;;;;19888:25:23;;;19961:4;19949:17;;19929:18;;;19922:45;;;;19983:18;;;19976:34;;;20026:18;;;20019:34;;;7130:24:11;;19860:19:23;;7130:24:11;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7130:24:11;;-1:-1:-1;;7130:24:11;;;-1:-1:-1;;;;;;;7168:20:11;;7164:101;;7220:1;7224:29;7204:50;;;;;;;7164:101;7283:6;-1:-1:-1;7291:20:11;;-1:-1:-1;5716:1603:11;;;;;;;;:::o;548:631::-;625:20;616:5;:29;;;;;;;;:::i;:::-;;612:561;;;548:631;:::o;612:561::-;721:29;712:5;:38;;;;;;;;:::i;:::-;;708:465;;;766:34;;-1:-1:-1;;;766:34:11;;20398:2:23;766:34:11;;;20380:21:23;20437:2;20417:18;;;20410:30;20476:26;20456:18;;;20449:54;20520:18;;766:34:11;20196:348:23;708:465:11;830:35;821:5;:44;;;;;;;;:::i;:::-;;817:356;;;881:41;;-1:-1:-1;;;881:41:11;;20751:2:23;881:41:11;;;20733:21:23;20790:2;20770:18;;;20763:30;20829:33;20809:18;;;20802:61;20880:18;;881:41:11;20549:355:23;817:356:11;952:30;943:5;:39;;;;;;;;:::i;:::-;;939:234;;;998:44;;-1:-1:-1;;;998:44:11;;21111:2:23;998:44:11;;;21093:21:23;21150:2;21130:18;;;21123:30;21189:34;21169:18;;;21162:62;-1:-1:-1;;;21240:18:23;;;21233:32;21282:19;;998:44:11;20909:398:23;939:234:11;1072:30;1063:5;:39;;;;;;;;:::i;:::-;;1059:114;;;1118:44;;-1:-1:-1;;;1118:44:11;;21514:2:23;1118:44:11;;;21496:21:23;21553:2;21533:18;;;21526:30;21592:34;21572:18;;;21565:62;-1:-1:-1;;;21643:18:23;;;21636:32;21685:19;;1118:44:11;21312:398:23;8411:389:1;-1:-1:-1;;;;;8494:21:1;;8486:65;;;;-1:-1:-1;;;8486:65:1;;21917:2:23;8486:65:1;;;21899:21:23;21956:2;21936:18;;;21929:30;21995:33;21975:18;;;21968:61;22046:18;;8486:65:1;21715:355:23;8486:65:1;8638:6;8622:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8654:18:1;;:9;:18;;;;;;;;;;:28;;8676:6;;8654:9;:28;;8676:6;;8654:28;:::i;:::-;;;;-1:-1:-1;;8697:37:1;;1613:25:23;;;-1:-1:-1;;;;;8697:37:1;;;8714:1;;8697:37;;1601:2:23;1586:18;8697:37:1;;;;;;;8745:48;8773:1;8777:7;8786:6;8745:19;:48::i;9069:96:3:-;9127:7;9153:5;9157:1;9153;:5;:::i;7002:254::-;-1:-1:-1;;;;;2318:19:3;;;2292:7;2318:19;;;:10;:19;;;;;;;;;;;;;;;7193:56;;2318:19;;;;;7242:6;7193:16;:56::i;1135:192:14:-;1192:7;-1:-1:-1;;;;;1219:26:14;;;1211:78;;;;-1:-1:-1;;;1211:78:14;;22277:2:23;1211:78:14;;;22259:21:23;22316:2;22296:18;;;22289:30;22355:34;22335:18;;;22328:62;-1:-1:-1;;;22406:18:23;;;22399:37;22453:19;;1211:78:14;22075:403:23;13747:744:15;13809:11;-1:-1:-1;;;13836:1:15;:11;13832:75;;13869:3;13863:9;;;;13886:10;;;;:::i;:::-;;;13832:75;13925:5;13920:1;:10;13916:72;;13952:2;13946:8;;;;13968:9;;;;:::i;:::-;;;13916:72;-1:-1:-1;;;14001:1:15;:10;13997:72;;14033:2;14027:8;;;;14049:9;;;;:::i;:::-;;;13997:72;14087:5;14082:1;:10;14078:72;;14114:2;14108:8;;;;14130:9;;;;:::i;:::-;;;14078:72;14168:4;14163:1;:9;14159:69;;14194:1;14188:7;;;;14209:8;;;;:::i;:::-;;;14159:69;14246:4;14241:1;:9;14237:69;;14272:1;14266:7;;;;14287:8;;;;:::i;:::-;;;14237:69;14324:4;14319:1;:9;14315:69;;14350:1;14344:7;;;;14365:8;;;;:::i;:::-;;;14315:69;14402:4;14397:1;:9;14393:92;;14466:8;14473:1;14466:8;;:::i;14393:92::-;13747:744;;;:::o;20191:1149::-;20262:14;;;-1:-1:-1;;20377:1:15;20374;20367:20;20416:1;20413;20409:9;20400:18;;20467:5;20463:2;20460:13;20452:5;20448:2;20444:14;20440:34;20431:43;;;4210:4;20498:5;:14;20494:92;;20535:40;;-1:-1:-1;;;20535:40:15;;;;;1613:25:23;;;1586:18;;20535:40:15;1467:177:23;20494:92:15;20596:17;20623:19;20701:5;20698:1;20695;20688:19;20675:32;-1:-1:-1;;20749:18:15;20735:33;;20792:10;20788:152;;20873:11;4210:4;20856:5;:13;20855:29;20846:38;;20902:13;;;;;;20788:152;21189:11;21061:21;;;21057:39;21137:20;;;;21126:32;;;-1:-1:-1;;;21122:84:15;21029:199;;;;21250:13;21004:277;20983:341;;-1:-1:-1;20191:1149:15;;;;:::o;4886:8474::-;-1:-1:-1;;;5355:18:15;5351:22;;:26;5347:110;;5416:19;5407:28;5440:2;5406:36;5347:110;5478:18;5474:22;;:26;5470:110;;5539:19;5530:28;5563:2;5529:36;5470:110;5601:18;5597:22;;:26;5593:110;;5662:19;5653:28;5686:2;5652:36;5593:110;5724:18;5720:22;;:26;5716:110;;5785:19;5776:28;5809:2;5775:36;5716:110;5847:17;5843:21;;:25;5839:109;;5907:19;5898:28;5931:2;5897:36;5839:109;5969:17;5965:21;;:25;5961:109;;6029:19;6020:28;6053:2;6019:36;5961:109;6091:17;6087:21;;:25;6083:109;;6151:19;6142:28;6175:2;6141:36;6083:109;6213:17;6209:21;;:25;6205:109;;6273:19;6264:28;6297:2;6263:36;6205:109;6335:16;6331:20;;:24;6327:108;;6394:19;6385:28;6418:2;6384:36;6327:108;6456:16;6452:20;;:24;6448:108;;6515:19;6506:28;6539:2;6505:36;6448:108;6577:16;6573:20;;:24;6569:108;;6636:19;6627:28;6660:2;6626:36;6569:108;6698:16;6694:20;;:24;6690:108;;6757:19;6748:28;6781:2;6747:36;6690:108;6819:15;6815:19;;:23;6811:107;;6877:19;6868:28;6901:2;6867:36;6811:107;6939:15;6935:19;;:23;6931:107;;6997:19;6988:28;7021:2;6987:36;6931:107;7059:15;7055:19;;:23;7051:107;;7117:19;7108:28;7141:2;7107:36;7051:107;7179:15;7175:19;;:23;7171:107;;7237:19;7228:28;7261:2;7227:36;7171:107;7299:14;7295:18;;:22;7291:106;;7356:19;7347:28;7380:2;7346:36;7291:106;7418:14;7414:18;;:22;7410:106;;7475:19;7466:28;7499:2;7465:36;7410:106;7537:14;7533:18;;:22;7529:106;;7594:19;7585:28;7618:2;7584:36;7529:106;7656:14;7652:18;;:22;7648:106;;7713:19;7704:28;7737:2;7703:36;7648:106;7775:13;7771:17;;:21;7767:105;;7831:19;7822:28;7855:2;7821:36;7767:105;7893:13;7889:17;;:21;7885:105;;7949:19;7940:28;7973:2;7939:36;7885:105;8011:13;8007:17;;:21;8003:105;;8067:19;8058:28;8091:2;8057:36;8003:105;8129:13;8125:17;;:21;8121:105;;8185:19;8176:28;8209:2;8175:36;8121:105;8247:12;8243:16;;:20;8239:104;;8302:19;8293:28;8326:2;8292:36;8239:104;8364:12;8360:16;;:20;8356:104;;8419:19;8410:28;8443:2;8409:36;8356:104;8481:12;8477:16;;:20;8473:104;;8536:19;8527:28;8560:2;8526:36;8473:104;8598:12;8594:16;;:20;8590:104;;8653:19;8644:28;8677:2;8643:36;8590:104;8715:11;8711:15;;:19;8707:103;;8769:19;8760:28;8793:2;8759:36;8707:103;8831:11;8827:15;;:19;8823:103;;8885:19;8876:28;8909:2;8875:36;8823:103;8947:11;8943:15;;:19;8939:103;;9001:19;8992:28;9025:2;8991:36;8939:103;-1:-1:-1;;;9059:15:15;;:19;9055:103;;9117:19;9108:28;9141:2;9107:36;9055:103;9179:10;9175:14;;:18;9171:102;;9232:19;9223:28;9256:2;9222:36;9171:102;9294:10;9290:14;;:18;9286:102;;9347:19;9338:28;9371:2;9337:36;9286:102;9409:10;9405:14;;:18;9401:102;;9462:19;9453:28;9486:2;9452:36;9401:102;9524:10;9520:14;;:18;9516:102;;9577:19;9568:28;9601:2;9567:36;9516:102;9639:9;9635:13;;:17;9631:101;;9691:19;9682:28;9715:2;9681:36;9631:101;9753:9;9749:13;;:17;9745:101;;9805:19;9796:28;9829:2;9795:36;9745:101;9867:9;9863:13;;:17;9859:101;;9919:19;9910:28;9943:2;9909:36;9859:101;9981:9;9977:13;;:17;9973:101;;10033:19;10024:28;10057:2;10023:36;9973:101;10095:8;10091:12;;:16;10087:100;;10146:19;10137:28;10170:2;10136:36;10087:100;10208:8;10204:12;;:16;10200:100;;10259:19;10250:28;10283:2;10249:36;10200:100;10321:8;10317:12;;:16;10313:100;;10372:19;10363:28;10396:2;10362:36;10313:100;10434:8;10430:12;;:16;10426:100;;10485:19;10476:28;10509:2;10475:36;10426:100;10547:7;10543:11;;:15;10539:99;;10597:19;10588:28;10621:2;10587:36;10539:99;10659:7;10655:11;;:15;10651:99;;10709:19;10700:28;10733:2;10699:36;10651:99;10771:7;10767:11;;:15;10763:99;;10821:19;10812:28;10845:2;10811:36;10763:99;10883:7;10879:11;;:15;10875:99;;10933:19;10924:28;10957:2;10923:36;10875:99;10995:6;10991:10;;:14;10987:98;;11044:19;11035:28;11068:2;11034:36;10987:98;11106:6;11102:10;;:14;11098:98;;11155:19;11146:28;11179:2;11145:36;11098:98;11217:6;11213:10;;:14;11209:98;;11266:19;11257:28;11290:2;11256:36;11209:98;11328:6;11324:10;;:14;11320:98;;11377:19;11368:28;11401:2;11367:36;11320:98;11439:5;11435:9;;:13;11431:97;;11487:19;11478:28;11511:2;11477:36;11431:97;11549:5;11545:9;;:13;11541:97;;11597:19;11588:28;11621:2;11587:36;11541:97;11659:5;11655:9;;:13;11651:97;;11707:19;11698:28;11731:2;11697:36;11651:97;11769:5;11765:9;;:13;11761:97;;11817:19;11808:28;11841:2;11807:36;11761:97;11879:4;11875:8;;:12;11871:96;;11926:19;11917:28;11950:2;11916:36;11871:96;11988:4;11984:8;;:12;11980:96;;12035:19;12026:28;12059:2;12025:36;11980:96;12097:4;12093:8;;:12;12089:96;;12144:19;12135:28;12168:2;12134:36;12089:96;12206:4;12202:8;;:12;12198:96;;12253:19;12244:28;12277:2;12243:36;12198:96;12315:3;12311:7;;:11;12307:95;;12361:19;12352:28;12385:2;12351:36;12307:95;12423:3;12419:7;;:11;12415:95;;12469:19;12460:28;12493:2;12459:36;12415:95;12531:3;12527:7;;:11;12523:95;;12577:19;12568:28;12601:2;12567:36;12523:95;12639:3;12635:7;;:11;12631:95;;12685:19;12676:28;12709:2;12675:36;12631:95;4210:4;13286:15;13339:2;13334:7;;;;13327:3;:15;13315:28;;4886:8474::o;14:597:23:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:23;574:15;-1:-1:-1;;570:29:23;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:23:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:23;;723:42;;713:70;;779:1;776;769:12;794:254;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:23:o;1649:328::-;1726:6;1734;1742;1795:2;1783:9;1774:7;1770:23;1766:32;1763:52;;;1811:1;1808;1801:12;1763:52;1834:29;1853:9;1834:29;:::i;:::-;1824:39;;1882:38;1916:2;1905:9;1901:18;1882:38;:::i;:::-;1872:48;;1967:2;1956:9;1952:18;1939:32;1929:42;;1649:328;;;;;:::o;1982:180::-;2041:6;2094:2;2082:9;2073:7;2069:23;2065:32;2062:52;;;2110:1;2107;2100:12;2062:52;-1:-1:-1;2133:23:23;;1982:180;-1:-1:-1;1982:180:23:o;2538:186::-;2597:6;2650:2;2638:9;2629:7;2625:23;2621:32;2618:52;;;2666:1;2663;2656:12;2618:52;2689:29;2708:9;2689:29;:::i;2729:248::-;2797:6;2805;2858:2;2846:9;2837:7;2833:23;2829:32;2826:52;;;2874:1;2871;2864:12;2826:52;-1:-1:-1;;2897:23:23;;;2967:2;2952:18;;;2939:32;;-1:-1:-1;2729:248:23:o;3640:322::-;3717:6;3725;3733;3786:2;3774:9;3765:7;3761:23;3757:32;3754:52;;;3802:1;3799;3792:12;3754:52;3838:9;3825:23;3815:33;;3895:2;3884:9;3880:18;3867:32;3857:42;;3918:38;3952:2;3941:9;3937:18;3918:38;:::i;:::-;3908:48;;3640:322;;;;;:::o;3967:156::-;4033:20;;4093:4;4082:16;;4072:27;;4062:55;;4113:1;4110;4103:12;4128:531;4230:6;4238;4246;4254;4262;4270;4323:3;4311:9;4302:7;4298:23;4294:33;4291:53;;;4340:1;4337;4330:12;4291:53;4363:29;4382:9;4363:29;:::i;:::-;4353:39;;4439:2;4428:9;4424:18;4411:32;4401:42;;4490:2;4479:9;4475:18;4462:32;4452:42;;4513:36;4545:2;4534:9;4530:18;4513:36;:::i;:::-;4503:46;;4596:3;4585:9;4581:19;4568:33;4558:43;;4648:3;4637:9;4633:19;4620:33;4610:43;;4128:531;;;;;;;;:::o;5059:606::-;5170:6;5178;5186;5194;5202;5210;5218;5271:3;5259:9;5250:7;5246:23;5242:33;5239:53;;;5288:1;5285;5278:12;5239:53;5311:29;5330:9;5311:29;:::i;:::-;5301:39;;5359:38;5393:2;5382:9;5378:18;5359:38;:::i;:::-;5349:48;;5444:2;5433:9;5429:18;5416:32;5406:42;;5495:2;5484:9;5480:18;5467:32;5457:42;;5518:37;5550:3;5539:9;5535:19;5518:37;:::i;:::-;5508:47;;5602:3;5591:9;5587:19;5574:33;5564:43;;5654:3;5643:9;5639:19;5626:33;5616:43;;5059:606;;;;;;;;;;:::o;5670:260::-;5738:6;5746;5799:2;5787:9;5778:7;5774:23;5770:32;5767:52;;;5815:1;5812;5805:12;5767:52;5838:29;5857:9;5838:29;:::i;:::-;5828:39;;5886:38;5920:2;5909:9;5905:18;5886:38;:::i;:::-;5876:48;;5670:260;;;;;:::o;5935:350::-;6002:6;6010;6063:2;6051:9;6042:7;6038:23;6034:32;6031:52;;;6079:1;6076;6069:12;6031:52;6102:29;6121:9;6102:29;:::i;:::-;6092:39;;6181:2;6170:9;6166:18;6153:32;6225:10;6218:5;6214:22;6207:5;6204:33;6194:61;;6251:1;6248;6241:12;6194:61;6274:5;6264:15;;;5935:350;;;;;:::o;7227:127::-;7288:10;7283:3;7279:20;7276:1;7269:31;7319:4;7316:1;7309:15;7343:4;7340:1;7333:15;8447:277;8514:6;8567:2;8555:9;8546:7;8542:23;8538:32;8535:52;;;8583:1;8580;8573:12;8535:52;8615:9;8609:16;8668:5;8661:13;8654:21;8647:5;8644:32;8634:60;;8690:1;8687;8680:12;9125:127;9186:10;9181:3;9177:20;9174:1;9167:31;9217:4;9214:1;9207:15;9241:4;9238:1;9231:15;9257:128;9297:3;9328:1;9324:6;9321:1;9318:13;9315:39;;;9334:18;;:::i;:::-;-1:-1:-1;9370:9:23;;9257:128::o;10443:125::-;10483:4;10511:1;10508;10505:8;10502:34;;;10516:18;;:::i;:::-;-1:-1:-1;10553:9:23;;10443:125::o;10573:168::-;10613:7;10679:1;10675;10671:6;10667:14;10664:1;10661:21;10656:1;10649:9;10642:17;10638:45;10635:71;;;10686:18;;:::i;:::-;-1:-1:-1;10726:9:23;;10573:168::o;10878:217::-;10918:1;10944;10934:132;;10988:10;10983:3;10979:20;10976:1;10969:31;11023:4;11020:1;11013:15;11051:4;11048:1;11041:15;10934:132;-1:-1:-1;11080:9:23;;10878:217::o;14356:184::-;14426:6;14479:2;14467:9;14458:7;14454:23;14450:32;14447:52;;;14495:1;14492;14485:12;14447:52;-1:-1:-1;14518:16:23;;14356:184;-1:-1:-1;14356:184:23:o;20064:127::-;20125:10;20120:3;20116:20;20113:1;20106:31;20156:4;20153:1;20146:15;20180:4;20177:1;20170:15", "language": "Solidity", "natspec": {"author": "Daniel Von Fange", "errors": {"PRBMathUD60x18__Exp2InputTooBig(uint256)": [{"notice": "Emitted when the input is greater than 192."}], "PRBMathUD60x18__LogInputTooSmall(uint256)": [{"notice": "Emitted when the input is less than 1."}], "PRBMath__MulDivFixedPointOverflow(uint256)": [{"notice": "Emitted when the result overflows uint256."}]}, "kind": "dev", "methods": {"DOMAIN_SEPARATOR()": {"details": "See {IERC20Permit-DOMAIN_SEPARATOR}."}, "allowance(address,address)": {"details": "See {IERC20-allowance}."}, "approve(address,uint256)": {"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."}, "balanceOf(address)": {"details": "See {IERC20-balanceOf}."}, "checkpoints(address,uint32)": {"details": "Get the `pos`-th checkpoint for `account`."}, "collectRewards()": {"notice": "Collect all earned OGV rewards."}, "decimals()": {"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."}, "decreaseAllowance(address,uint256)": {"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."}, "delegate(address)": {"details": "Delegate votes from the sender to `delegatee`."}, "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {"details": "Delegates votes from signer to `delegatee`"}, "delegates(address)": {"details": "Get the address `account` is currently delegating to."}, "extend(uint256,uint256)": {"notice": "Extend a stake lockup for additional points. The stake end time is computed from the current time + duration, just like it is for new stakes. So a new stake for seven days duration and an old stake extended with a seven days duration would have the same end. If an extend is made before the start of staking, the start time for the new stake is shifted forwards to the start of staking, which also shifts forward the end date.", "params": {"duration": "number of seconds from now to stake for", "lockupId": "the id of the old lockup to extend"}}, "getPastTotalSupply(uint256)": {"details": "Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined"}, "getPastVotes(address,uint256)": {"details": "Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined"}, "getVotes(address)": {"details": "Gets the current votes balance for `account`"}, "increaseAllowance(address,uint256)": {"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."}, "name()": {"details": "Returns the name of the token."}, "nonces(address)": {"details": "See {IERC20Permit-nonces}."}, "numCheckpoints(address)": {"details": "Get number of checkpoints for `account`."}, "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {"details": "See {IERC20Permit-permit}."}, "previewPoints(uint256,uint256)": {"notice": "Preview the number of points that would be returned for the given amount and duration.", "params": {"amount": "OGV to be staked", "duration": "number of seconds to stake for"}, "returns": {"_0": "points staking points that would be returned", "_1": "end staking period end date"}}, "previewRewards(address)": {"notice": "Shows the amount of OGV a user would receive if they collected rewards at this time.", "params": {"user": "to preview rewards for"}, "returns": {"_0": "OGV rewards amount"}}, "stake(uint256,uint256)": {"notice": "Stake OGV If staking before the start of staking (epoch), then the lockup start and end dates are shifted forward so that the lockup starts at the epoch. Any rewards previously earned will be paid out.Stake OGV for myself.", "params": {"amount": "OGV to lockup in the stake", "duration": "in seconds for the stake"}}, "stake(uint256,uint256,address)": {"notice": "Stake OGV to an address that may not be the same as the sender of the funds. This can be used to give staked funds to someone else. If staking before the start of staking (epoch), then the lockup start and end dates are shifted forward so that the lockup starts at the epoch. Any rewards previously earned will be paid out.", "params": {"amount": "OGV to lockup in the stake", "duration": "in seconds for the stake", "to": "address to receive ownership of the stake"}}, "symbol()": {"details": "Returns the symbol of the token, usually a shorter version of the name."}, "totalSupply()": {"details": "See {IERC20-totalSupply}."}, "unstake(uint256)": {"notice": "Collect staked OGV for a lockup and any earned rewards.", "params": {"lockupId": "the id of the lockup to unstake"}}}, "notice": "Provides staking, vote power history, vote delegation, and rewards distribution. The balance received for staking (and thus the voting power and rewards distribution) goes up exponentially by the end of the staked period.", "title": "OGV Staking", "version": 1}, "offset": [837, 10405], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x211 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7628A37D GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x50E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x521 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0xF166E920 EQ PUSH2 0x571 JUMPI DUP1 PUSH4 0xF7240D2F EQ PUSH2 0x584 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0xC89258DB EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0xC93D0B1E EQ PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x900CF0CF GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x900CF0CF EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0x939D6237 EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7628A37D EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x587CDE1E GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x70BB45B3 EQ PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x4423BF57 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x4FD0E648 EQ PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x142561CF EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2A8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x3B32A7A3AB PUSH1 0xD9 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x3117 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x259 PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0x3183 JUMP JUMPDEST PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23D JUMP JUMPDEST PUSH2 0x290 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23D JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23D JUMP JUMPDEST PUSH2 0x259 PUSH2 0x2C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x31AD JUMP JUMPDEST PUSH2 0x5C5 JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x2DB CALLDATASIZE PUSH1 0x4 PUSH2 0x31E9 JUMP JUMPDEST PUSH2 0x615 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23D JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x868 JUMP JUMPDEST PUSH2 0x259 PUSH2 0x307 CALLDATASIZE PUSH1 0x4 PUSH2 0x3183 JUMP JUMPDEST PUSH2 0x877 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x31A CALLDATASIZE PUSH1 0x4 PUSH2 0x3183 JUMP JUMPDEST PUSH2 0x899 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x32D CALLDATASIZE PUSH1 0x4 PUSH2 0x3202 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x34D CALLDATASIZE PUSH1 0x4 PUSH2 0x321D JUMP JUMPDEST PUSH2 0x913 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x23D JUMP JUMPDEST PUSH2 0x290 PUSH2 0x375 CALLDATASIZE PUSH1 0x4 PUSH2 0x3202 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3202 JUMP JUMPDEST PUSH2 0xA97 JUMP JUMPDEST PUSH2 0x3B9 PUSH2 0x3B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3202 JUMP JUMPDEST PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23D JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x3DC CALLDATASIZE PUSH1 0x4 PUSH2 0x3202 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x40D CALLDATASIZE PUSH1 0x4 PUSH2 0x323F JUMP JUMPDEST PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x420 CALLDATASIZE PUSH1 0x4 PUSH2 0x321D JUMP JUMPDEST PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x433 CALLDATASIZE PUSH1 0x4 PUSH2 0x3202 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x446 CALLDATASIZE PUSH1 0x4 PUSH2 0x31E9 JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH2 0x2AC PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x2AC PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x489 CALLDATASIZE PUSH1 0x4 PUSH2 0x3202 JUMP JUMPDEST PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x259 PUSH2 0x49C CALLDATASIZE PUSH1 0x4 PUSH2 0x3183 JUMP JUMPDEST PUSH2 0xBF0 JUMP JUMPDEST PUSH2 0x259 PUSH2 0x2C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3183 JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x4BD CALLDATASIZE PUSH1 0x4 PUSH2 0x3285 JUMP JUMPDEST PUSH2 0xC76 JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x4D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x321D JUMP JUMPDEST PUSH2 0xDCA JUMP JUMPDEST PUSH2 0x4E8 PUSH2 0x4E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3183 JUMP JUMPDEST PUSH2 0xFD9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x23D JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x51C CALLDATASIZE PUSH1 0x4 PUSH2 0x32DD JUMP JUMPDEST PUSH2 0x102A JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x52F CALLDATASIZE PUSH1 0x4 PUSH2 0x3347 JUMP JUMPDEST PUSH2 0x11AC JUMP JUMPDEST PUSH2 0x547 PUSH2 0x542 CALLDATASIZE PUSH1 0x4 PUSH2 0x337A JUMP JUMPDEST PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x23D JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x57F CALLDATASIZE PUSH1 0x4 PUSH2 0x3202 JUMP JUMPDEST PUSH2 0x125A JUMP JUMPDEST PUSH2 0x290 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x5B9 DUP2 DUP6 DUP6 PUSH2 0x138F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E673A205472616E73666572732064697361626C65640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x636 JUMPI PUSH2 0x636 PUSH2 0x33BA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x2 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND DUP1 DUP7 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV AND SWAP5 DUP5 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD DUP3 SWAP1 MSTORE SWAP2 SWAP4 POP SWAP1 SWAP2 SWAP1 TIMESTAMP DUP3 GT ISZERO PUSH2 0x6DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E673A20456E64206F66206C6F636B7570206E6F74207265616368 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60C JUMP JUMPDEST DUP2 PUSH2 0x73A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E673A20416C726561647920756E7374616B65642074686973206C PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6F636B757 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60C JUMP JUMPDEST PUSH2 0x743 CALLER PUSH2 0x14B3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP7 SWAP1 DUP2 LT PUSH2 0x764 JUMPI PUSH2 0x764 PUSH2 0x33BA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP2 DUP2 SSTORE PUSH1 0x1 ADD SSTORE PUSH2 0x784 CALLER DUP3 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x815 SWAP2 SWAP1 PUSH2 0x33D0 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE CALLER SWAP1 PUSH32 0x5B744E3E9358BC00BA3CC0C6606A4D6536134DBA00B2D2EE4B5DE169ACD6427 SWAP1 PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x872 PUSH2 0x182E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x5B9 DUP2 DUP6 DUP6 PUSH2 0x88A DUP4 DUP4 PUSH2 0x11AC JUMP JUMPDEST PUSH2 0x894 SWAP2 SWAP1 PUSH2 0x3408 JUMP JUMPDEST PUSH2 0x138F JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x8EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A20626C6F636B206E6F7420796574206D696E656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x90C SWAP1 DUP4 PUSH2 0x1955 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x93A80 DUP4 LT ISZERO PUSH2 0x95E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x14DD185ADA5B99CE88151BDBC81CDA1BDC9D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60C JUMP JUMPDEST PUSH4 0x7861F80 DUP4 GT ISZERO PUSH2 0x9A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x5374616B696E673A20546F6F206C6F6E67 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60C JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 TIMESTAMP GT PUSH2 0x9F5 JUMPI PUSH32 0x0 PUSH2 0x9F7 JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA05 DUP6 DUP4 PUSH2 0x3408 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH4 0x1E13380 PUSH2 0xA38 PUSH32 0x0 DUP5 PUSH2 0x3420 JUMP JUMPDEST PUSH2 0xA4A SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3437 JUMP JUMPDEST PUSH2 0xA54 SWAP2 SWAP1 PUSH2 0x3456 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA6A PUSH8 0x18FAE27693B40000 DUP4 PUSH2 0x1A11 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0xA7F DUP3 DUP11 PUSH2 0x3437 JUMP JUMPDEST PUSH2 0xA89 SWAP2 SWAP1 PUSH2 0x3456 JUMP JUMPDEST SWAP9 SWAP3 SWAP8 POP SWAP2 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAA1 CALLER DUP3 PUSH2 0x1A50 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x5BF SWAP1 PUSH2 0x1AC9 JUMP JUMPDEST PUSH2 0xACF CALLER PUSH2 0x14B3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xADC DUP4 DUP4 DUP4 PUSH2 0x1B32 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xAEC DUP3 DUP3 CALLER PUSH2 0x1B32 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0xB5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A20626C6F636B206E6F7420796574206D696E656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60C JUMP JUMPDEST PUSH2 0x5BF PUSH1 0x9 DUP4 PUSH2 0x1955 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xBDD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xBAC PUSH1 0x1 DUP4 PUSH2 0x3420 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xBBC JUMPI PUSH2 0xBBC PUSH2 0x33BA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0xBFE DUP3 DUP7 PUSH2 0x11AC JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xC5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60C JUMP JUMPDEST PUSH2 0xC6B DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x138F JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xCC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A207369676E61747572652065787069726564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xD40 SWAP1 PUSH2 0xD38 SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1E19 JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x1E67 JUMP JUMPDEST SWAP1 POP PUSH2 0xD69 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST DUP7 EQ PUSH2 0xDB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A20696E76616C6964206E6F6E636500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60C JUMP JUMPDEST PUSH2 0xDC1 DUP2 DUP9 PUSH2 0x1A50 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xDD3 CALLER PUSH2 0x14B3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0xDF4 JUMPI PUSH2 0xDF4 PUSH2 0x33BA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x2 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND DUP1 DUP8 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV AND SWAP4 DUP6 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP5 ADD DUP3 SWAP1 MSTORE SWAP3 SWAP5 POP SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP1 PUSH2 0xE4E DUP6 DUP9 PUSH2 0x913 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 DUP2 GT PUSH2 0xEAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E673A204E6577206C6F636B7570206D757374206265206C6F6E67 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x32B9 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH1 0x20 DUP1 DUP9 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP9 ADD DUP5 SWAP1 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD DUP8 SWAP2 SWAP1 DUP11 SWAP1 DUP2 LT PUSH2 0xEE9 JUMPI PUSH2 0xEE9 PUSH2 0x33BA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD SWAP3 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x80 SHL MUL SWAP4 AND SWAP3 SWAP1 SWAP3 OR PUSH1 0x2 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD SWAP1 DUP2 SSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH2 0xF3B CALLER PUSH2 0xF36 DUP6 DUP6 PUSH2 0x3420 JUMP JUMPDEST PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP1 PUSH32 0x5B744E3E9358BC00BA3CC0C6606A4D6536134DBA00B2D2EE4B5DE169ACD6427 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 DUP1 MLOAD DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP1 PUSH32 0x2720EFA4B2DD4F3F8A347DA3CBD290A522E9432DA9072C5B8E6300496FDDE282 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xFF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP4 AND SWAP5 POP PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SWAP2 AND SWAP2 POP DUP4 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x107A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60C JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x10C7 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1122 DUP3 PUSH2 0x1E19 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1132 DUP3 DUP8 DUP8 DUP8 PUSH2 0x1E67 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1195 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60C JUMP JUMPDEST PUSH2 0x11A0 DUP11 DUP11 DUP11 PUSH2 0x138F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP5 AND SWAP1 DUP2 LT PUSH2 0x121B JUMPI PUSH2 0x121B PUSH2 0x33BA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1266 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1276 JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD SWAP1 POP DUP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE0D801DD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1300 SWAP2 SWAP1 PUSH2 0x3478 JUMP JUMPDEST PUSH2 0x130F SWAP1 PUSH5 0xE8D4A51000 PUSH2 0x3437 JUMP JUMPDEST PUSH2 0x1319 SWAP2 SWAP1 PUSH2 0x3456 JUMP JUMPDEST PUSH2 0x1323 SWAP1 DUP3 PUSH2 0x3408 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x134A SWAP1 DUP4 PUSH2 0x3420 JUMP JUMPDEST SWAP1 POP PUSH5 0xE8D4A51000 DUP2 PUSH2 0x1372 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x137C SWAP2 SWAP1 PUSH2 0x3437 JUMP JUMPDEST PUSH2 0x1386 SWAP2 SWAP1 PUSH2 0x3456 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x13F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1452 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14BE PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x16A6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x152D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1551 SWAP2 SWAP1 PUSH2 0x3478 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70BB45B3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x15CF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x15CC SWAP2 DUP2 ADD SWAP1 PUSH2 0x3478 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x15D8 JUMPI PUSH2 0x15DA JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1643 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1667 SWAP2 SWAP1 PUSH2 0x3478 JUMP JUMPDEST PUSH2 0x1671 SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x1683 DUP3 PUSH5 0xE8D4A51000 PUSH2 0x3437 JUMP JUMPDEST PUSH2 0x168D SWAP2 SWAP1 PUSH2 0x3456 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x169E SWAP2 SWAP1 PUSH2 0x3408 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xC SLOAD PUSH2 0x16CC SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH5 0xE8D4A51000 DUP3 PUSH2 0x16F6 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1700 SWAP2 SWAP1 PUSH2 0x3437 JUMP JUMPDEST PUSH2 0x170A SWAP2 SWAP1 PUSH2 0x3456 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE SWAP1 POP DUP1 PUSH2 0x1733 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17C6 SWAP2 SWAP1 PUSH2 0x33D0 JUMP JUMPDEST POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x619CAAFABDD75649B302BA8419E48CCCF64F37F1983AC4727CFB38B57703FFC9 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1802 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x181A DUP3 DUP3 PUSH2 0x1F19 JUMP JUMPDEST PUSH2 0x1828 PUSH1 0x9 PUSH2 0x206E DUP4 PUSH2 0x207A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x1887 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x18B1 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 DUP3 DUP5 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP4 ADD MSTORE CHAINID PUSH1 0x80 DUP4 ADD MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19B9 JUMPI PUSH1 0x0 PUSH2 0x1970 DUP3 DUP5 PUSH2 0x21F1 JUMP JUMPDEST SWAP1 POP DUP5 DUP7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1985 JUMPI PUSH2 0x1985 PUSH2 0x33BA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x19A5 JUMPI DUP1 SWAP3 POP PUSH2 0x19B3 JUMP JUMPDEST PUSH2 0x19B0 DUP2 PUSH1 0x1 PUSH2 0x3408 JUMP JUMPDEST SWAP2 POP JUMPDEST POP PUSH2 0x195C JUMP JUMPDEST DUP2 ISZERO PUSH2 0x19FC JUMPI DUP5 PUSH2 0x19CB PUSH1 0x1 DUP5 PUSH2 0x3420 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x19DB JUMPI PUSH2 0x19DB PUSH2 0x33BA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH2 0x19FF JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1A36 JUMPI DUP2 ISZERO PUSH2 0x1A25 JUMPI PUSH1 0x0 PUSH2 0x1A2F JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 JUMPDEST SWAP1 POP PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x90C PUSH2 0x1A4B PUSH2 0x1A45 DUP6 PUSH2 0x220C JUMP JUMPDEST DUP5 PUSH2 0x22BC JUMP JUMPDEST PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP6 DUP5 MSTORE DUP3 DUP7 KECCAK256 SLOAD SWAP5 SWAP1 SWAP4 MSTORE DUP8 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP6 AND SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x1828 DUP3 DUP5 DUP4 PUSH2 0x230E JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x322062697473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1B88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E673A20546F20746865207A65726F206164647265737300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 GT ISZERO PUSH2 0x1BD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0xA6E8C2D6D2DCCE7440A8DEDE40DAEAC6D PUSH1 0x7B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60C JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x1C19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0xA6E8C2D6D2DCCE74409CDEE840CADCDEEACED PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1C26 DUP6 DUP6 PUSH2 0x913 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB PUSH2 0x1C3C PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C46 SWAP1 DUP5 PUSH2 0x3408 JUMP JUMPDEST GT ISZERO PUSH2 0x1C94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E673A204D617820706F696E747320657863656564656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60C JUMP JUMPDEST PUSH2 0x1C9D DUP4 PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP12 AND DUP3 MSTORE DUP7 DUP2 AND DUP3 DUP7 ADD SWAP1 DUP2 MSTORE SWAP4 DUP3 ADD DUP9 DUP2 MSTORE DUP4 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP7 SSTORE SWAP5 DUP9 MSTORE SWAP6 SWAP1 SWAP7 KECCAK256 SWAP2 MLOAD SWAP4 MLOAD DUP2 AND PUSH1 0x1 PUSH1 0x80 SHL MUL SWAP4 AND SWAP3 SWAP1 SWAP3 OR PUSH1 0x2 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD SWAP2 DUP3 SSTORE SWAP2 MLOAD SWAP2 ADD SSTORE PUSH2 0x1D18 DUP4 DUP4 PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D8B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DAF SWAP2 SWAP1 PUSH2 0x33D0 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0x2720EFA4B2DD4F3F8A347DA3CBD290A522E9432DA9072C5B8E6300496FDDE282 SWAP1 PUSH2 0x1DF7 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3420 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP10 SWAP1 MSTORE DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 ADD PUSH2 0x859 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BF PUSH2 0x1E26 PUSH2 0x182E JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x42 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x62 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1E78 DUP8 DUP8 DUP8 DUP8 PUSH2 0x243C JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1E85 DUP2 PUSH2 0x2529 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E99 DUP3 DUP3 PUSH2 0x26E4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB LT ISZERO PUSH2 0x1F0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x766572666C6F77696E6720766F746573 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60C JUMP JUMPDEST PUSH2 0x1828 PUSH1 0x9 PUSH2 0x27CB DUP4 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1F79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1FED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x201C SWAP1 DUP5 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xADC DUP4 PUSH1 0x0 DUP5 PUSH2 0x27D7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90C DUP3 DUP5 PUSH2 0x3420 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP1 ISZERO PUSH2 0x20C4 JUMPI DUP6 PUSH2 0x2093 PUSH1 0x1 DUP4 PUSH2 0x3420 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x20A3 JUMPI PUSH2 0x20A3 PUSH2 0x33BA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP3 POP PUSH2 0x20E0 DUP4 DUP6 DUP8 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x211E JUMPI POP NUMBER DUP7 PUSH2 0x20FA PUSH1 0x1 DUP5 PUSH2 0x3420 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x210A JUMPI PUSH2 0x210A PUSH2 0x33BA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x217E JUMPI PUSH2 0x212C DUP3 PUSH2 0x2809 JUMP JUMPDEST DUP7 PUSH2 0x2138 PUSH1 0x1 DUP5 PUSH2 0x3420 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2148 JUMPI PUSH2 0x2148 PUSH2 0x33BA JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x21E8 JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2193 NUMBER PUSH2 0x1AC9 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21A7 DUP6 PUSH2 0x2809 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 DUP2 AND SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 SWAP1 KECCAK256 DUP4 MLOAD SWAP5 SWAP1 SWAP4 ADD MLOAD SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x20 SHL MUL PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP2 ADD SSTORE JUMPDEST POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2200 PUSH1 0x2 DUP5 DUP5 XOR PUSH2 0x3456 JUMP JUMPDEST PUSH2 0x90C SWAP1 DUP5 DUP5 AND PUSH2 0x3408 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 LT ISZERO PUSH2 0x223A JUMPI PUSH1 0x40 MLOAD PUSH4 0x36214137 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x60C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x224F PUSH8 0xDE0B6B3A7640000 DUP5 DIV PUSH2 0x2872 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP1 DUP3 MUL SWAP4 POP SWAP1 SWAP2 POP DUP4 DUP3 SHR SWAP1 DUP2 EQ ISZERO PUSH2 0x2272 JUMPI POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH8 0x6F05B59D3B20000 JUMPDEST DUP1 ISZERO PUSH2 0x22B4 JUMPI PUSH8 0xDE0B6B3A7640000 DUP3 DUP1 MUL DIV SWAP2 POP PUSH8 0x1BC16D674EC80000 DUP3 LT PUSH2 0x22AC JUMPI SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SWAP2 SWAP1 SWAP2 SHR SWAP1 JUMPDEST PUSH1 0x1 SHR PUSH2 0x227C JUMP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90C DUP4 DUP4 PUSH2 0x295A JUMP JUMPDEST PUSH1 0x0 PUSH9 0xA688906BD8B000000 DUP3 LT PUSH2 0x22F6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A4F26F1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x60C JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x40 DUP4 SWAP1 SHL DIV PUSH2 0x90C DUP2 PUSH2 0x2A1C JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x2330 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0xADC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x23BE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x236B SWAP1 PUSH2 0x206E DUP6 PUSH2 0x207A JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x23B3 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0xADC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x23F4 SWAP1 PUSH2 0x27CB DUP6 PUSH2 0x207A JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x859 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x2473 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x2520 JUMP JUMPDEST DUP5 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x248B JUMPI POP DUP5 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x249C JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x4 PUSH2 0x2520 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2519 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x2520 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x253D JUMPI PUSH2 0x253D PUSH2 0x3491 JUMP JUMPDEST EQ ISZERO PUSH2 0x2546 JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x255A JUMPI PUSH2 0x255A PUSH2 0x3491 JUMP JUMPDEST EQ ISZERO PUSH2 0x25A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60C JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x25BC JUMPI PUSH2 0x25BC PUSH2 0x3491 JUMP JUMPDEST EQ ISZERO PUSH2 0x260A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60C JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x261E JUMPI PUSH2 0x261E PUSH2 0x3491 JUMP JUMPDEST EQ ISZERO PUSH2 0x2677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60C JUMP JUMPDEST PUSH1 0x4 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x268B JUMPI PUSH2 0x268B PUSH2 0x3491 JUMP JUMPDEST EQ ISZERO PUSH2 0xAA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202776272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x273A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60C JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x274C SWAP2 SWAP1 PUSH2 0x3408 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x2779 SWAP1 DUP5 SWAP1 PUSH2 0x3408 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xAEC PUSH1 0x0 DUP4 DUP4 PUSH2 0x27D7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90C DUP3 DUP5 PUSH2 0x3408 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0xADC SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x230E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP3 GT ISZERO PUSH2 0x1B2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32342062697473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x80 SHL DUP3 LT PUSH2 0x2892 JUMPI PUSH1 0x80 SWAP2 DUP3 SHR SWAP2 PUSH2 0x288F SWAP1 DUP3 PUSH2 0x3408 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x28B5 JUMPI PUSH1 0x40 SWAP2 DUP3 SHR SWAP2 PUSH2 0x28B2 SWAP1 DUP3 PUSH2 0x3408 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x20 SHL DUP3 LT PUSH2 0x28D3 JUMPI PUSH1 0x20 SWAP2 DUP3 SHR SWAP2 PUSH2 0x28D0 SWAP1 DUP3 PUSH2 0x3408 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x28F0 JUMPI PUSH1 0x10 SWAP2 DUP3 SHR SWAP2 PUSH2 0x28ED SWAP1 DUP3 PUSH2 0x3408 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x290C JUMPI PUSH1 0x8 SWAP2 DUP3 SHR SWAP2 PUSH2 0x2909 SWAP1 DUP3 PUSH2 0x3408 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x2927 JUMPI PUSH1 0x4 SWAP2 DUP3 SHR SWAP2 PUSH2 0x2924 SWAP1 DUP3 PUSH2 0x3408 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x2942 JUMPI PUSH1 0x2 SWAP2 DUP3 SHR SWAP2 PUSH2 0x293F SWAP1 DUP3 PUSH2 0x3408 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x2955 JUMPI PUSH2 0x5BF PUSH1 0x1 DUP3 PUSH2 0x3408 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP5 DUP7 MULMOD DUP5 DUP7 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH8 0xDE0B6B3A7640000 DUP2 LT PUSH2 0x299E JUMPI PUSH1 0x40 MLOAD PUSH4 0x698D9A01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x60C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xDE0B6B3A7640000 DUP7 DUP9 MULMOD SWAP2 POP POP PUSH8 0x6F05B59D3B1FFFF DUP2 GT DUP3 PUSH2 0x29D8 JUMPI DUP1 PUSH8 0xDE0B6B3A7640000 DUP6 DIV ADD SWAP5 POP POP POP POP POP PUSH2 0x5BF JUMP JUMPDEST PUSH3 0x40000 DUP3 DUP6 SUB DIV SWAP4 SWAP1 SWAP2 GT SWAP1 SWAP2 SUB PUSH1 0x1 PUSH1 0xEE SHL MUL SWAP2 SWAP1 SWAP2 OR PUSH32 0xACCB18165BD6FE31AE1CF318DC5B51EEE0E1BA569B88CD74C1773B91FAC10669 MUL ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xBF SHL PUSH8 0x8000000000000000 DUP3 AND ISZERO PUSH2 0x2A40 JUMPI PUSH9 0x16A09E667F3BCC909 MUL PUSH1 0x40 SHR JUMPDEST PUSH8 0x4000000000000000 DUP3 AND ISZERO PUSH2 0x2A5F JUMPI PUSH9 0x1306FE0A31B7152DF MUL PUSH1 0x40 SHR JUMPDEST PUSH8 0x2000000000000000 DUP3 AND ISZERO PUSH2 0x2A7E JUMPI PUSH9 0x1172B83C7D517ADCE MUL PUSH1 0x40 SHR JUMPDEST PUSH8 0x1000000000000000 DUP3 AND ISZERO PUSH2 0x2A9D JUMPI PUSH9 0x10B5586CF9890F62A MUL PUSH1 0x40 SHR JUMPDEST PUSH8 0x800000000000000 DUP3 AND ISZERO PUSH2 0x2ABC JUMPI PUSH9 0x1059B0D31585743AE MUL PUSH1 0x40 SHR JUMPDEST PUSH8 0x400000000000000 DUP3 AND ISZERO PUSH2 0x2ADB JUMPI PUSH9 0x102C9A3E778060EE7 MUL PUSH1 0x40 SHR JUMPDEST PUSH8 0x200000000000000 DUP3 AND ISZERO PUSH2 0x2AFA JUMPI PUSH9 0x10163DA9FB33356D8 MUL PUSH1 0x40 SHR JUMPDEST PUSH8 0x100000000000000 DUP3 AND ISZERO PUSH2 0x2B19 JUMPI PUSH9 0x100B1AFA5ABCBED61 MUL PUSH1 0x40 SHR JUMPDEST PUSH7 0x80000000000000 DUP3 AND ISZERO PUSH2 0x2B37 JUMPI PUSH9 0x10058C86DA1C09EA2 MUL PUSH1 0x40 SHR JUMPDEST PUSH7 0x40000000000000 DUP3 AND ISZERO PUSH2 0x2B55 JUMPI PUSH9 0x1002C605E2E8CEC50 MUL PUSH1 0x40 SHR JUMPDEST PUSH7 0x20000000000000 DUP3 AND ISZERO PUSH2 0x2B73 JUMPI PUSH9 0x100162F3904051FA1 MUL PUSH1 0x40 SHR JUMPDEST PUSH7 0x10000000000000 DUP3 AND ISZERO PUSH2 0x2B91 JUMPI PUSH9 0x1000B175EFFDC76BA MUL PUSH1 0x40 SHR JUMPDEST PUSH7 0x8000000000000 DUP3 AND ISZERO PUSH2 0x2BAF JUMPI PUSH9 0x100058BA01FB9F96D MUL PUSH1 0x40 SHR JUMPDEST PUSH7 0x4000000000000 DUP3 AND ISZERO PUSH2 0x2BCD JUMPI PUSH9 0x10002C5CC37DA9492 MUL PUSH1 0x40 SHR JUMPDEST PUSH7 0x2000000000000 DUP3 AND ISZERO PUSH2 0x2BEB JUMPI PUSH9 0x1000162E525EE0547 MUL PUSH1 0x40 SHR JUMPDEST PUSH7 0x1000000000000 DUP3 AND ISZERO PUSH2 0x2C09 JUMPI PUSH9 0x10000B17255775C04 MUL PUSH1 0x40 SHR JUMPDEST PUSH6 0x800000000000 DUP3 AND ISZERO PUSH2 0x2C26 JUMPI PUSH9 0x1000058B91B5BC9AE MUL PUSH1 0x40 SHR JUMPDEST PUSH6 0x400000000000 DUP3 AND ISZERO PUSH2 0x2C43 JUMPI PUSH9 0x100002C5C89D5EC6D MUL PUSH1 0x40 SHR JUMPDEST PUSH6 0x200000000000 DUP3 AND ISZERO PUSH2 0x2C60 JUMPI PUSH9 0x10000162E43F4F831 MUL PUSH1 0x40 SHR JUMPDEST PUSH6 0x100000000000 DUP3 AND ISZERO PUSH2 0x2C7D JUMPI PUSH9 0x100000B1721BCFC9A MUL PUSH1 0x40 SHR JUMPDEST PUSH6 0x80000000000 DUP3 AND ISZERO PUSH2 0x2C9A JUMPI PUSH9 0x10000058B90CF1E6E MUL PUSH1 0x40 SHR JUMPDEST PUSH6 0x40000000000 DUP3 AND ISZERO PUSH2 0x2CB7 JUMPI PUSH9 0x1000002C5C863B73F MUL PUSH1 0x40 SHR JUMPDEST PUSH6 0x20000000000 DUP3 AND ISZERO PUSH2 0x2CD4 JUMPI PUSH9 0x100000162E430E5A2 MUL PUSH1 0x40 SHR JUMPDEST PUSH6 0x10000000000 DUP3 AND ISZERO PUSH2 0x2CF1 JUMPI PUSH9 0x1000000B172183551 MUL PUSH1 0x40 SHR JUMPDEST PUSH5 0x8000000000 DUP3 AND ISZERO PUSH2 0x2D0D JUMPI PUSH9 0x100000058B90C0B49 MUL PUSH1 0x40 SHR JUMPDEST PUSH5 0x4000000000 DUP3 AND ISZERO PUSH2 0x2D29 JUMPI PUSH9 0x10000002C5C8601CC MUL PUSH1 0x40 SHR JUMPDEST PUSH5 0x2000000000 DUP3 AND ISZERO PUSH2 0x2D45 JUMPI PUSH9 0x1000000162E42FFF0 MUL PUSH1 0x40 SHR JUMPDEST PUSH5 0x1000000000 DUP3 AND ISZERO PUSH2 0x2D61 JUMPI PUSH9 0x10000000B17217FBB MUL PUSH1 0x40 SHR JUMPDEST PUSH5 0x800000000 DUP3 AND ISZERO PUSH2 0x2D7D JUMPI PUSH9 0x1000000058B90BFCE MUL PUSH1 0x40 SHR JUMPDEST PUSH5 0x400000000 DUP3 AND ISZERO PUSH2 0x2D99 JUMPI PUSH9 0x100000002C5C85FE3 MUL PUSH1 0x40 SHR JUMPDEST PUSH5 0x200000000 DUP3 AND ISZERO PUSH2 0x2DB5 JUMPI PUSH9 0x10000000162E42FF1 MUL PUSH1 0x40 SHR JUMPDEST PUSH1 0x1 PUSH1 0x20 SHL DUP3 AND ISZERO PUSH2 0x2DD0 JUMPI PUSH9 0x100000000B17217F8 MUL PUSH1 0x40 SHR JUMPDEST PUSH4 0x80000000 DUP3 AND ISZERO PUSH2 0x2DEB JUMPI PUSH9 0x10000000058B90BFC MUL PUSH1 0x40 SHR JUMPDEST PUSH4 0x40000000 DUP3 AND ISZERO PUSH2 0x2E06 JUMPI PUSH9 0x1000000002C5C85FE MUL PUSH1 0x40 SHR JUMPDEST PUSH4 0x20000000 DUP3 AND ISZERO PUSH2 0x2E21 JUMPI PUSH9 0x100000000162E42FF MUL PUSH1 0x40 SHR JUMPDEST PUSH4 0x10000000 DUP3 AND ISZERO PUSH2 0x2E3C JUMPI PUSH9 0x1000000000B17217F MUL PUSH1 0x40 SHR JUMPDEST PUSH4 0x8000000 DUP3 AND ISZERO PUSH2 0x2E57 JUMPI PUSH9 0x100000000058B90C0 MUL PUSH1 0x40 SHR JUMPDEST PUSH4 0x4000000 DUP3 AND ISZERO PUSH2 0x2E72 JUMPI PUSH9 0x10000000002C5C860 MUL PUSH1 0x40 SHR JUMPDEST PUSH4 0x2000000 DUP3 AND ISZERO PUSH2 0x2E8D JUMPI PUSH9 0x1000000000162E430 MUL PUSH1 0x40 SHR JUMPDEST PUSH4 0x1000000 DUP3 AND ISZERO PUSH2 0x2EA8 JUMPI PUSH9 0x10000000000B17218 MUL PUSH1 0x40 SHR JUMPDEST PUSH3 0x800000 DUP3 AND ISZERO PUSH2 0x2EC2 JUMPI PUSH9 0x1000000000058B90C MUL PUSH1 0x40 SHR JUMPDEST PUSH3 0x400000 DUP3 AND ISZERO PUSH2 0x2EDC JUMPI PUSH9 0x100000000002C5C86 MUL PUSH1 0x40 SHR JUMPDEST PUSH3 0x200000 DUP3 AND ISZERO PUSH2 0x2EF6 JUMPI PUSH9 0x10000000000162E43 MUL PUSH1 0x40 SHR JUMPDEST PUSH3 0x100000 DUP3 AND ISZERO PUSH2 0x2F10 JUMPI PUSH9 0x100000000000B1721 MUL PUSH1 0x40 SHR JUMPDEST PUSH3 0x80000 DUP3 AND ISZERO PUSH2 0x2F2A JUMPI PUSH9 0x10000000000058B91 MUL PUSH1 0x40 SHR JUMPDEST PUSH3 0x40000 DUP3 AND ISZERO PUSH2 0x2F44 JUMPI PUSH9 0x1000000000002C5C8 MUL PUSH1 0x40 SHR JUMPDEST PUSH3 0x20000 DUP3 AND ISZERO PUSH2 0x2F5E JUMPI PUSH9 0x100000000000162E4 MUL PUSH1 0x40 SHR JUMPDEST PUSH3 0x10000 DUP3 AND ISZERO PUSH2 0x2F78 JUMPI PUSH9 0x1000000000000B172 MUL PUSH1 0x40 SHR JUMPDEST PUSH2 0x8000 DUP3 AND ISZERO PUSH2 0x2F91 JUMPI PUSH9 0x100000000000058B9 MUL PUSH1 0x40 SHR JUMPDEST PUSH2 0x4000 DUP3 AND ISZERO PUSH2 0x2FAA JUMPI PUSH9 0x10000000000002C5D MUL PUSH1 0x40 SHR JUMPDEST PUSH2 0x2000 DUP3 AND ISZERO PUSH2 0x2FC3 JUMPI PUSH9 0x1000000000000162E MUL PUSH1 0x40 SHR JUMPDEST PUSH2 0x1000 DUP3 AND ISZERO PUSH2 0x2FDC JUMPI PUSH9 0x10000000000000B17 MUL PUSH1 0x40 SHR JUMPDEST PUSH2 0x800 DUP3 AND ISZERO PUSH2 0x2FF5 JUMPI PUSH9 0x1000000000000058C MUL PUSH1 0x40 SHR JUMPDEST PUSH2 0x400 DUP3 AND ISZERO PUSH2 0x300E JUMPI PUSH9 0x100000000000002C6 MUL PUSH1 0x40 SHR JUMPDEST PUSH2 0x200 DUP3 AND ISZERO PUSH2 0x3027 JUMPI PUSH9 0x10000000000000163 MUL PUSH1 0x40 SHR JUMPDEST PUSH2 0x100 DUP3 AND ISZERO PUSH2 0x3040 JUMPI PUSH9 0x100000000000000B1 MUL PUSH1 0x40 SHR JUMPDEST PUSH1 0x80 DUP3 AND ISZERO PUSH2 0x3058 JUMPI PUSH9 0x10000000000000059 MUL PUSH1 0x40 SHR JUMPDEST PUSH1 0x40 DUP3 AND ISZERO PUSH2 0x3070 JUMPI PUSH9 0x1000000000000002C MUL PUSH1 0x40 SHR JUMPDEST PUSH1 0x20 DUP3 AND ISZERO PUSH2 0x3088 JUMPI PUSH9 0x10000000000000016 MUL PUSH1 0x40 SHR JUMPDEST PUSH1 0x10 DUP3 AND ISZERO PUSH2 0x30A0 JUMPI PUSH9 0x1000000000000000B MUL PUSH1 0x40 SHR JUMPDEST PUSH1 0x8 DUP3 AND ISZERO PUSH2 0x30B8 JUMPI PUSH9 0x10000000000000006 MUL PUSH1 0x40 SHR JUMPDEST PUSH1 0x4 DUP3 AND ISZERO PUSH2 0x30D0 JUMPI PUSH9 0x10000000000000003 MUL PUSH1 0x40 SHR JUMPDEST PUSH1 0x2 DUP3 AND ISZERO PUSH2 0x30E8 JUMPI PUSH9 0x10000000000000001 MUL PUSH1 0x40 SHR JUMPDEST PUSH1 0x1 DUP3 AND ISZERO PUSH2 0x3100 JUMPI PUSH9 0x10000000000000001 MUL PUSH1 0x40 SHR JUMPDEST PUSH8 0xDE0B6B3A7640000 MUL PUSH1 0x40 SWAP2 SWAP1 SWAP2 SHR PUSH1 0xBF SUB SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3144 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x3128 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x3156 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2955 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x319F DUP4 PUSH2 0x316C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x31C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31CB DUP5 PUSH2 0x316C JUMP JUMPDEST SWAP3 POP PUSH2 0x31D9 PUSH1 0x20 DUP6 ADD PUSH2 0x316C JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90C DUP3 PUSH2 0x316C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x326B PUSH1 0x40 DUP6 ADD PUSH2 0x316C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2955 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x329E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32A7 DUP8 PUSH2 0x316C JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x32C3 PUSH1 0x60 DUP9 ADD PUSH2 0x3274 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x32F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3301 DUP9 PUSH2 0x316C JUMP JUMPDEST SWAP7 POP PUSH2 0x330F PUSH1 0x20 DUP10 ADD PUSH2 0x316C JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x332B PUSH1 0x80 DUP10 ADD PUSH2 0x3274 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x335A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3363 DUP4 PUSH2 0x316C JUMP JUMPDEST SWAP2 POP PUSH2 0x3371 PUSH1 0x20 DUP5 ADD PUSH2 0x316C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x338D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3396 DUP4 PUSH2 0x316C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x33AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x90C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x341B JUMPI PUSH2 0x341B PUSH2 0x33F2 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3432 JUMPI PUSH2 0x3432 PUSH2 0x33F2 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3451 JUMPI PUSH2 0x3451 PUSH2 0x33F2 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3473 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x348A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0xD6E82D4E8CCA42A179C5734C7298EB98AF18BE81E558 0xC SWAP6 0xB4 0x26 0x2E DUP2 PUSH20 0x835F64736F6C634300080A003300000000000000 ", "sha1": "1f4900479b134d1a37412e8a89f4984dccaf8f71", "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.10;\nimport {ERC20Votes} from \"OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/extensions/ERC20Votes.sol\";\nimport {ERC20Permit} from \"OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\";\nimport {ERC20} from \"OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/ERC20.sol\";\nimport {PRBMathUD60x18} from \"paulrberg/prb-math@2.5.0/contracts/PRBMathUD60x18.sol\";\nimport {RewardsSource} from \"./RewardsSource.sol\";\n\n/// @title OGV Staking\n/// @author Daniel Von Fange\n/// @notice Provides staking, vote power history, vote delegation, and rewards\n/// distribution.\n///\n/// The balance received for staking (and thus the voting power and rewards\n/// distribution) goes up exponentially by the end of the staked period.\ncontract OgvStaking is ERC20Votes {\n    // 1. Core Storage\n    uint256 public immutable epoch;\n\n    // 2. Staking and Lockup Storage\n    uint256 constant YEAR_BASE = 18e17;\n    struct Lockup {\n        uint128 amount;\n        uint128 end;\n        uint256 points;\n    }\n    mapping(address => Lockup[]) public lockups;\n\n    // 3. Reward Storage\n    ERC20 public immutable ogv; // Must not allow reentrancy\n    RewardsSource public immutable rewardsSource;\n    mapping(address => uint256) public rewardDebtPerShare;\n    uint256 public accRewardPerShare; // As of the start of the block\n\n    // Events\n    event Stake(\n        address indexed user,\n        uint256 lockupId,\n        uint256 amount,\n        uint256 end,\n        uint256 points\n    );\n    event Unstake(\n        address indexed user,\n        uint256 lockupId,\n        uint256 amount,\n        uint256 end,\n        uint256 points\n    );\n    event Reward(address indexed user, uint256 amount);\n\n    // 1. Core Functions\n\n    constructor(\n        address ogv_,\n        uint256 epoch_,\n        address rewardsSource_\n    ) ERC20(\"\", \"\") ERC20Permit(\"veOGV\") {\n        ogv = ERC20(ogv_);\n        epoch = epoch_;\n        rewardsSource = RewardsSource(rewardsSource_);\n    }\n\n    function name() public pure override returns (string memory) {\n        return \"veOGV\";\n    }\n\n    function symbol() public pure override returns (string memory) {\n        return \"veOGV\";\n    }\n\n    function transfer(address, uint256) public override returns (bool) {\n        revert(\"Staking: Transfers disabled\");\n    }\n\n    function transferFrom(\n        address,\n        address,\n        uint256\n    ) public override returns (bool) {\n        revert(\"Staking: Transfers disabled\");\n    }\n\n    // 2. Staking and Lockup Functions\n\n    /// @notice Stake OGV to an address that may not be the same as the\n    /// sender of the funds. This can be used to give staked funds to someone\n    /// else.\n    ///\n    /// If staking before the start of staking (epoch), then the lockup start\n    /// and end dates are shifted forward so that the lockup starts at the\n    /// epoch.\n    ///\n    /// Any rewards previously earned will be paid out.\n    ///\n    /// @param amount OGV to lockup in the stake\n    /// @param duration in seconds for the stake\n    /// @param to address to receive ownership of the stake\n    function stake(\n        uint256 amount,\n        uint256 duration,\n        address to\n    ) external {\n        _stake(amount, duration, to);\n    }\n\n    /// @notice Stake OGV\n    ///\n    /// If staking before the start of staking (epoch), then the lockup start\n    /// and end dates are shifted forward so that the lockup starts at the\n    /// epoch.\n    ///\n    /// Any rewards previously earned will be paid out.\n    ///\n    /// @notice Stake OGV for myself.\n    /// @param amount OGV to lockup in the stake\n    /// @param duration in seconds for the stake\n    function stake(uint256 amount, uint256 duration) external {\n        _stake(amount, duration, msg.sender);\n    }\n\n    /// @dev Internal method used for public staking\n    /// @param amount OGV to lockup in the stake\n    /// @param duration in seconds for the stake\n    /// @param to address to receive ownership of the stake\n    function _stake(\n        uint256 amount,\n        uint256 duration,\n        address to\n    ) internal {\n        require(to != address(0), \"Staking: To the zero address\");\n        require(amount <= type(uint128).max, \"Staking: Too much\");\n        require(amount > 0, \"Staking: Not enough\");\n        // duration checked inside previewPoints\n        (uint256 points, uint256 end) = previewPoints(amount, duration);\n        require(\n            points + totalSupply() <= type(uint192).max,\n            \"Staking: Max points exceeded\"\n        );\n        _collectRewards(to);\n        lockups[to].push(\n            Lockup({\n                amount: uint128(amount), // max checked in require above\n                end: uint128(end),\n                points: points\n            })\n        );\n        _mint(to, points);\n        ogv.transferFrom(msg.sender, address(this), amount); // Important that it's sender\n        emit Stake(to, lockups[to].length - 1, amount, end, points);\n    }\n\n    /// @notice Collect staked OGV for a lockup and any earned rewards.\n    /// @param lockupId the id of the lockup to unstake\n    function unstake(uint256 lockupId) external {\n        Lockup memory lockup = lockups[msg.sender][lockupId];\n        uint256 amount = lockup.amount;\n        uint256 end = lockup.end;\n        uint256 points = lockup.points;\n        require(block.timestamp >= end, \"Staking: End of lockup not reached\");\n        require(end != 0, \"Staking: Already unstaked this lockup\");\n        _collectRewards(msg.sender);\n        delete lockups[msg.sender][lockupId]; // Keeps empty in array, so indexes are stable\n        _burn(msg.sender, points);\n        ogv.transfer(msg.sender, amount);\n        emit Unstake(msg.sender, lockupId, amount, end, points);\n    }\n\n    /// @notice Extend a stake lockup for additional points.\n    ///\n    /// The stake end time is computed from the current time + duration, just\n    /// like it is for new stakes. So a new stake for seven days duration and\n    /// an old stake extended with a seven days duration would have the same\n    /// end.\n    ///\n    /// If an extend is made before the start of staking, the start time for\n    /// the new stake is shifted forwards to the start of staking, which also\n    /// shifts forward the end date.\n    ///\n    /// @param lockupId the id of the old lockup to extend\n    /// @param duration number of seconds from now to stake for\n    function extend(uint256 lockupId, uint256 duration) external {\n        // duration checked inside previewPoints\n        _collectRewards(msg.sender);\n        Lockup memory lockup = lockups[msg.sender][lockupId];\n        uint256 oldAmount = lockup.amount;\n        uint256 oldEnd = lockup.end;\n        uint256 oldPoints = lockup.points;\n        (uint256 newPoints, uint256 newEnd) = previewPoints(\n            oldAmount,\n            duration\n        );\n        require(newEnd > oldEnd, \"Staking: New lockup must be longer\");\n        lockup.end = uint128(newEnd);\n        lockup.points = newPoints;\n        lockups[msg.sender][lockupId] = lockup;\n        _mint(msg.sender, newPoints - oldPoints);\n        emit Unstake(msg.sender, lockupId, oldAmount, oldEnd, oldPoints);\n        emit Stake(msg.sender, lockupId, oldAmount, newEnd, newPoints);\n    }\n\n    /// @notice Preview the number of points that would be returned for the\n    /// given amount and duration.\n    ///\n    /// @param amount OGV to be staked\n    /// @param duration number of seconds to stake for\n    /// @return points staking points that would be returned\n    /// @return end staking period end date\n    function previewPoints(uint256 amount, uint256 duration)\n        public\n        view\n        returns (uint256, uint256)\n    {\n        require(duration >= 7 days, \"Staking: Too short\");\n        require(duration <= 1461 days, \"Staking: Too long\");\n        uint256 start = block.timestamp > epoch ? block.timestamp : epoch;\n        uint256 end = start + duration;\n        uint256 endYearpoc = ((end - epoch) * 1e18) / 365 days;\n        uint256 multiplier = PRBMathUD60x18.pow(YEAR_BASE, endYearpoc);\n        return ((amount * multiplier) / 1e18, end);\n    }\n\n    // 3. Reward functions\n\n    /// @notice Collect all earned OGV rewards.\n    function collectRewards() external {\n        _collectRewards(msg.sender);\n    }\n\n    /// @notice Shows the amount of OGV a user would receive if they collected\n    /// rewards at this time.\n    ///\n    /// @param user to preview rewards for\n    /// @return OGV rewards amount\n    function previewRewards(address user) external view returns (uint256) {\n        uint256 supply = totalSupply();\n        if (supply == 0) {\n            return 0; // No one has any points to even get rewards\n        }\n        uint256 _accRewardPerShare = accRewardPerShare;\n        _accRewardPerShare += (rewardsSource.previewRewards() * 1e12) / supply;\n        uint256 netRewardsPerShare = _accRewardPerShare -\n            rewardDebtPerShare[user];\n        return (balanceOf(user) * netRewardsPerShare) / 1e12;\n    }\n\n    /// @dev Internal function to handle rewards accounting.\n    ///\n    /// 1. Collect new rewards for everyone\n    /// 2. Calculate this user's rewards and accounting\n    /// 3. Distribute this user's rewards\n    ///\n    /// This function *must* be called before any user balance changes.\n    ///\n    /// This will always update the user's rewardDebtPerShare to match\n    /// accRewardPerShare, which is essential to the accounting.\n    ///\n    /// @param user to collect rewards for\n    function _collectRewards(address user) internal {\n        uint256 supply = totalSupply();\n        if (supply > 0) {\n            uint256 preBalance = ogv.balanceOf(address(this));\n            try rewardsSource.collectRewards() {} catch {\n                // Governance staking should continue, even if rewards fail\n            }\n            uint256 collected = ogv.balanceOf(address(this)) - preBalance;\n            accRewardPerShare += (collected * 1e12) / supply;\n        }\n        uint256 netRewardsPerShare = accRewardPerShare -\n            rewardDebtPerShare[user];\n        uint256 netRewards = (balanceOf(user) * netRewardsPerShare) / 1e12;\n        rewardDebtPerShare[user] = accRewardPerShare;\n        if (netRewards == 0) {\n            return;\n        }\n        ogv.transfer(user, netRewards);\n        emit Reward(user, netRewards);\n    }\n}\n", "sourceMap": "837:9568:18:-:0;;;1820:244;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1835:52:5;;;;;;;;;;;;;-1:-1:-1;;;1835:52:5;;;1874:4;2455:602:12;;;;;;;;;;;;;-1:-1:-1;;;2455:602:12;;;1978:113:1;;;;;;;;;;;;;;;;;;;;;;;;2052:5;2044;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2067:17:1;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2541:22:12;;;;;;;;;;2597:25;;;;;;2778;;;;2813:31;;;;2873:13;2854:32;;;;-1:-1:-1;3633:73:12;;2651:117;3633:73;;;814:25:23;;;855:18;;;848:34;;;-1:-1:-1;898:18:23;;891:34;;;941:18;;;934:34;;;;3700:4:12;984:19:23;;;977:61;3633:73:12;;;;;;;;;;786:19:23;;3633:73:12;;3623:84;;;;;;;;2541:22;;-1:-1:-1;2597:25:12;2651:117;2896:85;;3014:4;2991:28;;3029:21;;-1:-1:-1;;;;;;;;;1961:17:18;;::::2;;::::0;-1:-1:-1;1988:14:18::2;::::0;;;;2012:45:::2;;::::0;837:9568;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;837:9568:18;;;-1:-1:-1;837:9568:18;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:23;93:13;;-1:-1:-1;;;;;135:31:23;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:354::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;472:2;461:9;457:18;451:25;441:35;;495:49;540:2;529:9;525:18;495:49;:::i;:::-;485:59;;196:354;;;;;:::o;1049:380::-;1128:1;1124:12;;;;1171;;;1192:61;;1246:4;1238:6;1234:17;1224:27;;1192:61;1299:2;1291:6;1288:14;1268:18;1265:38;1262:161;;;1345:10;1340:3;1336:20;1333:1;1326:31;1380:4;1377:1;1370:15;1408:4;1405:1;1398:15;1262:161;;1049:380;;;:::o;:::-;837:9568:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/OgvStaking.sol", "type": "contract", "deployment": {"address": "0x63B84F186D9887EC2FD869fA8E7D02309bA1579F", "chainid": "4", "blockHeight": 10973525}}